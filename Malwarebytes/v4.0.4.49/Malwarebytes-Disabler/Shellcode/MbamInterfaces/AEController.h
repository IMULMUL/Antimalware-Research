

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.01.0622 */
/* at Tue Jan 19 14:14:07 2038
 */
/* Compiler settings for C:\Users\User\source\repos\MBAMExploit\Typelibs\AEController.IDL:
    Oicf, W1, Zp8, env=Win64 (32b run), target_arch=AMD64 8.01.0622 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#include "CleanController.h"
#include "CloudController.h"
#include "LicenseController.h"
#include "LogController.h"
#include "TelemetryController.h"
#include "UpdateController.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */


#ifndef __AEController_h__
#define __AEController_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IAEController_FWD_DEFINED__
#define __IAEController_FWD_DEFINED__
typedef interface IAEController IAEController;

#endif 	/* __IAEController_FWD_DEFINED__ */


#ifndef __IAEControllerV2_FWD_DEFINED__
#define __IAEControllerV2_FWD_DEFINED__
typedef interface IAEControllerV2 IAEControllerV2;

#endif 	/* __IAEControllerV2_FWD_DEFINED__ */


#ifndef __IAEControllerV3_FWD_DEFINED__
#define __IAEControllerV3_FWD_DEFINED__
typedef interface IAEControllerV3 IAEControllerV3;

#endif 	/* __IAEControllerV3_FWD_DEFINED__ */


#ifndef __IAEControllerV4_FWD_DEFINED__
#define __IAEControllerV4_FWD_DEFINED__
typedef interface IAEControllerV4 IAEControllerV4;

#endif 	/* __IAEControllerV4_FWD_DEFINED__ */


#ifndef __IAEControllerV5_FWD_DEFINED__
#define __IAEControllerV5_FWD_DEFINED__
typedef interface IAEControllerV5 IAEControllerV5;

#endif 	/* __IAEControllerV5_FWD_DEFINED__ */


#ifndef __IAEControllerEvents_FWD_DEFINED__
#define __IAEControllerEvents_FWD_DEFINED__
typedef interface IAEControllerEvents IAEControllerEvents;

#endif 	/* __IAEControllerEvents_FWD_DEFINED__ */


#ifndef ___IAEControllerEvents_FWD_DEFINED__
#define ___IAEControllerEvents_FWD_DEFINED__
typedef interface _IAEControllerEvents _IAEControllerEvents;

#endif 	/* ___IAEControllerEvents_FWD_DEFINED__ */


#ifndef __IAEControllerEventsV2_FWD_DEFINED__
#define __IAEControllerEventsV2_FWD_DEFINED__
typedef interface IAEControllerEventsV2 IAEControllerEventsV2;

#endif 	/* __IAEControllerEventsV2_FWD_DEFINED__ */


#ifndef ___IAEControllerEventsV2_FWD_DEFINED__
#define ___IAEControllerEventsV2_FWD_DEFINED__
typedef interface _IAEControllerEventsV2 _IAEControllerEventsV2;

#endif 	/* ___IAEControllerEventsV2_FWD_DEFINED__ */


#ifndef __IAEControllerEventsV3_FWD_DEFINED__
#define __IAEControllerEventsV3_FWD_DEFINED__
typedef interface IAEControllerEventsV3 IAEControllerEventsV3;

#endif 	/* __IAEControllerEventsV3_FWD_DEFINED__ */


#ifndef ___IAEControllerEventsV3_FWD_DEFINED__
#define ___IAEControllerEventsV3_FWD_DEFINED__
typedef interface _IAEControllerEventsV3 _IAEControllerEventsV3;

#endif 	/* ___IAEControllerEventsV3_FWD_DEFINED__ */


#ifndef __IAEControllerEventsV4_FWD_DEFINED__
#define __IAEControllerEventsV4_FWD_DEFINED__
typedef interface IAEControllerEventsV4 IAEControllerEventsV4;

#endif 	/* __IAEControllerEventsV4_FWD_DEFINED__ */


#ifndef ___IAEControllerEventsV4_FWD_DEFINED__
#define ___IAEControllerEventsV4_FWD_DEFINED__
typedef interface _IAEControllerEventsV4 _IAEControllerEventsV4;

#endif 	/* ___IAEControllerEventsV4_FWD_DEFINED__ */


#ifndef __AEController_FWD_DEFINED__
#define __AEController_FWD_DEFINED__

#ifdef __cplusplus
typedef class AEController AEController;
#else
typedef struct AEController AEController;
#endif /* __cplusplus */

#endif 	/* __AEController_FWD_DEFINED__ */


#ifdef __cplusplus
extern "C"{
#endif 



#ifndef __AEControllerCOMLib_LIBRARY_DEFINED__
#define __AEControllerCOMLib_LIBRARY_DEFINED__

/* library AEControllerCOMLib */
/* [custom][custom][custom][version][uuid] */ 














typedef /* [public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_AEController_0000_0000_0001
    {
        L0DEP	= 0,
        L0DEPHDLR	= 1,
        L0AH	= 2,
        L0BASLR	= 3,
        L0VB_DISABLE	= 4,
        L0XMLHTTP	= 5,
        L0DAH	= 6,
        L1DEP	= 7,
        L1WPM	= 8,
        L1PIV	= 9,
        L1ROPC32	= 10,
        L1ROPR32	= 11,
        L1STK32	= 12,
        L1ROPC64	= 13,
        L1ROPR64	= 14,
        L1STK64	= 15,
        L2CALLER	= 16,
        L3DLL	= 17,
        L3FILE	= 18,
        L3PROCESS	= 19,
        L3VB_EXEC	= 20,
        L3MSGBOX	= 21,
        L3JAVAIN	= 22,
        L3JAVASOCK	= 23,
        L3JAVAOUT	= 24,
        L3JAVACMD	= 25,
        L3JAVAINTRANET	= 26,
        L3OFFICE_WMI	= 27,
        L3JAVACMD2	= 28,
        L3OFFICE_VBA7	= 29,
        MaxOptionName	= 30
    } 	_AeOptionName;

typedef /* [public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_AEController_0000_0000_0002
    {
        FamilyWebBrowser	= 0,
        FamilyOffice	= 1,
        FamilyMultimedia	= 2,
        FamilyPdfReader	= 3,
        FamilySuspicious	= 4,
        FamilyJava	= 5,
        FamilyTest	= 6,
        FamilyObserver	= 7,
        FamilyOther	= 8,
        FamilyChromeBrowser	= 9,
        FamilyKill	= 10
    } 	_AeAppFamilyId;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_AEController_0000_0000_0003
    {
        AeStateIdle	= 0,
        AeStateEnabled	= 1,
        AeStateDisabled	= 2,
        AeStateError	= 3,
        AeStateNotAvailable	= 4,
        AeStateNotSupported	= 5
    } 	_AeState;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_AEController_0001_0001_0001
    {
        AeManualStop	= 0,
        AeSystemStop	= 1
    } 	_AeStopType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_AEController_0001_0003_0001
    {
        AeStatusInactive	= 0,
        AeStatusInitializing	= 1,
        AeStatusStarting	= 2,
        AeStatusStarted	= 3,
        AeStatusStopping	= 4,
        AeStatusStopped	= 5,
        AeStatusError	= 6,
        AeStatusNeedsReboot	= 7
    } 	_AeStatus;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_AEController_0001_0004_0001
    {
        AeExclusionAdded	= 0,
        AeExclusionRemoved	= 1,
        AeExclusionsCleared	= 2
    } 	_AeExclusionEventType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_AEController_0001_0004_0002
    {
        AeExploitFileAdded	= 0,
        AeExploitFileRemoved	= 1,
        AeExploitListCleared	= 2
    } 	_AeExploitListEventType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_AEController_0001_0004_0003
    {
        AeProtectedAppAdded	= 0,
        AeProtectedAppRemoved	= 1,
        AeProtectedAppUpdated	= 2,
        AeProtectedAppsCleared	= 3
    } 	_AeProtectedAppEventType;


EXTERN_C const IID LIBID_AEControllerCOMLib;

#ifndef __IAEController_INTERFACE_DEFINED__
#define __IAEController_INTERFACE_DEFINED__

/* interface IAEController */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IAEController;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EAB53395-8218-47FF-91B7-144994C0AD83")
    IAEController : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Start( 
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ long delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ BSTR pProductVersion) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PrepareUpdate( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FinishUpdate( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StartProtection( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StopProtection( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetState( 
            /* [retval][out] */ _AeState *state) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetAeOption( 
            /* [in] */ _AeOptionName optionName,
            /* [in] */ long option) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetAeOption( 
            /* [in] */ _AeOptionName optionName,
            /* [retval][out] */ long *option) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetAeOptionValidFamilies( 
            /* [in] */ _AeOptionName optionName,
            /* [retval][out] */ long *familyFlags) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetAeDefaultOptions( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddProtectedApp( 
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddProtectedAppEx( 
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded,
            /* [out] */ BSTR *ppId) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RemoveProtectedApp( 
            /* [in] */ BSTR appId) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ModProtectedApp( 
            /* [in] */ BSTR appId,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNumProtectedApps( 
            /* [retval][out] */ long *numProtectedApps) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetProtectedAppIDs( 
            /* [retval][out] */ SAFEARRAY * *ppAppIds) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetProtectedApp( 
            /* [in] */ BSTR appId,
            /* [out] */ BSTR *appDisplayName,
            /* [out] */ BSTR *fileName,
            /* [out] */ _AeAppFamilyId *family,
            /* [out] */ VARIANT_BOOL *shielded,
            /* [out] */ VARIANT_BOOL *hidden,
            /* [out] */ VARIANT_BOOL *userApp) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ClearProtectedApps( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddExclusion( 
            /* [in] */ BSTR exclusionHash,
            /* [in] */ BSTR exclusionPath) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddExclusionEx( 
            /* [in] */ BSTR exclusionHash,
            /* [in] */ BSTR exclusionPath,
            /* [out] */ BSTR *exclusionId) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RemoveExclusion( 
            /* [in] */ BSTR exclusionId) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNumExclusions( 
            /* [retval][out] */ long *numExclusions) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetExclusionIDs( 
            /* [retval][out] */ SAFEARRAY * *ppExclusionIds) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetExclusion( 
            /* [in] */ BSTR exclusionId,
            /* [out] */ BSTR *exclusionHash,
            /* [out] */ BSTR *exclusionPath) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ClearExclusions( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNumExploits( 
            /* [retval][out] */ long *numExploits) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetExploitIDs( 
            /* [retval][out] */ SAFEARRAY * *ppExploitIds) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetExploit( 
            /* [in] */ BSTR exploitId,
            /* [out] */ BSTR *exploitHash,
            /* [out] */ BSTR *exploitPath) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TotalExploitsBlocked( 
            /* [retval][out] */ UINT64 *blocked) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_TotalExploitsBlocked( 
            /* [in] */ UINT64 blocked) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ProcessBrowserCacheFileList( 
            /* [in] */ BSTR BlockId,
            /* [in] */ BSTR cacheFileListFilename) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetAllAeOptions( 
            /* [in] */ SAFEARRAY * allOptions) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetAllAeOptions( 
            /* [retval][out] */ SAFEARRAY * *allOptions) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetAllAeOptionValidFamilies( 
            /* [retval][out] */ SAFEARRAY * *allFamilyFlags) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IAEControllerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAEController * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAEController * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAEController * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAEController * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAEController * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAEController * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAEController * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IAEController * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ long delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IAEController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IAEController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IAEController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartProtection )( 
            IAEController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopProtection )( 
            IAEController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IAEController * This,
            /* [retval][out] */ _AeState *state);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAeOption )( 
            IAEController * This,
            /* [in] */ _AeOptionName optionName,
            /* [in] */ long option);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAeOption )( 
            IAEController * This,
            /* [in] */ _AeOptionName optionName,
            /* [retval][out] */ long *option);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAeOptionValidFamilies )( 
            IAEController * This,
            /* [in] */ _AeOptionName optionName,
            /* [retval][out] */ long *familyFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAeDefaultOptions )( 
            IAEController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddProtectedApp )( 
            IAEController * This,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddProtectedAppEx )( 
            IAEController * This,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded,
            /* [out] */ BSTR *ppId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveProtectedApp )( 
            IAEController * This,
            /* [in] */ BSTR appId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ModProtectedApp )( 
            IAEController * This,
            /* [in] */ BSTR appId,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumProtectedApps )( 
            IAEController * This,
            /* [retval][out] */ long *numProtectedApps);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetProtectedAppIDs )( 
            IAEController * This,
            /* [retval][out] */ SAFEARRAY * *ppAppIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetProtectedApp )( 
            IAEController * This,
            /* [in] */ BSTR appId,
            /* [out] */ BSTR *appDisplayName,
            /* [out] */ BSTR *fileName,
            /* [out] */ _AeAppFamilyId *family,
            /* [out] */ VARIANT_BOOL *shielded,
            /* [out] */ VARIANT_BOOL *hidden,
            /* [out] */ VARIANT_BOOL *userApp);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearProtectedApps )( 
            IAEController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusion )( 
            IAEController * This,
            /* [in] */ BSTR exclusionHash,
            /* [in] */ BSTR exclusionPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusionEx )( 
            IAEController * This,
            /* [in] */ BSTR exclusionHash,
            /* [in] */ BSTR exclusionPath,
            /* [out] */ BSTR *exclusionId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveExclusion )( 
            IAEController * This,
            /* [in] */ BSTR exclusionId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExclusions )( 
            IAEController * This,
            /* [retval][out] */ long *numExclusions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusionIDs )( 
            IAEController * This,
            /* [retval][out] */ SAFEARRAY * *ppExclusionIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusion )( 
            IAEController * This,
            /* [in] */ BSTR exclusionId,
            /* [out] */ BSTR *exclusionHash,
            /* [out] */ BSTR *exclusionPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearExclusions )( 
            IAEController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExploits )( 
            IAEController * This,
            /* [retval][out] */ long *numExploits);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExploitIDs )( 
            IAEController * This,
            /* [retval][out] */ SAFEARRAY * *ppExploitIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExploit )( 
            IAEController * This,
            /* [in] */ BSTR exploitId,
            /* [out] */ BSTR *exploitHash,
            /* [out] */ BSTR *exploitPath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TotalExploitsBlocked )( 
            IAEController * This,
            /* [retval][out] */ UINT64 *blocked);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TotalExploitsBlocked )( 
            IAEController * This,
            /* [in] */ UINT64 blocked);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ProcessBrowserCacheFileList )( 
            IAEController * This,
            /* [in] */ BSTR BlockId,
            /* [in] */ BSTR cacheFileListFilename);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAllAeOptions )( 
            IAEController * This,
            /* [in] */ SAFEARRAY * allOptions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAllAeOptions )( 
            IAEController * This,
            /* [retval][out] */ SAFEARRAY * *allOptions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAllAeOptionValidFamilies )( 
            IAEController * This,
            /* [retval][out] */ SAFEARRAY * *allFamilyFlags);
        
        END_INTERFACE
    } IAEControllerVtbl;

    interface IAEController
    {
        CONST_VTBL struct IAEControllerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAEController_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAEController_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAEController_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAEController_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAEController_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAEController_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAEController_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAEController_Start(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion) ) 

#define IAEController_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IAEController_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IAEController_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IAEController_StartProtection(This)	\
    ( (This)->lpVtbl -> StartProtection(This) ) 

#define IAEController_StopProtection(This)	\
    ( (This)->lpVtbl -> StopProtection(This) ) 

#define IAEController_GetState(This,state)	\
    ( (This)->lpVtbl -> GetState(This,state) ) 

#define IAEController_SetAeOption(This,optionName,option)	\
    ( (This)->lpVtbl -> SetAeOption(This,optionName,option) ) 

#define IAEController_GetAeOption(This,optionName,option)	\
    ( (This)->lpVtbl -> GetAeOption(This,optionName,option) ) 

#define IAEController_GetAeOptionValidFamilies(This,optionName,familyFlags)	\
    ( (This)->lpVtbl -> GetAeOptionValidFamilies(This,optionName,familyFlags) ) 

#define IAEController_SetAeDefaultOptions(This)	\
    ( (This)->lpVtbl -> SetAeDefaultOptions(This) ) 

#define IAEController_AddProtectedApp(This,appDisplayName,fileName,family,shielded)	\
    ( (This)->lpVtbl -> AddProtectedApp(This,appDisplayName,fileName,family,shielded) ) 

#define IAEController_AddProtectedAppEx(This,appDisplayName,fileName,family,shielded,ppId)	\
    ( (This)->lpVtbl -> AddProtectedAppEx(This,appDisplayName,fileName,family,shielded,ppId) ) 

#define IAEController_RemoveProtectedApp(This,appId)	\
    ( (This)->lpVtbl -> RemoveProtectedApp(This,appId) ) 

#define IAEController_ModProtectedApp(This,appId,appDisplayName,fileName,family,shielded)	\
    ( (This)->lpVtbl -> ModProtectedApp(This,appId,appDisplayName,fileName,family,shielded) ) 

#define IAEController_GetNumProtectedApps(This,numProtectedApps)	\
    ( (This)->lpVtbl -> GetNumProtectedApps(This,numProtectedApps) ) 

#define IAEController_GetProtectedAppIDs(This,ppAppIds)	\
    ( (This)->lpVtbl -> GetProtectedAppIDs(This,ppAppIds) ) 

#define IAEController_GetProtectedApp(This,appId,appDisplayName,fileName,family,shielded,hidden,userApp)	\
    ( (This)->lpVtbl -> GetProtectedApp(This,appId,appDisplayName,fileName,family,shielded,hidden,userApp) ) 

#define IAEController_ClearProtectedApps(This)	\
    ( (This)->lpVtbl -> ClearProtectedApps(This) ) 

#define IAEController_AddExclusion(This,exclusionHash,exclusionPath)	\
    ( (This)->lpVtbl -> AddExclusion(This,exclusionHash,exclusionPath) ) 

#define IAEController_AddExclusionEx(This,exclusionHash,exclusionPath,exclusionId)	\
    ( (This)->lpVtbl -> AddExclusionEx(This,exclusionHash,exclusionPath,exclusionId) ) 

#define IAEController_RemoveExclusion(This,exclusionId)	\
    ( (This)->lpVtbl -> RemoveExclusion(This,exclusionId) ) 

#define IAEController_GetNumExclusions(This,numExclusions)	\
    ( (This)->lpVtbl -> GetNumExclusions(This,numExclusions) ) 

#define IAEController_GetExclusionIDs(This,ppExclusionIds)	\
    ( (This)->lpVtbl -> GetExclusionIDs(This,ppExclusionIds) ) 

#define IAEController_GetExclusion(This,exclusionId,exclusionHash,exclusionPath)	\
    ( (This)->lpVtbl -> GetExclusion(This,exclusionId,exclusionHash,exclusionPath) ) 

#define IAEController_ClearExclusions(This)	\
    ( (This)->lpVtbl -> ClearExclusions(This) ) 

#define IAEController_GetNumExploits(This,numExploits)	\
    ( (This)->lpVtbl -> GetNumExploits(This,numExploits) ) 

#define IAEController_GetExploitIDs(This,ppExploitIds)	\
    ( (This)->lpVtbl -> GetExploitIDs(This,ppExploitIds) ) 

#define IAEController_GetExploit(This,exploitId,exploitHash,exploitPath)	\
    ( (This)->lpVtbl -> GetExploit(This,exploitId,exploitHash,exploitPath) ) 

#define IAEController_get_TotalExploitsBlocked(This,blocked)	\
    ( (This)->lpVtbl -> get_TotalExploitsBlocked(This,blocked) ) 

#define IAEController_put_TotalExploitsBlocked(This,blocked)	\
    ( (This)->lpVtbl -> put_TotalExploitsBlocked(This,blocked) ) 

#define IAEController_ProcessBrowserCacheFileList(This,BlockId,cacheFileListFilename)	\
    ( (This)->lpVtbl -> ProcessBrowserCacheFileList(This,BlockId,cacheFileListFilename) ) 

#define IAEController_SetAllAeOptions(This,allOptions)	\
    ( (This)->lpVtbl -> SetAllAeOptions(This,allOptions) ) 

#define IAEController_GetAllAeOptions(This,allOptions)	\
    ( (This)->lpVtbl -> GetAllAeOptions(This,allOptions) ) 

#define IAEController_GetAllAeOptionValidFamilies(This,allFamilyFlags)	\
    ( (This)->lpVtbl -> GetAllAeOptionValidFamilies(This,allFamilyFlags) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAEController_INTERFACE_DEFINED__ */


#ifndef __IAEControllerV2_INTERFACE_DEFINED__
#define __IAEControllerV2_INTERFACE_DEFINED__

/* interface IAEControllerV2 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IAEControllerV2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("893E5593-9490-4E90-9F1E-0B786EC41470")
    IAEControllerV2 : public IAEController
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StartV2( 
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ long delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductBuild) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IAEControllerV2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAEControllerV2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAEControllerV2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAEControllerV2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAEControllerV2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAEControllerV2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAEControllerV2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAEControllerV2 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IAEControllerV2 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ long delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IAEControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IAEControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IAEControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartProtection )( 
            IAEControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopProtection )( 
            IAEControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IAEControllerV2 * This,
            /* [retval][out] */ _AeState *state);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAeOption )( 
            IAEControllerV2 * This,
            /* [in] */ _AeOptionName optionName,
            /* [in] */ long option);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAeOption )( 
            IAEControllerV2 * This,
            /* [in] */ _AeOptionName optionName,
            /* [retval][out] */ long *option);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAeOptionValidFamilies )( 
            IAEControllerV2 * This,
            /* [in] */ _AeOptionName optionName,
            /* [retval][out] */ long *familyFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAeDefaultOptions )( 
            IAEControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddProtectedApp )( 
            IAEControllerV2 * This,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddProtectedAppEx )( 
            IAEControllerV2 * This,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded,
            /* [out] */ BSTR *ppId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveProtectedApp )( 
            IAEControllerV2 * This,
            /* [in] */ BSTR appId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ModProtectedApp )( 
            IAEControllerV2 * This,
            /* [in] */ BSTR appId,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumProtectedApps )( 
            IAEControllerV2 * This,
            /* [retval][out] */ long *numProtectedApps);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetProtectedAppIDs )( 
            IAEControllerV2 * This,
            /* [retval][out] */ SAFEARRAY * *ppAppIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetProtectedApp )( 
            IAEControllerV2 * This,
            /* [in] */ BSTR appId,
            /* [out] */ BSTR *appDisplayName,
            /* [out] */ BSTR *fileName,
            /* [out] */ _AeAppFamilyId *family,
            /* [out] */ VARIANT_BOOL *shielded,
            /* [out] */ VARIANT_BOOL *hidden,
            /* [out] */ VARIANT_BOOL *userApp);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearProtectedApps )( 
            IAEControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusion )( 
            IAEControllerV2 * This,
            /* [in] */ BSTR exclusionHash,
            /* [in] */ BSTR exclusionPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusionEx )( 
            IAEControllerV2 * This,
            /* [in] */ BSTR exclusionHash,
            /* [in] */ BSTR exclusionPath,
            /* [out] */ BSTR *exclusionId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveExclusion )( 
            IAEControllerV2 * This,
            /* [in] */ BSTR exclusionId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExclusions )( 
            IAEControllerV2 * This,
            /* [retval][out] */ long *numExclusions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusionIDs )( 
            IAEControllerV2 * This,
            /* [retval][out] */ SAFEARRAY * *ppExclusionIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusion )( 
            IAEControllerV2 * This,
            /* [in] */ BSTR exclusionId,
            /* [out] */ BSTR *exclusionHash,
            /* [out] */ BSTR *exclusionPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearExclusions )( 
            IAEControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExploits )( 
            IAEControllerV2 * This,
            /* [retval][out] */ long *numExploits);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExploitIDs )( 
            IAEControllerV2 * This,
            /* [retval][out] */ SAFEARRAY * *ppExploitIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExploit )( 
            IAEControllerV2 * This,
            /* [in] */ BSTR exploitId,
            /* [out] */ BSTR *exploitHash,
            /* [out] */ BSTR *exploitPath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TotalExploitsBlocked )( 
            IAEControllerV2 * This,
            /* [retval][out] */ UINT64 *blocked);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TotalExploitsBlocked )( 
            IAEControllerV2 * This,
            /* [in] */ UINT64 blocked);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ProcessBrowserCacheFileList )( 
            IAEControllerV2 * This,
            /* [in] */ BSTR BlockId,
            /* [in] */ BSTR cacheFileListFilename);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAllAeOptions )( 
            IAEControllerV2 * This,
            /* [in] */ SAFEARRAY * allOptions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAllAeOptions )( 
            IAEControllerV2 * This,
            /* [retval][out] */ SAFEARRAY * *allOptions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAllAeOptionValidFamilies )( 
            IAEControllerV2 * This,
            /* [retval][out] */ SAFEARRAY * *allFamilyFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            IAEControllerV2 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ long delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductBuild);
        
        END_INTERFACE
    } IAEControllerV2Vtbl;

    interface IAEControllerV2
    {
        CONST_VTBL struct IAEControllerV2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAEControllerV2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAEControllerV2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAEControllerV2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAEControllerV2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAEControllerV2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAEControllerV2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAEControllerV2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAEControllerV2_Start(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion) ) 

#define IAEControllerV2_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IAEControllerV2_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IAEControllerV2_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IAEControllerV2_StartProtection(This)	\
    ( (This)->lpVtbl -> StartProtection(This) ) 

#define IAEControllerV2_StopProtection(This)	\
    ( (This)->lpVtbl -> StopProtection(This) ) 

#define IAEControllerV2_GetState(This,state)	\
    ( (This)->lpVtbl -> GetState(This,state) ) 

#define IAEControllerV2_SetAeOption(This,optionName,option)	\
    ( (This)->lpVtbl -> SetAeOption(This,optionName,option) ) 

#define IAEControllerV2_GetAeOption(This,optionName,option)	\
    ( (This)->lpVtbl -> GetAeOption(This,optionName,option) ) 

#define IAEControllerV2_GetAeOptionValidFamilies(This,optionName,familyFlags)	\
    ( (This)->lpVtbl -> GetAeOptionValidFamilies(This,optionName,familyFlags) ) 

#define IAEControllerV2_SetAeDefaultOptions(This)	\
    ( (This)->lpVtbl -> SetAeDefaultOptions(This) ) 

#define IAEControllerV2_AddProtectedApp(This,appDisplayName,fileName,family,shielded)	\
    ( (This)->lpVtbl -> AddProtectedApp(This,appDisplayName,fileName,family,shielded) ) 

#define IAEControllerV2_AddProtectedAppEx(This,appDisplayName,fileName,family,shielded,ppId)	\
    ( (This)->lpVtbl -> AddProtectedAppEx(This,appDisplayName,fileName,family,shielded,ppId) ) 

#define IAEControllerV2_RemoveProtectedApp(This,appId)	\
    ( (This)->lpVtbl -> RemoveProtectedApp(This,appId) ) 

#define IAEControllerV2_ModProtectedApp(This,appId,appDisplayName,fileName,family,shielded)	\
    ( (This)->lpVtbl -> ModProtectedApp(This,appId,appDisplayName,fileName,family,shielded) ) 

#define IAEControllerV2_GetNumProtectedApps(This,numProtectedApps)	\
    ( (This)->lpVtbl -> GetNumProtectedApps(This,numProtectedApps) ) 

#define IAEControllerV2_GetProtectedAppIDs(This,ppAppIds)	\
    ( (This)->lpVtbl -> GetProtectedAppIDs(This,ppAppIds) ) 

#define IAEControllerV2_GetProtectedApp(This,appId,appDisplayName,fileName,family,shielded,hidden,userApp)	\
    ( (This)->lpVtbl -> GetProtectedApp(This,appId,appDisplayName,fileName,family,shielded,hidden,userApp) ) 

#define IAEControllerV2_ClearProtectedApps(This)	\
    ( (This)->lpVtbl -> ClearProtectedApps(This) ) 

#define IAEControllerV2_AddExclusion(This,exclusionHash,exclusionPath)	\
    ( (This)->lpVtbl -> AddExclusion(This,exclusionHash,exclusionPath) ) 

#define IAEControllerV2_AddExclusionEx(This,exclusionHash,exclusionPath,exclusionId)	\
    ( (This)->lpVtbl -> AddExclusionEx(This,exclusionHash,exclusionPath,exclusionId) ) 

#define IAEControllerV2_RemoveExclusion(This,exclusionId)	\
    ( (This)->lpVtbl -> RemoveExclusion(This,exclusionId) ) 

#define IAEControllerV2_GetNumExclusions(This,numExclusions)	\
    ( (This)->lpVtbl -> GetNumExclusions(This,numExclusions) ) 

#define IAEControllerV2_GetExclusionIDs(This,ppExclusionIds)	\
    ( (This)->lpVtbl -> GetExclusionIDs(This,ppExclusionIds) ) 

#define IAEControllerV2_GetExclusion(This,exclusionId,exclusionHash,exclusionPath)	\
    ( (This)->lpVtbl -> GetExclusion(This,exclusionId,exclusionHash,exclusionPath) ) 

#define IAEControllerV2_ClearExclusions(This)	\
    ( (This)->lpVtbl -> ClearExclusions(This) ) 

#define IAEControllerV2_GetNumExploits(This,numExploits)	\
    ( (This)->lpVtbl -> GetNumExploits(This,numExploits) ) 

#define IAEControllerV2_GetExploitIDs(This,ppExploitIds)	\
    ( (This)->lpVtbl -> GetExploitIDs(This,ppExploitIds) ) 

#define IAEControllerV2_GetExploit(This,exploitId,exploitHash,exploitPath)	\
    ( (This)->lpVtbl -> GetExploit(This,exploitId,exploitHash,exploitPath) ) 

#define IAEControllerV2_get_TotalExploitsBlocked(This,blocked)	\
    ( (This)->lpVtbl -> get_TotalExploitsBlocked(This,blocked) ) 

#define IAEControllerV2_put_TotalExploitsBlocked(This,blocked)	\
    ( (This)->lpVtbl -> put_TotalExploitsBlocked(This,blocked) ) 

#define IAEControllerV2_ProcessBrowserCacheFileList(This,BlockId,cacheFileListFilename)	\
    ( (This)->lpVtbl -> ProcessBrowserCacheFileList(This,BlockId,cacheFileListFilename) ) 

#define IAEControllerV2_SetAllAeOptions(This,allOptions)	\
    ( (This)->lpVtbl -> SetAllAeOptions(This,allOptions) ) 

#define IAEControllerV2_GetAllAeOptions(This,allOptions)	\
    ( (This)->lpVtbl -> GetAllAeOptions(This,allOptions) ) 

#define IAEControllerV2_GetAllAeOptionValidFamilies(This,allFamilyFlags)	\
    ( (This)->lpVtbl -> GetAllAeOptionValidFamilies(This,allFamilyFlags) ) 


#define IAEControllerV2_StartV2(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion,pProductCode,pProductBuild)	\
    ( (This)->lpVtbl -> StartV2(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion,pProductCode,pProductBuild) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAEControllerV2_INTERFACE_DEFINED__ */


#ifndef __IAEControllerV3_INTERFACE_DEFINED__
#define __IAEControllerV3_INTERFACE_DEFINED__

/* interface IAEControllerV3 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IAEControllerV3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B1D8E799-D5A2-45B4-9524-067144A201E4")
    IAEControllerV3 : public IAEControllerV2
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StopV2( 
            /* [in] */ long timeoutMs,
            /* [in] */ _AeStopType stopType) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IAEControllerV3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAEControllerV3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAEControllerV3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAEControllerV3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAEControllerV3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAEControllerV3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAEControllerV3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAEControllerV3 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IAEControllerV3 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ long delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IAEControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IAEControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IAEControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartProtection )( 
            IAEControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopProtection )( 
            IAEControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IAEControllerV3 * This,
            /* [retval][out] */ _AeState *state);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAeOption )( 
            IAEControllerV3 * This,
            /* [in] */ _AeOptionName optionName,
            /* [in] */ long option);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAeOption )( 
            IAEControllerV3 * This,
            /* [in] */ _AeOptionName optionName,
            /* [retval][out] */ long *option);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAeOptionValidFamilies )( 
            IAEControllerV3 * This,
            /* [in] */ _AeOptionName optionName,
            /* [retval][out] */ long *familyFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAeDefaultOptions )( 
            IAEControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddProtectedApp )( 
            IAEControllerV3 * This,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddProtectedAppEx )( 
            IAEControllerV3 * This,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded,
            /* [out] */ BSTR *ppId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveProtectedApp )( 
            IAEControllerV3 * This,
            /* [in] */ BSTR appId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ModProtectedApp )( 
            IAEControllerV3 * This,
            /* [in] */ BSTR appId,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumProtectedApps )( 
            IAEControllerV3 * This,
            /* [retval][out] */ long *numProtectedApps);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetProtectedAppIDs )( 
            IAEControllerV3 * This,
            /* [retval][out] */ SAFEARRAY * *ppAppIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetProtectedApp )( 
            IAEControllerV3 * This,
            /* [in] */ BSTR appId,
            /* [out] */ BSTR *appDisplayName,
            /* [out] */ BSTR *fileName,
            /* [out] */ _AeAppFamilyId *family,
            /* [out] */ VARIANT_BOOL *shielded,
            /* [out] */ VARIANT_BOOL *hidden,
            /* [out] */ VARIANT_BOOL *userApp);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearProtectedApps )( 
            IAEControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusion )( 
            IAEControllerV3 * This,
            /* [in] */ BSTR exclusionHash,
            /* [in] */ BSTR exclusionPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusionEx )( 
            IAEControllerV3 * This,
            /* [in] */ BSTR exclusionHash,
            /* [in] */ BSTR exclusionPath,
            /* [out] */ BSTR *exclusionId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveExclusion )( 
            IAEControllerV3 * This,
            /* [in] */ BSTR exclusionId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExclusions )( 
            IAEControllerV3 * This,
            /* [retval][out] */ long *numExclusions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusionIDs )( 
            IAEControllerV3 * This,
            /* [retval][out] */ SAFEARRAY * *ppExclusionIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusion )( 
            IAEControllerV3 * This,
            /* [in] */ BSTR exclusionId,
            /* [out] */ BSTR *exclusionHash,
            /* [out] */ BSTR *exclusionPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearExclusions )( 
            IAEControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExploits )( 
            IAEControllerV3 * This,
            /* [retval][out] */ long *numExploits);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExploitIDs )( 
            IAEControllerV3 * This,
            /* [retval][out] */ SAFEARRAY * *ppExploitIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExploit )( 
            IAEControllerV3 * This,
            /* [in] */ BSTR exploitId,
            /* [out] */ BSTR *exploitHash,
            /* [out] */ BSTR *exploitPath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TotalExploitsBlocked )( 
            IAEControllerV3 * This,
            /* [retval][out] */ UINT64 *blocked);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TotalExploitsBlocked )( 
            IAEControllerV3 * This,
            /* [in] */ UINT64 blocked);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ProcessBrowserCacheFileList )( 
            IAEControllerV3 * This,
            /* [in] */ BSTR BlockId,
            /* [in] */ BSTR cacheFileListFilename);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAllAeOptions )( 
            IAEControllerV3 * This,
            /* [in] */ SAFEARRAY * allOptions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAllAeOptions )( 
            IAEControllerV3 * This,
            /* [retval][out] */ SAFEARRAY * *allOptions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAllAeOptionValidFamilies )( 
            IAEControllerV3 * This,
            /* [retval][out] */ SAFEARRAY * *allFamilyFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            IAEControllerV3 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ long delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopV2 )( 
            IAEControllerV3 * This,
            /* [in] */ long timeoutMs,
            /* [in] */ _AeStopType stopType);
        
        END_INTERFACE
    } IAEControllerV3Vtbl;

    interface IAEControllerV3
    {
        CONST_VTBL struct IAEControllerV3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAEControllerV3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAEControllerV3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAEControllerV3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAEControllerV3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAEControllerV3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAEControllerV3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAEControllerV3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAEControllerV3_Start(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion) ) 

#define IAEControllerV3_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IAEControllerV3_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IAEControllerV3_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IAEControllerV3_StartProtection(This)	\
    ( (This)->lpVtbl -> StartProtection(This) ) 

#define IAEControllerV3_StopProtection(This)	\
    ( (This)->lpVtbl -> StopProtection(This) ) 

#define IAEControllerV3_GetState(This,state)	\
    ( (This)->lpVtbl -> GetState(This,state) ) 

#define IAEControllerV3_SetAeOption(This,optionName,option)	\
    ( (This)->lpVtbl -> SetAeOption(This,optionName,option) ) 

#define IAEControllerV3_GetAeOption(This,optionName,option)	\
    ( (This)->lpVtbl -> GetAeOption(This,optionName,option) ) 

#define IAEControllerV3_GetAeOptionValidFamilies(This,optionName,familyFlags)	\
    ( (This)->lpVtbl -> GetAeOptionValidFamilies(This,optionName,familyFlags) ) 

#define IAEControllerV3_SetAeDefaultOptions(This)	\
    ( (This)->lpVtbl -> SetAeDefaultOptions(This) ) 

#define IAEControllerV3_AddProtectedApp(This,appDisplayName,fileName,family,shielded)	\
    ( (This)->lpVtbl -> AddProtectedApp(This,appDisplayName,fileName,family,shielded) ) 

#define IAEControllerV3_AddProtectedAppEx(This,appDisplayName,fileName,family,shielded,ppId)	\
    ( (This)->lpVtbl -> AddProtectedAppEx(This,appDisplayName,fileName,family,shielded,ppId) ) 

#define IAEControllerV3_RemoveProtectedApp(This,appId)	\
    ( (This)->lpVtbl -> RemoveProtectedApp(This,appId) ) 

#define IAEControllerV3_ModProtectedApp(This,appId,appDisplayName,fileName,family,shielded)	\
    ( (This)->lpVtbl -> ModProtectedApp(This,appId,appDisplayName,fileName,family,shielded) ) 

#define IAEControllerV3_GetNumProtectedApps(This,numProtectedApps)	\
    ( (This)->lpVtbl -> GetNumProtectedApps(This,numProtectedApps) ) 

#define IAEControllerV3_GetProtectedAppIDs(This,ppAppIds)	\
    ( (This)->lpVtbl -> GetProtectedAppIDs(This,ppAppIds) ) 

#define IAEControllerV3_GetProtectedApp(This,appId,appDisplayName,fileName,family,shielded,hidden,userApp)	\
    ( (This)->lpVtbl -> GetProtectedApp(This,appId,appDisplayName,fileName,family,shielded,hidden,userApp) ) 

#define IAEControllerV3_ClearProtectedApps(This)	\
    ( (This)->lpVtbl -> ClearProtectedApps(This) ) 

#define IAEControllerV3_AddExclusion(This,exclusionHash,exclusionPath)	\
    ( (This)->lpVtbl -> AddExclusion(This,exclusionHash,exclusionPath) ) 

#define IAEControllerV3_AddExclusionEx(This,exclusionHash,exclusionPath,exclusionId)	\
    ( (This)->lpVtbl -> AddExclusionEx(This,exclusionHash,exclusionPath,exclusionId) ) 

#define IAEControllerV3_RemoveExclusion(This,exclusionId)	\
    ( (This)->lpVtbl -> RemoveExclusion(This,exclusionId) ) 

#define IAEControllerV3_GetNumExclusions(This,numExclusions)	\
    ( (This)->lpVtbl -> GetNumExclusions(This,numExclusions) ) 

#define IAEControllerV3_GetExclusionIDs(This,ppExclusionIds)	\
    ( (This)->lpVtbl -> GetExclusionIDs(This,ppExclusionIds) ) 

#define IAEControllerV3_GetExclusion(This,exclusionId,exclusionHash,exclusionPath)	\
    ( (This)->lpVtbl -> GetExclusion(This,exclusionId,exclusionHash,exclusionPath) ) 

#define IAEControllerV3_ClearExclusions(This)	\
    ( (This)->lpVtbl -> ClearExclusions(This) ) 

#define IAEControllerV3_GetNumExploits(This,numExploits)	\
    ( (This)->lpVtbl -> GetNumExploits(This,numExploits) ) 

#define IAEControllerV3_GetExploitIDs(This,ppExploitIds)	\
    ( (This)->lpVtbl -> GetExploitIDs(This,ppExploitIds) ) 

#define IAEControllerV3_GetExploit(This,exploitId,exploitHash,exploitPath)	\
    ( (This)->lpVtbl -> GetExploit(This,exploitId,exploitHash,exploitPath) ) 

#define IAEControllerV3_get_TotalExploitsBlocked(This,blocked)	\
    ( (This)->lpVtbl -> get_TotalExploitsBlocked(This,blocked) ) 

#define IAEControllerV3_put_TotalExploitsBlocked(This,blocked)	\
    ( (This)->lpVtbl -> put_TotalExploitsBlocked(This,blocked) ) 

#define IAEControllerV3_ProcessBrowserCacheFileList(This,BlockId,cacheFileListFilename)	\
    ( (This)->lpVtbl -> ProcessBrowserCacheFileList(This,BlockId,cacheFileListFilename) ) 

#define IAEControllerV3_SetAllAeOptions(This,allOptions)	\
    ( (This)->lpVtbl -> SetAllAeOptions(This,allOptions) ) 

#define IAEControllerV3_GetAllAeOptions(This,allOptions)	\
    ( (This)->lpVtbl -> GetAllAeOptions(This,allOptions) ) 

#define IAEControllerV3_GetAllAeOptionValidFamilies(This,allFamilyFlags)	\
    ( (This)->lpVtbl -> GetAllAeOptionValidFamilies(This,allFamilyFlags) ) 


#define IAEControllerV3_StartV2(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion,pProductCode,pProductBuild)	\
    ( (This)->lpVtbl -> StartV2(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion,pProductCode,pProductBuild) ) 


#define IAEControllerV3_StopV2(This,timeoutMs,stopType)	\
    ( (This)->lpVtbl -> StopV2(This,timeoutMs,stopType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAEControllerV3_INTERFACE_DEFINED__ */


#ifndef __IAEControllerV4_INTERFACE_DEFINED__
#define __IAEControllerV4_INTERFACE_DEFINED__

/* interface IAEControllerV4 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IAEControllerV4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D8258E71-3A7A-4D9D-85BB-C7999F95B7E4")
    IAEControllerV4 : public IAEControllerV3
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddSystemExclusion( 
            /* [in] */ BSTR exclusionHash,
            /* [in] */ BSTR exclusionPath,
            /* [out] */ BSTR *exclusionId) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RemoveSystemExclusion( 
            /* [in] */ BSTR exclusionHash) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNumSystemExclusions( 
            /* [retval][out] */ long *numExclusions) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetSystemExclusionIDs( 
            /* [retval][out] */ SAFEARRAY * *ppExclusionIds) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetSystemExclusion( 
            /* [in] */ BSTR exclusionId,
            /* [out] */ BSTR *exclusionHash,
            /* [out] */ BSTR *exclusionPath) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IAEControllerV4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAEControllerV4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAEControllerV4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAEControllerV4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAEControllerV4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAEControllerV4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAEControllerV4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAEControllerV4 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ long delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IAEControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IAEControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IAEControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartProtection )( 
            IAEControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopProtection )( 
            IAEControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IAEControllerV4 * This,
            /* [retval][out] */ _AeState *state);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAeOption )( 
            IAEControllerV4 * This,
            /* [in] */ _AeOptionName optionName,
            /* [in] */ long option);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAeOption )( 
            IAEControllerV4 * This,
            /* [in] */ _AeOptionName optionName,
            /* [retval][out] */ long *option);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAeOptionValidFamilies )( 
            IAEControllerV4 * This,
            /* [in] */ _AeOptionName optionName,
            /* [retval][out] */ long *familyFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAeDefaultOptions )( 
            IAEControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddProtectedApp )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddProtectedAppEx )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded,
            /* [out] */ BSTR *ppId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveProtectedApp )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR appId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ModProtectedApp )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR appId,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumProtectedApps )( 
            IAEControllerV4 * This,
            /* [retval][out] */ long *numProtectedApps);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetProtectedAppIDs )( 
            IAEControllerV4 * This,
            /* [retval][out] */ SAFEARRAY * *ppAppIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetProtectedApp )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR appId,
            /* [out] */ BSTR *appDisplayName,
            /* [out] */ BSTR *fileName,
            /* [out] */ _AeAppFamilyId *family,
            /* [out] */ VARIANT_BOOL *shielded,
            /* [out] */ VARIANT_BOOL *hidden,
            /* [out] */ VARIANT_BOOL *userApp);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearProtectedApps )( 
            IAEControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusion )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR exclusionHash,
            /* [in] */ BSTR exclusionPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusionEx )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR exclusionHash,
            /* [in] */ BSTR exclusionPath,
            /* [out] */ BSTR *exclusionId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveExclusion )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR exclusionId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExclusions )( 
            IAEControllerV4 * This,
            /* [retval][out] */ long *numExclusions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusionIDs )( 
            IAEControllerV4 * This,
            /* [retval][out] */ SAFEARRAY * *ppExclusionIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusion )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR exclusionId,
            /* [out] */ BSTR *exclusionHash,
            /* [out] */ BSTR *exclusionPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearExclusions )( 
            IAEControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExploits )( 
            IAEControllerV4 * This,
            /* [retval][out] */ long *numExploits);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExploitIDs )( 
            IAEControllerV4 * This,
            /* [retval][out] */ SAFEARRAY * *ppExploitIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExploit )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR exploitId,
            /* [out] */ BSTR *exploitHash,
            /* [out] */ BSTR *exploitPath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TotalExploitsBlocked )( 
            IAEControllerV4 * This,
            /* [retval][out] */ UINT64 *blocked);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TotalExploitsBlocked )( 
            IAEControllerV4 * This,
            /* [in] */ UINT64 blocked);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ProcessBrowserCacheFileList )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR BlockId,
            /* [in] */ BSTR cacheFileListFilename);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAllAeOptions )( 
            IAEControllerV4 * This,
            /* [in] */ SAFEARRAY * allOptions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAllAeOptions )( 
            IAEControllerV4 * This,
            /* [retval][out] */ SAFEARRAY * *allOptions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAllAeOptionValidFamilies )( 
            IAEControllerV4 * This,
            /* [retval][out] */ SAFEARRAY * *allFamilyFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ long delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopV2 )( 
            IAEControllerV4 * This,
            /* [in] */ long timeoutMs,
            /* [in] */ _AeStopType stopType);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddSystemExclusion )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR exclusionHash,
            /* [in] */ BSTR exclusionPath,
            /* [out] */ BSTR *exclusionId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveSystemExclusion )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR exclusionHash);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumSystemExclusions )( 
            IAEControllerV4 * This,
            /* [retval][out] */ long *numExclusions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetSystemExclusionIDs )( 
            IAEControllerV4 * This,
            /* [retval][out] */ SAFEARRAY * *ppExclusionIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetSystemExclusion )( 
            IAEControllerV4 * This,
            /* [in] */ BSTR exclusionId,
            /* [out] */ BSTR *exclusionHash,
            /* [out] */ BSTR *exclusionPath);
        
        END_INTERFACE
    } IAEControllerV4Vtbl;

    interface IAEControllerV4
    {
        CONST_VTBL struct IAEControllerV4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAEControllerV4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAEControllerV4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAEControllerV4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAEControllerV4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAEControllerV4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAEControllerV4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAEControllerV4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAEControllerV4_Start(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion) ) 

#define IAEControllerV4_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IAEControllerV4_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IAEControllerV4_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IAEControllerV4_StartProtection(This)	\
    ( (This)->lpVtbl -> StartProtection(This) ) 

#define IAEControllerV4_StopProtection(This)	\
    ( (This)->lpVtbl -> StopProtection(This) ) 

#define IAEControllerV4_GetState(This,state)	\
    ( (This)->lpVtbl -> GetState(This,state) ) 

#define IAEControllerV4_SetAeOption(This,optionName,option)	\
    ( (This)->lpVtbl -> SetAeOption(This,optionName,option) ) 

#define IAEControllerV4_GetAeOption(This,optionName,option)	\
    ( (This)->lpVtbl -> GetAeOption(This,optionName,option) ) 

#define IAEControllerV4_GetAeOptionValidFamilies(This,optionName,familyFlags)	\
    ( (This)->lpVtbl -> GetAeOptionValidFamilies(This,optionName,familyFlags) ) 

#define IAEControllerV4_SetAeDefaultOptions(This)	\
    ( (This)->lpVtbl -> SetAeDefaultOptions(This) ) 

#define IAEControllerV4_AddProtectedApp(This,appDisplayName,fileName,family,shielded)	\
    ( (This)->lpVtbl -> AddProtectedApp(This,appDisplayName,fileName,family,shielded) ) 

#define IAEControllerV4_AddProtectedAppEx(This,appDisplayName,fileName,family,shielded,ppId)	\
    ( (This)->lpVtbl -> AddProtectedAppEx(This,appDisplayName,fileName,family,shielded,ppId) ) 

#define IAEControllerV4_RemoveProtectedApp(This,appId)	\
    ( (This)->lpVtbl -> RemoveProtectedApp(This,appId) ) 

#define IAEControllerV4_ModProtectedApp(This,appId,appDisplayName,fileName,family,shielded)	\
    ( (This)->lpVtbl -> ModProtectedApp(This,appId,appDisplayName,fileName,family,shielded) ) 

#define IAEControllerV4_GetNumProtectedApps(This,numProtectedApps)	\
    ( (This)->lpVtbl -> GetNumProtectedApps(This,numProtectedApps) ) 

#define IAEControllerV4_GetProtectedAppIDs(This,ppAppIds)	\
    ( (This)->lpVtbl -> GetProtectedAppIDs(This,ppAppIds) ) 

#define IAEControllerV4_GetProtectedApp(This,appId,appDisplayName,fileName,family,shielded,hidden,userApp)	\
    ( (This)->lpVtbl -> GetProtectedApp(This,appId,appDisplayName,fileName,family,shielded,hidden,userApp) ) 

#define IAEControllerV4_ClearProtectedApps(This)	\
    ( (This)->lpVtbl -> ClearProtectedApps(This) ) 

#define IAEControllerV4_AddExclusion(This,exclusionHash,exclusionPath)	\
    ( (This)->lpVtbl -> AddExclusion(This,exclusionHash,exclusionPath) ) 

#define IAEControllerV4_AddExclusionEx(This,exclusionHash,exclusionPath,exclusionId)	\
    ( (This)->lpVtbl -> AddExclusionEx(This,exclusionHash,exclusionPath,exclusionId) ) 

#define IAEControllerV4_RemoveExclusion(This,exclusionId)	\
    ( (This)->lpVtbl -> RemoveExclusion(This,exclusionId) ) 

#define IAEControllerV4_GetNumExclusions(This,numExclusions)	\
    ( (This)->lpVtbl -> GetNumExclusions(This,numExclusions) ) 

#define IAEControllerV4_GetExclusionIDs(This,ppExclusionIds)	\
    ( (This)->lpVtbl -> GetExclusionIDs(This,ppExclusionIds) ) 

#define IAEControllerV4_GetExclusion(This,exclusionId,exclusionHash,exclusionPath)	\
    ( (This)->lpVtbl -> GetExclusion(This,exclusionId,exclusionHash,exclusionPath) ) 

#define IAEControllerV4_ClearExclusions(This)	\
    ( (This)->lpVtbl -> ClearExclusions(This) ) 

#define IAEControllerV4_GetNumExploits(This,numExploits)	\
    ( (This)->lpVtbl -> GetNumExploits(This,numExploits) ) 

#define IAEControllerV4_GetExploitIDs(This,ppExploitIds)	\
    ( (This)->lpVtbl -> GetExploitIDs(This,ppExploitIds) ) 

#define IAEControllerV4_GetExploit(This,exploitId,exploitHash,exploitPath)	\
    ( (This)->lpVtbl -> GetExploit(This,exploitId,exploitHash,exploitPath) ) 

#define IAEControllerV4_get_TotalExploitsBlocked(This,blocked)	\
    ( (This)->lpVtbl -> get_TotalExploitsBlocked(This,blocked) ) 

#define IAEControllerV4_put_TotalExploitsBlocked(This,blocked)	\
    ( (This)->lpVtbl -> put_TotalExploitsBlocked(This,blocked) ) 

#define IAEControllerV4_ProcessBrowserCacheFileList(This,BlockId,cacheFileListFilename)	\
    ( (This)->lpVtbl -> ProcessBrowserCacheFileList(This,BlockId,cacheFileListFilename) ) 

#define IAEControllerV4_SetAllAeOptions(This,allOptions)	\
    ( (This)->lpVtbl -> SetAllAeOptions(This,allOptions) ) 

#define IAEControllerV4_GetAllAeOptions(This,allOptions)	\
    ( (This)->lpVtbl -> GetAllAeOptions(This,allOptions) ) 

#define IAEControllerV4_GetAllAeOptionValidFamilies(This,allFamilyFlags)	\
    ( (This)->lpVtbl -> GetAllAeOptionValidFamilies(This,allFamilyFlags) ) 


#define IAEControllerV4_StartV2(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion,pProductCode,pProductBuild)	\
    ( (This)->lpVtbl -> StartV2(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion,pProductCode,pProductBuild) ) 


#define IAEControllerV4_StopV2(This,timeoutMs,stopType)	\
    ( (This)->lpVtbl -> StopV2(This,timeoutMs,stopType) ) 


#define IAEControllerV4_AddSystemExclusion(This,exclusionHash,exclusionPath,exclusionId)	\
    ( (This)->lpVtbl -> AddSystemExclusion(This,exclusionHash,exclusionPath,exclusionId) ) 

#define IAEControllerV4_RemoveSystemExclusion(This,exclusionHash)	\
    ( (This)->lpVtbl -> RemoveSystemExclusion(This,exclusionHash) ) 

#define IAEControllerV4_GetNumSystemExclusions(This,numExclusions)	\
    ( (This)->lpVtbl -> GetNumSystemExclusions(This,numExclusions) ) 

#define IAEControllerV4_GetSystemExclusionIDs(This,ppExclusionIds)	\
    ( (This)->lpVtbl -> GetSystemExclusionIDs(This,ppExclusionIds) ) 

#define IAEControllerV4_GetSystemExclusion(This,exclusionId,exclusionHash,exclusionPath)	\
    ( (This)->lpVtbl -> GetSystemExclusion(This,exclusionId,exclusionHash,exclusionPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAEControllerV4_INTERFACE_DEFINED__ */


#ifndef __IAEControllerV5_INTERFACE_DEFINED__
#define __IAEControllerV5_INTERFACE_DEFINED__

/* interface IAEControllerV5 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IAEControllerV5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7DD05E6E-FF07-4CD3-A7BA-200BEC812A5C")
    IAEControllerV5 : public IAEControllerV4
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetStatus( 
            /* [retval][out] */ _AeStatus *status) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IAEControllerV5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAEControllerV5 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAEControllerV5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAEControllerV5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAEControllerV5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAEControllerV5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAEControllerV5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAEControllerV5 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ long delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IAEControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IAEControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IAEControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartProtection )( 
            IAEControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopProtection )( 
            IAEControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IAEControllerV5 * This,
            /* [retval][out] */ _AeState *state);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAeOption )( 
            IAEControllerV5 * This,
            /* [in] */ _AeOptionName optionName,
            /* [in] */ long option);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAeOption )( 
            IAEControllerV5 * This,
            /* [in] */ _AeOptionName optionName,
            /* [retval][out] */ long *option);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAeOptionValidFamilies )( 
            IAEControllerV5 * This,
            /* [in] */ _AeOptionName optionName,
            /* [retval][out] */ long *familyFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAeDefaultOptions )( 
            IAEControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddProtectedApp )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddProtectedAppEx )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded,
            /* [out] */ BSTR *ppId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveProtectedApp )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR appId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ModProtectedApp )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR appId,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR fileName,
            /* [in] */ _AeAppFamilyId family,
            /* [in] */ VARIANT_BOOL shielded);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumProtectedApps )( 
            IAEControllerV5 * This,
            /* [retval][out] */ long *numProtectedApps);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetProtectedAppIDs )( 
            IAEControllerV5 * This,
            /* [retval][out] */ SAFEARRAY * *ppAppIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetProtectedApp )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR appId,
            /* [out] */ BSTR *appDisplayName,
            /* [out] */ BSTR *fileName,
            /* [out] */ _AeAppFamilyId *family,
            /* [out] */ VARIANT_BOOL *shielded,
            /* [out] */ VARIANT_BOOL *hidden,
            /* [out] */ VARIANT_BOOL *userApp);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearProtectedApps )( 
            IAEControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusion )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR exclusionHash,
            /* [in] */ BSTR exclusionPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusionEx )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR exclusionHash,
            /* [in] */ BSTR exclusionPath,
            /* [out] */ BSTR *exclusionId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveExclusion )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR exclusionId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExclusions )( 
            IAEControllerV5 * This,
            /* [retval][out] */ long *numExclusions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusionIDs )( 
            IAEControllerV5 * This,
            /* [retval][out] */ SAFEARRAY * *ppExclusionIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusion )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR exclusionId,
            /* [out] */ BSTR *exclusionHash,
            /* [out] */ BSTR *exclusionPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearExclusions )( 
            IAEControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExploits )( 
            IAEControllerV5 * This,
            /* [retval][out] */ long *numExploits);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExploitIDs )( 
            IAEControllerV5 * This,
            /* [retval][out] */ SAFEARRAY * *ppExploitIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExploit )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR exploitId,
            /* [out] */ BSTR *exploitHash,
            /* [out] */ BSTR *exploitPath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TotalExploitsBlocked )( 
            IAEControllerV5 * This,
            /* [retval][out] */ UINT64 *blocked);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TotalExploitsBlocked )( 
            IAEControllerV5 * This,
            /* [in] */ UINT64 blocked);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ProcessBrowserCacheFileList )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR BlockId,
            /* [in] */ BSTR cacheFileListFilename);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAllAeOptions )( 
            IAEControllerV5 * This,
            /* [in] */ SAFEARRAY * allOptions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAllAeOptions )( 
            IAEControllerV5 * This,
            /* [retval][out] */ SAFEARRAY * *allOptions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetAllAeOptionValidFamilies )( 
            IAEControllerV5 * This,
            /* [retval][out] */ SAFEARRAY * *allFamilyFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ long delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopV2 )( 
            IAEControllerV5 * This,
            /* [in] */ long timeoutMs,
            /* [in] */ _AeStopType stopType);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddSystemExclusion )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR exclusionHash,
            /* [in] */ BSTR exclusionPath,
            /* [out] */ BSTR *exclusionId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveSystemExclusion )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR exclusionHash);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumSystemExclusions )( 
            IAEControllerV5 * This,
            /* [retval][out] */ long *numExclusions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetSystemExclusionIDs )( 
            IAEControllerV5 * This,
            /* [retval][out] */ SAFEARRAY * *ppExclusionIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetSystemExclusion )( 
            IAEControllerV5 * This,
            /* [in] */ BSTR exclusionId,
            /* [out] */ BSTR *exclusionHash,
            /* [out] */ BSTR *exclusionPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetStatus )( 
            IAEControllerV5 * This,
            /* [retval][out] */ _AeStatus *status);
        
        END_INTERFACE
    } IAEControllerV5Vtbl;

    interface IAEControllerV5
    {
        CONST_VTBL struct IAEControllerV5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAEControllerV5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAEControllerV5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAEControllerV5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAEControllerV5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAEControllerV5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAEControllerV5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAEControllerV5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAEControllerV5_Start(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion) ) 

#define IAEControllerV5_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define IAEControllerV5_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IAEControllerV5_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IAEControllerV5_StartProtection(This)	\
    ( (This)->lpVtbl -> StartProtection(This) ) 

#define IAEControllerV5_StopProtection(This)	\
    ( (This)->lpVtbl -> StopProtection(This) ) 

#define IAEControllerV5_GetState(This,state)	\
    ( (This)->lpVtbl -> GetState(This,state) ) 

#define IAEControllerV5_SetAeOption(This,optionName,option)	\
    ( (This)->lpVtbl -> SetAeOption(This,optionName,option) ) 

#define IAEControllerV5_GetAeOption(This,optionName,option)	\
    ( (This)->lpVtbl -> GetAeOption(This,optionName,option) ) 

#define IAEControllerV5_GetAeOptionValidFamilies(This,optionName,familyFlags)	\
    ( (This)->lpVtbl -> GetAeOptionValidFamilies(This,optionName,familyFlags) ) 

#define IAEControllerV5_SetAeDefaultOptions(This)	\
    ( (This)->lpVtbl -> SetAeDefaultOptions(This) ) 

#define IAEControllerV5_AddProtectedApp(This,appDisplayName,fileName,family,shielded)	\
    ( (This)->lpVtbl -> AddProtectedApp(This,appDisplayName,fileName,family,shielded) ) 

#define IAEControllerV5_AddProtectedAppEx(This,appDisplayName,fileName,family,shielded,ppId)	\
    ( (This)->lpVtbl -> AddProtectedAppEx(This,appDisplayName,fileName,family,shielded,ppId) ) 

#define IAEControllerV5_RemoveProtectedApp(This,appId)	\
    ( (This)->lpVtbl -> RemoveProtectedApp(This,appId) ) 

#define IAEControllerV5_ModProtectedApp(This,appId,appDisplayName,fileName,family,shielded)	\
    ( (This)->lpVtbl -> ModProtectedApp(This,appId,appDisplayName,fileName,family,shielded) ) 

#define IAEControllerV5_GetNumProtectedApps(This,numProtectedApps)	\
    ( (This)->lpVtbl -> GetNumProtectedApps(This,numProtectedApps) ) 

#define IAEControllerV5_GetProtectedAppIDs(This,ppAppIds)	\
    ( (This)->lpVtbl -> GetProtectedAppIDs(This,ppAppIds) ) 

#define IAEControllerV5_GetProtectedApp(This,appId,appDisplayName,fileName,family,shielded,hidden,userApp)	\
    ( (This)->lpVtbl -> GetProtectedApp(This,appId,appDisplayName,fileName,family,shielded,hidden,userApp) ) 

#define IAEControllerV5_ClearProtectedApps(This)	\
    ( (This)->lpVtbl -> ClearProtectedApps(This) ) 

#define IAEControllerV5_AddExclusion(This,exclusionHash,exclusionPath)	\
    ( (This)->lpVtbl -> AddExclusion(This,exclusionHash,exclusionPath) ) 

#define IAEControllerV5_AddExclusionEx(This,exclusionHash,exclusionPath,exclusionId)	\
    ( (This)->lpVtbl -> AddExclusionEx(This,exclusionHash,exclusionPath,exclusionId) ) 

#define IAEControllerV5_RemoveExclusion(This,exclusionId)	\
    ( (This)->lpVtbl -> RemoveExclusion(This,exclusionId) ) 

#define IAEControllerV5_GetNumExclusions(This,numExclusions)	\
    ( (This)->lpVtbl -> GetNumExclusions(This,numExclusions) ) 

#define IAEControllerV5_GetExclusionIDs(This,ppExclusionIds)	\
    ( (This)->lpVtbl -> GetExclusionIDs(This,ppExclusionIds) ) 

#define IAEControllerV5_GetExclusion(This,exclusionId,exclusionHash,exclusionPath)	\
    ( (This)->lpVtbl -> GetExclusion(This,exclusionId,exclusionHash,exclusionPath) ) 

#define IAEControllerV5_ClearExclusions(This)	\
    ( (This)->lpVtbl -> ClearExclusions(This) ) 

#define IAEControllerV5_GetNumExploits(This,numExploits)	\
    ( (This)->lpVtbl -> GetNumExploits(This,numExploits) ) 

#define IAEControllerV5_GetExploitIDs(This,ppExploitIds)	\
    ( (This)->lpVtbl -> GetExploitIDs(This,ppExploitIds) ) 

#define IAEControllerV5_GetExploit(This,exploitId,exploitHash,exploitPath)	\
    ( (This)->lpVtbl -> GetExploit(This,exploitId,exploitHash,exploitPath) ) 

#define IAEControllerV5_get_TotalExploitsBlocked(This,blocked)	\
    ( (This)->lpVtbl -> get_TotalExploitsBlocked(This,blocked) ) 

#define IAEControllerV5_put_TotalExploitsBlocked(This,blocked)	\
    ( (This)->lpVtbl -> put_TotalExploitsBlocked(This,blocked) ) 

#define IAEControllerV5_ProcessBrowserCacheFileList(This,BlockId,cacheFileListFilename)	\
    ( (This)->lpVtbl -> ProcessBrowserCacheFileList(This,BlockId,cacheFileListFilename) ) 

#define IAEControllerV5_SetAllAeOptions(This,allOptions)	\
    ( (This)->lpVtbl -> SetAllAeOptions(This,allOptions) ) 

#define IAEControllerV5_GetAllAeOptions(This,allOptions)	\
    ( (This)->lpVtbl -> GetAllAeOptions(This,allOptions) ) 

#define IAEControllerV5_GetAllAeOptionValidFamilies(This,allFamilyFlags)	\
    ( (This)->lpVtbl -> GetAllAeOptionValidFamilies(This,allFamilyFlags) ) 


#define IAEControllerV5_StartV2(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion,pProductCode,pProductBuild)	\
    ( (This)->lpVtbl -> StartV2(This,pImplDLLPath,pDataPath,delayInterval,pLogController,pCleanController,pCloudController,pTelemetryController,pLicenseController,pUpdateController,pProductVersion,pProductCode,pProductBuild) ) 


#define IAEControllerV5_StopV2(This,timeoutMs,stopType)	\
    ( (This)->lpVtbl -> StopV2(This,timeoutMs,stopType) ) 


#define IAEControllerV5_AddSystemExclusion(This,exclusionHash,exclusionPath,exclusionId)	\
    ( (This)->lpVtbl -> AddSystemExclusion(This,exclusionHash,exclusionPath,exclusionId) ) 

#define IAEControllerV5_RemoveSystemExclusion(This,exclusionHash)	\
    ( (This)->lpVtbl -> RemoveSystemExclusion(This,exclusionHash) ) 

#define IAEControllerV5_GetNumSystemExclusions(This,numExclusions)	\
    ( (This)->lpVtbl -> GetNumSystemExclusions(This,numExclusions) ) 

#define IAEControllerV5_GetSystemExclusionIDs(This,ppExclusionIds)	\
    ( (This)->lpVtbl -> GetSystemExclusionIDs(This,ppExclusionIds) ) 

#define IAEControllerV5_GetSystemExclusion(This,exclusionId,exclusionHash,exclusionPath)	\
    ( (This)->lpVtbl -> GetSystemExclusion(This,exclusionId,exclusionHash,exclusionPath) ) 


#define IAEControllerV5_GetStatus(This,status)	\
    ( (This)->lpVtbl -> GetStatus(This,status) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAEControllerV5_INTERFACE_DEFINED__ */


#ifndef __IAEControllerEvents_INTERFACE_DEFINED__
#define __IAEControllerEvents_INTERFACE_DEFINED__

/* interface IAEControllerEvents */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IAEControllerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("21EA9E3C-6507-4725-8F4F-ED4DDDE7A709")
    IAEControllerEvents : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StateChanged( 
            /* [in] */ long state) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE OptionChanged( 
            /* [in] */ _AeOptionName optionName,
            /* [in] */ long option) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AppInjectedNotification( 
            /* [in] */ BSTR appDisplayName) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ExploitBlockNotification( 
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR layerText,
            /* [in] */ BSTR protectionTechnique,
            /* [in] */ BSTR blockedFileName,
            /* [in] */ BSTR url) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ExclusionNotification( 
            /* [in] */ _AeExclusionEventType eventType,
            /* [in] */ BSTR exclusionId,
            /* [in] */ BSTR pHash,
            /* [in] */ BSTR pPath) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ExploitListNotification( 
            /* [in] */ _AeExploitListEventType eventType,
            /* [in] */ BSTR exploitId,
            /* [in] */ BSTR pHash,
            /* [in] */ BSTR pPath) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ProtectedAppNotification( 
            /* [in] */ _AeProtectedAppEventType eventType,
            /* [in] */ BSTR appId) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE BlockCountNofitication( 
            /* [in] */ UINT64 totalThreatsBlocked) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DoCollectBrowserCacheFiles( 
            /* [in] */ BSTR BlockId,
            /* [in] */ BSTR userName) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IAEControllerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAEControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAEControllerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAEControllerEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAEControllerEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAEControllerEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAEControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAEControllerEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StateChanged )( 
            IAEControllerEvents * This,
            /* [in] */ long state);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *OptionChanged )( 
            IAEControllerEvents * This,
            /* [in] */ _AeOptionName optionName,
            /* [in] */ long option);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AppInjectedNotification )( 
            IAEControllerEvents * This,
            /* [in] */ BSTR appDisplayName);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ExploitBlockNotification )( 
            IAEControllerEvents * This,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR layerText,
            /* [in] */ BSTR protectionTechnique,
            /* [in] */ BSTR blockedFileName,
            /* [in] */ BSTR url);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ExclusionNotification )( 
            IAEControllerEvents * This,
            /* [in] */ _AeExclusionEventType eventType,
            /* [in] */ BSTR exclusionId,
            /* [in] */ BSTR pHash,
            /* [in] */ BSTR pPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ExploitListNotification )( 
            IAEControllerEvents * This,
            /* [in] */ _AeExploitListEventType eventType,
            /* [in] */ BSTR exploitId,
            /* [in] */ BSTR pHash,
            /* [in] */ BSTR pPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ProtectedAppNotification )( 
            IAEControllerEvents * This,
            /* [in] */ _AeProtectedAppEventType eventType,
            /* [in] */ BSTR appId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *BlockCountNofitication )( 
            IAEControllerEvents * This,
            /* [in] */ UINT64 totalThreatsBlocked);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DoCollectBrowserCacheFiles )( 
            IAEControllerEvents * This,
            /* [in] */ BSTR BlockId,
            /* [in] */ BSTR userName);
        
        END_INTERFACE
    } IAEControllerEventsVtbl;

    interface IAEControllerEvents
    {
        CONST_VTBL struct IAEControllerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAEControllerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAEControllerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAEControllerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAEControllerEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAEControllerEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAEControllerEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAEControllerEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAEControllerEvents_StateChanged(This,state)	\
    ( (This)->lpVtbl -> StateChanged(This,state) ) 

#define IAEControllerEvents_OptionChanged(This,optionName,option)	\
    ( (This)->lpVtbl -> OptionChanged(This,optionName,option) ) 

#define IAEControllerEvents_AppInjectedNotification(This,appDisplayName)	\
    ( (This)->lpVtbl -> AppInjectedNotification(This,appDisplayName) ) 

#define IAEControllerEvents_ExploitBlockNotification(This,appDisplayName,layerText,protectionTechnique,blockedFileName,url)	\
    ( (This)->lpVtbl -> ExploitBlockNotification(This,appDisplayName,layerText,protectionTechnique,blockedFileName,url) ) 

#define IAEControllerEvents_ExclusionNotification(This,eventType,exclusionId,pHash,pPath)	\
    ( (This)->lpVtbl -> ExclusionNotification(This,eventType,exclusionId,pHash,pPath) ) 

#define IAEControllerEvents_ExploitListNotification(This,eventType,exploitId,pHash,pPath)	\
    ( (This)->lpVtbl -> ExploitListNotification(This,eventType,exploitId,pHash,pPath) ) 

#define IAEControllerEvents_ProtectedAppNotification(This,eventType,appId)	\
    ( (This)->lpVtbl -> ProtectedAppNotification(This,eventType,appId) ) 

#define IAEControllerEvents_BlockCountNofitication(This,totalThreatsBlocked)	\
    ( (This)->lpVtbl -> BlockCountNofitication(This,totalThreatsBlocked) ) 

#define IAEControllerEvents_DoCollectBrowserCacheFiles(This,BlockId,userName)	\
    ( (This)->lpVtbl -> DoCollectBrowserCacheFiles(This,BlockId,userName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAEControllerEvents_INTERFACE_DEFINED__ */


#ifndef ___IAEControllerEvents_DISPINTERFACE_DEFINED__
#define ___IAEControllerEvents_DISPINTERFACE_DEFINED__

/* dispinterface _IAEControllerEvents */
/* [uuid] */ 


EXTERN_C const IID DIID__IAEControllerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("5CE94D34-A1E4-4FA8-BEDC-6A32683B85F5")
    _IAEControllerEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IAEControllerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IAEControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IAEControllerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IAEControllerEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IAEControllerEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IAEControllerEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IAEControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IAEControllerEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IAEControllerEventsVtbl;

    interface _IAEControllerEvents
    {
        CONST_VTBL struct _IAEControllerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IAEControllerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IAEControllerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IAEControllerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IAEControllerEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IAEControllerEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IAEControllerEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IAEControllerEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IAEControllerEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IAEControllerEventsV2_INTERFACE_DEFINED__
#define __IAEControllerEventsV2_INTERFACE_DEFINED__

/* interface IAEControllerEventsV2 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IAEControllerEventsV2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C9669A3D-81E8-46F6-A51E-815A0863D612")
    IAEControllerEventsV2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StatusChanged( 
            /* [in] */ long status) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IAEControllerEventsV2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAEControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAEControllerEventsV2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAEControllerEventsV2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAEControllerEventsV2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAEControllerEventsV2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAEControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAEControllerEventsV2 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StatusChanged )( 
            IAEControllerEventsV2 * This,
            /* [in] */ long status);
        
        END_INTERFACE
    } IAEControllerEventsV2Vtbl;

    interface IAEControllerEventsV2
    {
        CONST_VTBL struct IAEControllerEventsV2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAEControllerEventsV2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAEControllerEventsV2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAEControllerEventsV2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAEControllerEventsV2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAEControllerEventsV2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAEControllerEventsV2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAEControllerEventsV2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAEControllerEventsV2_StatusChanged(This,status)	\
    ( (This)->lpVtbl -> StatusChanged(This,status) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAEControllerEventsV2_INTERFACE_DEFINED__ */


#ifndef ___IAEControllerEventsV2_DISPINTERFACE_DEFINED__
#define ___IAEControllerEventsV2_DISPINTERFACE_DEFINED__

/* dispinterface _IAEControllerEventsV2 */
/* [uuid] */ 


EXTERN_C const IID DIID__IAEControllerEventsV2;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("995A8F3B-6B5F-4773-898A-862D50142B4C")
    _IAEControllerEventsV2 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IAEControllerEventsV2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IAEControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IAEControllerEventsV2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IAEControllerEventsV2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IAEControllerEventsV2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IAEControllerEventsV2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IAEControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IAEControllerEventsV2 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IAEControllerEventsV2Vtbl;

    interface _IAEControllerEventsV2
    {
        CONST_VTBL struct _IAEControllerEventsV2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IAEControllerEventsV2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IAEControllerEventsV2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IAEControllerEventsV2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IAEControllerEventsV2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IAEControllerEventsV2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IAEControllerEventsV2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IAEControllerEventsV2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IAEControllerEventsV2_DISPINTERFACE_DEFINED__ */


#ifndef __IAEControllerEventsV3_INTERFACE_DEFINED__
#define __IAEControllerEventsV3_INTERFACE_DEFINED__

/* interface IAEControllerEventsV3 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IAEControllerEventsV3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6CE18DD5-2BD7-4844-B9AD-DF6A995750A1")
    IAEControllerEventsV3 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ExploitBlockNotificationV2( 
            /* [in] */ BSTR detectionID,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR layerText,
            /* [in] */ BSTR protectionTechnique,
            /* [in] */ BSTR blockedFileName,
            /* [in] */ BSTR url) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IAEControllerEventsV3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAEControllerEventsV3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAEControllerEventsV3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAEControllerEventsV3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAEControllerEventsV3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAEControllerEventsV3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAEControllerEventsV3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAEControllerEventsV3 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ExploitBlockNotificationV2 )( 
            IAEControllerEventsV3 * This,
            /* [in] */ BSTR detectionID,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR layerText,
            /* [in] */ BSTR protectionTechnique,
            /* [in] */ BSTR blockedFileName,
            /* [in] */ BSTR url);
        
        END_INTERFACE
    } IAEControllerEventsV3Vtbl;

    interface IAEControllerEventsV3
    {
        CONST_VTBL struct IAEControllerEventsV3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAEControllerEventsV3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAEControllerEventsV3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAEControllerEventsV3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAEControllerEventsV3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAEControllerEventsV3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAEControllerEventsV3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAEControllerEventsV3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAEControllerEventsV3_ExploitBlockNotificationV2(This,detectionID,appDisplayName,layerText,protectionTechnique,blockedFileName,url)	\
    ( (This)->lpVtbl -> ExploitBlockNotificationV2(This,detectionID,appDisplayName,layerText,protectionTechnique,blockedFileName,url) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAEControllerEventsV3_INTERFACE_DEFINED__ */


#ifndef ___IAEControllerEventsV3_DISPINTERFACE_DEFINED__
#define ___IAEControllerEventsV3_DISPINTERFACE_DEFINED__

/* dispinterface _IAEControllerEventsV3 */
/* [uuid] */ 


EXTERN_C const IID DIID__IAEControllerEventsV3;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("E1BA0B73-14BD-4C9D-98CA-99355BD4EB24")
    _IAEControllerEventsV3 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IAEControllerEventsV3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IAEControllerEventsV3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IAEControllerEventsV3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IAEControllerEventsV3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IAEControllerEventsV3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IAEControllerEventsV3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IAEControllerEventsV3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IAEControllerEventsV3 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IAEControllerEventsV3Vtbl;

    interface _IAEControllerEventsV3
    {
        CONST_VTBL struct _IAEControllerEventsV3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IAEControllerEventsV3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IAEControllerEventsV3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IAEControllerEventsV3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IAEControllerEventsV3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IAEControllerEventsV3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IAEControllerEventsV3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IAEControllerEventsV3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IAEControllerEventsV3_DISPINTERFACE_DEFINED__ */


#ifndef __IAEControllerEventsV4_INTERFACE_DEFINED__
#define __IAEControllerEventsV4_INTERFACE_DEFINED__

/* interface IAEControllerEventsV4 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IAEControllerEventsV4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5BA2811A-EE5B-44DF-81CD-C75BB11A82D4")
    IAEControllerEventsV4 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ExploitBlockNotificationV3( 
            /* [in] */ BSTR detectionID,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR layerText,
            /* [in] */ BSTR protectionTechnique,
            /* [in] */ BSTR blockedFileName,
            /* [in] */ BSTR url,
            /* [in] */ BSTR documentFileName) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IAEControllerEventsV4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAEControllerEventsV4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAEControllerEventsV4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAEControllerEventsV4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAEControllerEventsV4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAEControllerEventsV4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAEControllerEventsV4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAEControllerEventsV4 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ExploitBlockNotificationV3 )( 
            IAEControllerEventsV4 * This,
            /* [in] */ BSTR detectionID,
            /* [in] */ BSTR appDisplayName,
            /* [in] */ BSTR layerText,
            /* [in] */ BSTR protectionTechnique,
            /* [in] */ BSTR blockedFileName,
            /* [in] */ BSTR url,
            /* [in] */ BSTR documentFileName);
        
        END_INTERFACE
    } IAEControllerEventsV4Vtbl;

    interface IAEControllerEventsV4
    {
        CONST_VTBL struct IAEControllerEventsV4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAEControllerEventsV4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAEControllerEventsV4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAEControllerEventsV4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAEControllerEventsV4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAEControllerEventsV4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAEControllerEventsV4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAEControllerEventsV4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAEControllerEventsV4_ExploitBlockNotificationV3(This,detectionID,appDisplayName,layerText,protectionTechnique,blockedFileName,url,documentFileName)	\
    ( (This)->lpVtbl -> ExploitBlockNotificationV3(This,detectionID,appDisplayName,layerText,protectionTechnique,blockedFileName,url,documentFileName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAEControllerEventsV4_INTERFACE_DEFINED__ */


#ifndef ___IAEControllerEventsV4_DISPINTERFACE_DEFINED__
#define ___IAEControllerEventsV4_DISPINTERFACE_DEFINED__

/* dispinterface _IAEControllerEventsV4 */
/* [uuid] */ 


EXTERN_C const IID DIID__IAEControllerEventsV4;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("1917B432-C1CE-4A96-A08E-A270E00E5B23")
    _IAEControllerEventsV4 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IAEControllerEventsV4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IAEControllerEventsV4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IAEControllerEventsV4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IAEControllerEventsV4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IAEControllerEventsV4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IAEControllerEventsV4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IAEControllerEventsV4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IAEControllerEventsV4 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IAEControllerEventsV4Vtbl;

    interface _IAEControllerEventsV4
    {
        CONST_VTBL struct _IAEControllerEventsV4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IAEControllerEventsV4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IAEControllerEventsV4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IAEControllerEventsV4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IAEControllerEventsV4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IAEControllerEventsV4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IAEControllerEventsV4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IAEControllerEventsV4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IAEControllerEventsV4_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_AEController;

#ifdef __cplusplus

class DECLSPEC_UUID("F415899A-1576-4C8B-BC9F-4854781F8A20")
AEController;
#endif
#endif /* __AEControllerCOMLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


