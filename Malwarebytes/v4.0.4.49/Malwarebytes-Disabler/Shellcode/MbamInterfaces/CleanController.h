

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.01.0622 */
/* at Tue Jan 19 14:14:07 2038
 */
/* Compiler settings for C:\Users\User\source\repos\MBAMExploit\Typelibs\CleanController.IDL:
    Oicf, W1, Zp8, env=Win64 (32b run), target_arch=AMD64 8.01.0622 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#include "CloudController.h"
#include "LicenseController.h"
#include "LogController.h"
#include "PoliciesController.h"
#include "TelemetryController.h"
#include "UpdateController.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */


#ifndef __CleanController_h__
#define __CleanController_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __ILinkerEventHandler_FWD_DEFINED__
#define __ILinkerEventHandler_FWD_DEFINED__
typedef interface ILinkerEventHandler ILinkerEventHandler;

#endif 	/* __ILinkerEventHandler_FWD_DEFINED__ */


#ifndef __ILinker_FWD_DEFINED__
#define __ILinker_FWD_DEFINED__
typedef interface ILinker ILinker;

#endif 	/* __ILinker_FWD_DEFINED__ */


#ifndef __ICleanController_FWD_DEFINED__
#define __ICleanController_FWD_DEFINED__
typedef interface ICleanController ICleanController;

#endif 	/* __ICleanController_FWD_DEFINED__ */


#ifndef __ICleanControllerV2_FWD_DEFINED__
#define __ICleanControllerV2_FWD_DEFINED__
typedef interface ICleanControllerV2 ICleanControllerV2;

#endif 	/* __ICleanControllerV2_FWD_DEFINED__ */


#ifndef __ICleanControllerV3_FWD_DEFINED__
#define __ICleanControllerV3_FWD_DEFINED__
typedef interface ICleanControllerV3 ICleanControllerV3;

#endif 	/* __ICleanControllerV3_FWD_DEFINED__ */


#ifndef __ICleanControllerV4_FWD_DEFINED__
#define __ICleanControllerV4_FWD_DEFINED__
typedef interface ICleanControllerV4 ICleanControllerV4;

#endif 	/* __ICleanControllerV4_FWD_DEFINED__ */


#ifndef __ICleanControllerV5_FWD_DEFINED__
#define __ICleanControllerV5_FWD_DEFINED__
typedef interface ICleanControllerV5 ICleanControllerV5;

#endif 	/* __ICleanControllerV5_FWD_DEFINED__ */


#ifndef __ICleanControllerV6_FWD_DEFINED__
#define __ICleanControllerV6_FWD_DEFINED__
typedef interface ICleanControllerV6 ICleanControllerV6;

#endif 	/* __ICleanControllerV6_FWD_DEFINED__ */


#ifndef __ICleanControllerV7_FWD_DEFINED__
#define __ICleanControllerV7_FWD_DEFINED__
typedef interface ICleanControllerV7 ICleanControllerV7;

#endif 	/* __ICleanControllerV7_FWD_DEFINED__ */


#ifndef __ICleanControllerV8_FWD_DEFINED__
#define __ICleanControllerV8_FWD_DEFINED__
typedef interface ICleanControllerV8 ICleanControllerV8;

#endif 	/* __ICleanControllerV8_FWD_DEFINED__ */


#ifndef __ICleanControllerEvents_FWD_DEFINED__
#define __ICleanControllerEvents_FWD_DEFINED__
typedef interface ICleanControllerEvents ICleanControllerEvents;

#endif 	/* __ICleanControllerEvents_FWD_DEFINED__ */


#ifndef ___ICleanControllerEvents_FWD_DEFINED__
#define ___ICleanControllerEvents_FWD_DEFINED__
typedef interface _ICleanControllerEvents _ICleanControllerEvents;

#endif 	/* ___ICleanControllerEvents_FWD_DEFINED__ */


#ifndef __ICleanControllerEventsV2_FWD_DEFINED__
#define __ICleanControllerEventsV2_FWD_DEFINED__
typedef interface ICleanControllerEventsV2 ICleanControllerEventsV2;

#endif 	/* __ICleanControllerEventsV2_FWD_DEFINED__ */


#ifndef ___ICleanControllerEventsV2_FWD_DEFINED__
#define ___ICleanControllerEventsV2_FWD_DEFINED__
typedef interface _ICleanControllerEventsV2 _ICleanControllerEventsV2;

#endif 	/* ___ICleanControllerEventsV2_FWD_DEFINED__ */


#ifndef __ICleanControllerEventsV3_FWD_DEFINED__
#define __ICleanControllerEventsV3_FWD_DEFINED__
typedef interface ICleanControllerEventsV3 ICleanControllerEventsV3;

#endif 	/* __ICleanControllerEventsV3_FWD_DEFINED__ */


#ifndef ___ICleanControllerEventsV3_FWD_DEFINED__
#define ___ICleanControllerEventsV3_FWD_DEFINED__
typedef interface _ICleanControllerEventsV3 _ICleanControllerEventsV3;

#endif 	/* ___ICleanControllerEventsV3_FWD_DEFINED__ */


#ifndef __ICleanControllerEventsV4_FWD_DEFINED__
#define __ICleanControllerEventsV4_FWD_DEFINED__
typedef interface ICleanControllerEventsV4 ICleanControllerEventsV4;

#endif 	/* __ICleanControllerEventsV4_FWD_DEFINED__ */


#ifndef ___ICleanControllerEventsV4_FWD_DEFINED__
#define ___ICleanControllerEventsV4_FWD_DEFINED__
typedef interface _ICleanControllerEventsV4 _ICleanControllerEventsV4;

#endif 	/* ___ICleanControllerEventsV4_FWD_DEFINED__ */


#ifndef __ICleanControllerEventsV5_FWD_DEFINED__
#define __ICleanControllerEventsV5_FWD_DEFINED__
typedef interface ICleanControllerEventsV5 ICleanControllerEventsV5;

#endif 	/* __ICleanControllerEventsV5_FWD_DEFINED__ */


#ifndef ___ICleanControllerEventsV5_FWD_DEFINED__
#define ___ICleanControllerEventsV5_FWD_DEFINED__
typedef interface _ICleanControllerEventsV5 _ICleanControllerEventsV5;

#endif 	/* ___ICleanControllerEventsV5_FWD_DEFINED__ */


#ifndef __CleanController_FWD_DEFINED__
#define __CleanController_FWD_DEFINED__

#ifdef __cplusplus
typedef class CleanController CleanController;
#else
typedef struct CleanController CleanController;
#endif /* __cplusplus */

#endif 	/* __CleanController_FWD_DEFINED__ */


#ifdef __cplusplus
extern "C"{
#endif 



#ifndef __CleanControllerCOMLib_LIBRARY_DEFINED__
#define __CleanControllerCOMLib_LIBRARY_DEFINED__

/* library CleanControllerCOMLib */
/* [custom][custom][custom][version][uuid] */ 





















typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_CleanController_0000_0000_0001
    {
        ClientFullUI	= 0,
        ClientRightClickUI	= 1,
        ClientPortableUI	= 2,
        ClientTrayUI	= 3,
        ClientScheduler	= 4,
        ClientAgent	= 5,
        ClientRtp	= 6,
        ClientOther	= 7
    } 	_ClientType;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_CleanController_0000_0000_0002
    {
        CleanStateNotRunning	= 0,
        CleanStateRunning	= 1,
        CleanStateStopped	= 2,
        CleanStateDORRequired	= 3,
        CleanStateComplete	= 4,
        CleanStateError	= 5
    } 	_CleanState;

typedef /* [public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_CleanController_0000_0000_0003
    {
        CCObjectTypeFile	= 0,
        CCObjectTypeFolder	= 1,
        CCObjectTypeRegKey	= 2,
        CCObjectTypeRegValue	= 3,
        CCObjectTypeProcess	= 4,
        CCObjectTypeModule	= 5,
        CCObjectTypeADS	= 6,
        CCObjectTypePhysicalSector	= 7,
        CCObjectTypeWMI	= 8
    } 	_CCObjectType;

typedef /* [public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_CleanController_0000_0000_0004
    {
        QuarantineResultNotStarted	= 0,
        QuarantineResultSuccessful	= 1,
        QuarantineResultDorQueued	= 2,
        QuarantineResultError	= 3
    } 	_QuarantineResult;

typedef /* [public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_CleanController_0000_0000_0005
    {
        CCLinkTypeNone	= 0,
        CCLinkTypeDirContent	= 1,
        CCLinkTypeLinkedTrace	= 2
    } 	_CCLinkType;

typedef /* [uuid] */  DECLSPEC_UUID("5BC9EA87-9D3A-4D65-8AD2-0B98F1F22802") struct tagQuarantineData
    {
    BSTR QuarantineItemID;
    BSTR ObjectPath;
    _CCObjectType ObjectType;
    long ThreatId;
    BSTR ThreatName;
    BSTR CleanTime;
    _QuarantineResult QuarantineResult;
    BSTR ParentID;
    _CCLinkType RelationToParent;
    } 	QuarantineData;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_CleanController_0000_0000_0006
    {
        CCErrorSuccessful	= 0,
        CCErrorDORQueued	= 1,
        CCErrorNoMatchingItem	= 2,
        CCWinSystemError	= 3,
        CCInternalError	= 4
    } 	_CCErrorCode;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_CleanController_0000_0000_0007
    {
        CCWLSourceNone	= 0,
        CCWLSourceSystemProtected	= 1,
        CCWLSourceMEPS	= 2,
        CCWLSourceRules	= 3,
        CCWLSourceSignature	= 4
    } 	_CCWhiteListSource;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_CleanController_0000_0000_0008
    {
        CCWLSourceV2None	= 0,
        CCWLSourceV2SystemProtected	= 1,
        CCWLSourceV2Hubble	= 2,
        CCWLSourceV2Rules	= 3,
        CCWLSourceV2Signature	= 4,
        CCWLSourceV2HubbleError	= 5
    } 	_CCWhiteListSourceV2;

typedef /* [public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_CleanController_0000_0000_0009
    {
        CCHL_Scan	= 0,
        CCHL_ARW	= 1,
        CCHL_RTP	= 2,
        CCHL_AE	= 3,
        CCHL_MWAC	= 4
    } 	_CCHistoryLogType;

typedef /* [uuid] */  DECLSPEC_UUID("E8C461FE-E5AD-43A9-90B4-C59732F71C79") struct tagHistoryEntry
    {
    _CCHistoryLogType LogType;
    DATE TimeStamp;
    BSTR FilePath;
    BSTR LogID;
    } 	HistoryEntry;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_CleanController_0000_0000_0010
    {
        CCDST_Unknown	= 0,
        CCDST_Scan	= 1,
        CCDST_ARW	= 2,
        CCDST_RTP	= 3,
        CCDST_AE	= 4,
        CCDST_MWAC	= 5
    } 	_CCDetectionSourceType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_CleanController_0001_0005_0001
    {
        CCManualStop	= 0,
        CCSystemStop	= 1
    } 	_CCStopType;


EXTERN_C const IID LIBID_CleanControllerCOMLib;

#ifndef __ILinkerEventHandler_INTERFACE_DEFINED__
#define __ILinkerEventHandler_INTERFACE_DEFINED__

/* interface ILinkerEventHandler */
/* [object][oleautomation][nonextensible][uuid] */ 


EXTERN_C const IID IID_ILinkerEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("59E42E77-5F19-4602-A559-3FFA9EE51202")
    ILinkerEventHandler : public IUnknown
    {
    public:
        virtual HRESULT __stdcall TraceLinkedCallback( 
            /* [in] */ long callID,
            /* [in] */ long ThreatId,
            /* [in] */ BSTR pThreatName,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pObjectPath,
            /* [in] */ _CCObjectType ObjectType,
            /* [in] */ long processID,
            /* [in] */ BSTR pTraceID,
            /* [in] */ BSTR pParentTraceID,
            /* [in] */ _CCLinkType linkType,
            VARIANT_BOOL isGeneratedByAction) = 0;
        
        virtual HRESULT __stdcall LinkingComplete( 
            /* [in] */ long callID) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ILinkerEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILinkerEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILinkerEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILinkerEventHandler * This);
        
        HRESULT ( __stdcall *TraceLinkedCallback )( 
            ILinkerEventHandler * This,
            /* [in] */ long callID,
            /* [in] */ long ThreatId,
            /* [in] */ BSTR pThreatName,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pObjectPath,
            /* [in] */ _CCObjectType ObjectType,
            /* [in] */ long processID,
            /* [in] */ BSTR pTraceID,
            /* [in] */ BSTR pParentTraceID,
            /* [in] */ _CCLinkType linkType,
            VARIANT_BOOL isGeneratedByAction);
        
        HRESULT ( __stdcall *LinkingComplete )( 
            ILinkerEventHandler * This,
            /* [in] */ long callID);
        
        END_INTERFACE
    } ILinkerEventHandlerVtbl;

    interface ILinkerEventHandler
    {
        CONST_VTBL struct ILinkerEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILinkerEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILinkerEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILinkerEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILinkerEventHandler_TraceLinkedCallback(This,callID,ThreatId,pThreatName,ruleID,pObjectPath,ObjectType,processID,pTraceID,pParentTraceID,linkType,isGeneratedByAction)	\
    ( (This)->lpVtbl -> TraceLinkedCallback(This,callID,ThreatId,pThreatName,ruleID,pObjectPath,ObjectType,processID,pTraceID,pParentTraceID,linkType,isGeneratedByAction) ) 

#define ILinkerEventHandler_LinkingComplete(This,callID)	\
    ( (This)->lpVtbl -> LinkingComplete(This,callID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILinkerEventHandler_INTERFACE_DEFINED__ */


#ifndef __ILinker_INTERFACE_DEFINED__
#define __ILinker_INTERFACE_DEFINED__

/* interface ILinker */
/* [object][oleautomation][nonextensible][uuid] */ 


EXTERN_C const IID IID_ILinker;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FA6C70E7-6A6D-4F4A-99BF-C8B375CB7E0C")
    ILinker : public IUnknown
    {
    public:
        virtual HRESULT __stdcall FindLinkedTraces( 
            /* [in] */ long callID,
            /* [in] */ BSTR pDetectionResultsContents,
            /* [out] */ BSTR *ppUpdatedDetectionResultsContents) = 0;
        
        virtual HRESULT __stdcall Stop( 
            /* [in] */ long timeoutMs) = 0;
        
        virtual HRESULT __stdcall SetLinkerEventHandler( 
            /* [in] */ ILinkerEventHandler *pEventHandler) = 0;
        
        virtual HRESULT __stdcall ClearLinkerEventHandler( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ILinkerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILinker * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILinker * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILinker * This);
        
        HRESULT ( __stdcall *FindLinkedTraces )( 
            ILinker * This,
            /* [in] */ long callID,
            /* [in] */ BSTR pDetectionResultsContents,
            /* [out] */ BSTR *ppUpdatedDetectionResultsContents);
        
        HRESULT ( __stdcall *Stop )( 
            ILinker * This,
            /* [in] */ long timeoutMs);
        
        HRESULT ( __stdcall *SetLinkerEventHandler )( 
            ILinker * This,
            /* [in] */ ILinkerEventHandler *pEventHandler);
        
        HRESULT ( __stdcall *ClearLinkerEventHandler )( 
            ILinker * This);
        
        END_INTERFACE
    } ILinkerVtbl;

    interface ILinker
    {
        CONST_VTBL struct ILinkerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILinker_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILinker_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILinker_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILinker_FindLinkedTraces(This,callID,pDetectionResultsContents,ppUpdatedDetectionResultsContents)	\
    ( (This)->lpVtbl -> FindLinkedTraces(This,callID,pDetectionResultsContents,ppUpdatedDetectionResultsContents) ) 

#define ILinker_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define ILinker_SetLinkerEventHandler(This,pEventHandler)	\
    ( (This)->lpVtbl -> SetLinkerEventHandler(This,pEventHandler) ) 

#define ILinker_ClearLinkerEventHandler(This)	\
    ( (This)->lpVtbl -> ClearLinkerEventHandler(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILinker_INTERFACE_DEFINED__ */


#ifndef __ICleanController_INTERFACE_DEFINED__
#define __ICleanController_INTERFACE_DEFINED__

/* interface ICleanController */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ICleanController;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1691A7E8-B8D1-46D5-BB29-3A4DB2D809C6")
    ICleanController : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Start( 
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Stop( 
            /* [in] */ long timeoutMs) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_QuarantinePath( 
            /* [in] */ BSTR ppPath) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_QuarantinePath( 
            /* [retval][out] */ BSTR *ppPath) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE QueueClean( 
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ SAFEARRAY * pIgnoreTraceIDs,
            /* [in] */ VARIANT_BOOL autoRebootUponDOR) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsCleanInProgress( 
            /* [retval][out] */ VARIANT_BOOL *pIsInProgress) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetCurrentCleanParameters( 
            /* [out] */ _ClientType *pClientType,
            /* [out] */ BSTR *ppClientID,
            /* [out] */ BSTR *ppDetectionResultsPath) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StopCurrentClean( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetQuarantineItems( 
            /* [retval][out] */ SAFEARRAY * *ppQuarantineItemsIds) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DeleteQuarantineItems( 
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RestoreQuarantineItems( 
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetQuarantineItemData( 
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ QuarantineData *pQuarantineData,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetQuarantineItemDataValues( 
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ BSTR *ppObjectPath,
            /* [out] */ _CCObjectType *pObjectType,
            /* [out] */ long *pThreatId,
            /* [out] */ BSTR *ppThreatName,
            /* [out] */ BSTR *ppCleanTime,
            /* [out] */ _QuarantineResult *pQuarantineResult,
            /* [out] */ BSTR *ppParentID,
            /* [out] */ _CCLinkType *pRelationToParent,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetLastOverallCleanResult( 
            /* [out] */ _CleanState *pCleanState,
            /* [out] */ long *pLastErrorCode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsDORRequired( 
            /* [retval][out] */ VARIANT_BOOL *pIsDORRequired) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PrepareUpdate( 
            /* [in] */ long timeoutMs) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FinishUpdate( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsFileWhiteListed( 
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsStartupComplete( 
            /* [retval][out] */ VARIANT_BOOL *pIsStartupComplete) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNewLinker( 
            /* [retval][out] */ ILinker **ppLinker) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetHistoryEntries( 
            /* [retval][out] */ SAFEARRAY * *ppEntries) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetHistoryLogContents( 
            /* [in] */ BSTR pFilePath,
            /* [in] */ long schemaVersion,
            /* [retval][out] */ BSTR *ppContents) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DeleteHistoryLog( 
            /* [in] */ BSTR pFilePath) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsFileWhiteListedEx( 
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICleanControllerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICleanController * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICleanController * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICleanController * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICleanController * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICleanController * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICleanController * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICleanController * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ICleanController * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ICleanController * This,
            /* [in] */ long timeoutMs);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_QuarantinePath )( 
            ICleanController * This,
            /* [in] */ BSTR ppPath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_QuarantinePath )( 
            ICleanController * This,
            /* [retval][out] */ BSTR *ppPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QueueClean )( 
            ICleanController * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ SAFEARRAY * pIgnoreTraceIDs,
            /* [in] */ VARIANT_BOOL autoRebootUponDOR);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsCleanInProgress )( 
            ICleanController * This,
            /* [retval][out] */ VARIANT_BOOL *pIsInProgress);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetCurrentCleanParameters )( 
            ICleanController * This,
            /* [out] */ _ClientType *pClientType,
            /* [out] */ BSTR *ppClientID,
            /* [out] */ BSTR *ppDetectionResultsPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopCurrentClean )( 
            ICleanController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItems )( 
            ICleanController * This,
            /* [retval][out] */ SAFEARRAY * *ppQuarantineItemsIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteQuarantineItems )( 
            ICleanController * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItems )( 
            ICleanController * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemData )( 
            ICleanController * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ QuarantineData *pQuarantineData,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemDataValues )( 
            ICleanController * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ BSTR *ppObjectPath,
            /* [out] */ _CCObjectType *pObjectType,
            /* [out] */ long *pThreatId,
            /* [out] */ BSTR *ppThreatName,
            /* [out] */ BSTR *ppCleanTime,
            /* [out] */ _QuarantineResult *pQuarantineResult,
            /* [out] */ BSTR *ppParentID,
            /* [out] */ _CCLinkType *pRelationToParent,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLastOverallCleanResult )( 
            ICleanController * This,
            /* [out] */ _CleanState *pCleanState,
            /* [out] */ long *pLastErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsDORRequired )( 
            ICleanController * This,
            /* [retval][out] */ VARIANT_BOOL *pIsDORRequired);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ICleanController * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ICleanController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListed )( 
            ICleanController * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsStartupComplete )( 
            ICleanController * This,
            /* [retval][out] */ VARIANT_BOOL *pIsStartupComplete);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNewLinker )( 
            ICleanController * This,
            /* [retval][out] */ ILinker **ppLinker);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryEntries )( 
            ICleanController * This,
            /* [retval][out] */ SAFEARRAY * *ppEntries);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryLogContents )( 
            ICleanController * This,
            /* [in] */ BSTR pFilePath,
            /* [in] */ long schemaVersion,
            /* [retval][out] */ BSTR *ppContents);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteHistoryLog )( 
            ICleanController * This,
            /* [in] */ BSTR pFilePath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListedEx )( 
            ICleanController * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        END_INTERFACE
    } ICleanControllerVtbl;

    interface ICleanController
    {
        CONST_VTBL struct ICleanControllerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICleanController_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICleanController_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICleanController_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICleanController_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICleanController_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICleanController_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICleanController_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICleanController_Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild) ) 

#define ICleanController_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define ICleanController_put_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> put_QuarantinePath(This,ppPath) ) 

#define ICleanController_get_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> get_QuarantinePath(This,ppPath) ) 

#define ICleanController_QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR)	\
    ( (This)->lpVtbl -> QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR) ) 

#define ICleanController_IsCleanInProgress(This,pIsInProgress)	\
    ( (This)->lpVtbl -> IsCleanInProgress(This,pIsInProgress) ) 

#define ICleanController_GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath)	\
    ( (This)->lpVtbl -> GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath) ) 

#define ICleanController_StopCurrentClean(This)	\
    ( (This)->lpVtbl -> StopCurrentClean(This) ) 

#define ICleanController_GetQuarantineItems(This,ppQuarantineItemsIds)	\
    ( (This)->lpVtbl -> GetQuarantineItems(This,ppQuarantineItemsIds) ) 

#define ICleanController_DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanController_RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanController_GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode) ) 

#define ICleanController_GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode) ) 

#define ICleanController_GetLastOverallCleanResult(This,pCleanState,pLastErrorCode)	\
    ( (This)->lpVtbl -> GetLastOverallCleanResult(This,pCleanState,pLastErrorCode) ) 

#define ICleanController_IsDORRequired(This,pIsDORRequired)	\
    ( (This)->lpVtbl -> IsDORRequired(This,pIsDORRequired) ) 

#define ICleanController_PrepareUpdate(This,timeoutMs)	\
    ( (This)->lpVtbl -> PrepareUpdate(This,timeoutMs) ) 

#define ICleanController_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ICleanController_IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource) ) 

#define ICleanController_IsStartupComplete(This,pIsStartupComplete)	\
    ( (This)->lpVtbl -> IsStartupComplete(This,pIsStartupComplete) ) 

#define ICleanController_GetNewLinker(This,ppLinker)	\
    ( (This)->lpVtbl -> GetNewLinker(This,ppLinker) ) 

#define ICleanController_GetHistoryEntries(This,ppEntries)	\
    ( (This)->lpVtbl -> GetHistoryEntries(This,ppEntries) ) 

#define ICleanController_GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents)	\
    ( (This)->lpVtbl -> GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents) ) 

#define ICleanController_DeleteHistoryLog(This,pFilePath)	\
    ( (This)->lpVtbl -> DeleteHistoryLog(This,pFilePath) ) 

#define ICleanController_IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICleanController_INTERFACE_DEFINED__ */


#ifndef __ICleanControllerV2_INTERFACE_DEFINED__
#define __ICleanControllerV2_INTERFACE_DEFINED__

/* interface ICleanControllerV2 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ICleanControllerV2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00A73BC0-754E-44E1-B190-D59E187A5EA1")
    ICleanControllerV2 : public ICleanController
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsFileWhiteListedExV2( 
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSourceV2 *pWhiteListSource) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RestoreQuarantineItemsAsync( 
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ VARIANT_BOOL *pSuccessful) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICleanControllerV2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICleanControllerV2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICleanControllerV2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICleanControllerV2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICleanControllerV2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICleanControllerV2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICleanControllerV2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICleanControllerV2 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ICleanControllerV2 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ICleanControllerV2 * This,
            /* [in] */ long timeoutMs);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_QuarantinePath )( 
            ICleanControllerV2 * This,
            /* [in] */ BSTR ppPath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_QuarantinePath )( 
            ICleanControllerV2 * This,
            /* [retval][out] */ BSTR *ppPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QueueClean )( 
            ICleanControllerV2 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ SAFEARRAY * pIgnoreTraceIDs,
            /* [in] */ VARIANT_BOOL autoRebootUponDOR);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsCleanInProgress )( 
            ICleanControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsInProgress);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetCurrentCleanParameters )( 
            ICleanControllerV2 * This,
            /* [out] */ _ClientType *pClientType,
            /* [out] */ BSTR *ppClientID,
            /* [out] */ BSTR *ppDetectionResultsPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopCurrentClean )( 
            ICleanControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItems )( 
            ICleanControllerV2 * This,
            /* [retval][out] */ SAFEARRAY * *ppQuarantineItemsIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteQuarantineItems )( 
            ICleanControllerV2 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItems )( 
            ICleanControllerV2 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemData )( 
            ICleanControllerV2 * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ QuarantineData *pQuarantineData,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemDataValues )( 
            ICleanControllerV2 * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ BSTR *ppObjectPath,
            /* [out] */ _CCObjectType *pObjectType,
            /* [out] */ long *pThreatId,
            /* [out] */ BSTR *ppThreatName,
            /* [out] */ BSTR *ppCleanTime,
            /* [out] */ _QuarantineResult *pQuarantineResult,
            /* [out] */ BSTR *ppParentID,
            /* [out] */ _CCLinkType *pRelationToParent,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLastOverallCleanResult )( 
            ICleanControllerV2 * This,
            /* [out] */ _CleanState *pCleanState,
            /* [out] */ long *pLastErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsDORRequired )( 
            ICleanControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsDORRequired);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ICleanControllerV2 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ICleanControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListed )( 
            ICleanControllerV2 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsStartupComplete )( 
            ICleanControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsStartupComplete);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNewLinker )( 
            ICleanControllerV2 * This,
            /* [retval][out] */ ILinker **ppLinker);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryEntries )( 
            ICleanControllerV2 * This,
            /* [retval][out] */ SAFEARRAY * *ppEntries);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryLogContents )( 
            ICleanControllerV2 * This,
            /* [in] */ BSTR pFilePath,
            /* [in] */ long schemaVersion,
            /* [retval][out] */ BSTR *ppContents);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteHistoryLog )( 
            ICleanControllerV2 * This,
            /* [in] */ BSTR pFilePath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListedEx )( 
            ICleanControllerV2 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListedExV2 )( 
            ICleanControllerV2 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSourceV2 *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItemsAsync )( 
            ICleanControllerV2 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ VARIANT_BOOL *pSuccessful);
        
        END_INTERFACE
    } ICleanControllerV2Vtbl;

    interface ICleanControllerV2
    {
        CONST_VTBL struct ICleanControllerV2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICleanControllerV2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICleanControllerV2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICleanControllerV2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICleanControllerV2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICleanControllerV2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICleanControllerV2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICleanControllerV2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICleanControllerV2_Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild) ) 

#define ICleanControllerV2_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define ICleanControllerV2_put_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> put_QuarantinePath(This,ppPath) ) 

#define ICleanControllerV2_get_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> get_QuarantinePath(This,ppPath) ) 

#define ICleanControllerV2_QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR)	\
    ( (This)->lpVtbl -> QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR) ) 

#define ICleanControllerV2_IsCleanInProgress(This,pIsInProgress)	\
    ( (This)->lpVtbl -> IsCleanInProgress(This,pIsInProgress) ) 

#define ICleanControllerV2_GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath)	\
    ( (This)->lpVtbl -> GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath) ) 

#define ICleanControllerV2_StopCurrentClean(This)	\
    ( (This)->lpVtbl -> StopCurrentClean(This) ) 

#define ICleanControllerV2_GetQuarantineItems(This,ppQuarantineItemsIds)	\
    ( (This)->lpVtbl -> GetQuarantineItems(This,ppQuarantineItemsIds) ) 

#define ICleanControllerV2_DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV2_RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV2_GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV2_GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV2_GetLastOverallCleanResult(This,pCleanState,pLastErrorCode)	\
    ( (This)->lpVtbl -> GetLastOverallCleanResult(This,pCleanState,pLastErrorCode) ) 

#define ICleanControllerV2_IsDORRequired(This,pIsDORRequired)	\
    ( (This)->lpVtbl -> IsDORRequired(This,pIsDORRequired) ) 

#define ICleanControllerV2_PrepareUpdate(This,timeoutMs)	\
    ( (This)->lpVtbl -> PrepareUpdate(This,timeoutMs) ) 

#define ICleanControllerV2_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ICleanControllerV2_IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource) ) 

#define ICleanControllerV2_IsStartupComplete(This,pIsStartupComplete)	\
    ( (This)->lpVtbl -> IsStartupComplete(This,pIsStartupComplete) ) 

#define ICleanControllerV2_GetNewLinker(This,ppLinker)	\
    ( (This)->lpVtbl -> GetNewLinker(This,ppLinker) ) 

#define ICleanControllerV2_GetHistoryEntries(This,ppEntries)	\
    ( (This)->lpVtbl -> GetHistoryEntries(This,ppEntries) ) 

#define ICleanControllerV2_GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents)	\
    ( (This)->lpVtbl -> GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents) ) 

#define ICleanControllerV2_DeleteHistoryLog(This,pFilePath)	\
    ( (This)->lpVtbl -> DeleteHistoryLog(This,pFilePath) ) 

#define ICleanControllerV2_IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource) ) 


#define ICleanControllerV2_IsFileWhiteListedExV2(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListedExV2(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource) ) 

#define ICleanControllerV2_RestoreQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful)	\
    ( (This)->lpVtbl -> RestoreQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICleanControllerV2_INTERFACE_DEFINED__ */


#ifndef __ICleanControllerV3_INTERFACE_DEFINED__
#define __ICleanControllerV3_INTERFACE_DEFINED__

/* interface ICleanControllerV3 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ICleanControllerV3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A0101B90-FD0B-40CF-90E4-33650F09A80F")
    ICleanControllerV3 : public ICleanControllerV2
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetWhiteListStatus( 
            /* [in] */ BSTR pInWhiteListData,
            /* [out] */ BSTR *ppOutWhiteListData) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DeleteQuarantineItemsAsync( 
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ VARIANT_BOOL *pSuccessful) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICleanControllerV3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICleanControllerV3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICleanControllerV3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICleanControllerV3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICleanControllerV3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICleanControllerV3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICleanControllerV3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICleanControllerV3 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ICleanControllerV3 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ICleanControllerV3 * This,
            /* [in] */ long timeoutMs);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_QuarantinePath )( 
            ICleanControllerV3 * This,
            /* [in] */ BSTR ppPath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_QuarantinePath )( 
            ICleanControllerV3 * This,
            /* [retval][out] */ BSTR *ppPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QueueClean )( 
            ICleanControllerV3 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ SAFEARRAY * pIgnoreTraceIDs,
            /* [in] */ VARIANT_BOOL autoRebootUponDOR);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsCleanInProgress )( 
            ICleanControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsInProgress);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetCurrentCleanParameters )( 
            ICleanControllerV3 * This,
            /* [out] */ _ClientType *pClientType,
            /* [out] */ BSTR *ppClientID,
            /* [out] */ BSTR *ppDetectionResultsPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopCurrentClean )( 
            ICleanControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItems )( 
            ICleanControllerV3 * This,
            /* [retval][out] */ SAFEARRAY * *ppQuarantineItemsIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteQuarantineItems )( 
            ICleanControllerV3 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItems )( 
            ICleanControllerV3 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemData )( 
            ICleanControllerV3 * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ QuarantineData *pQuarantineData,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemDataValues )( 
            ICleanControllerV3 * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ BSTR *ppObjectPath,
            /* [out] */ _CCObjectType *pObjectType,
            /* [out] */ long *pThreatId,
            /* [out] */ BSTR *ppThreatName,
            /* [out] */ BSTR *ppCleanTime,
            /* [out] */ _QuarantineResult *pQuarantineResult,
            /* [out] */ BSTR *ppParentID,
            /* [out] */ _CCLinkType *pRelationToParent,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLastOverallCleanResult )( 
            ICleanControllerV3 * This,
            /* [out] */ _CleanState *pCleanState,
            /* [out] */ long *pLastErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsDORRequired )( 
            ICleanControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsDORRequired);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ICleanControllerV3 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ICleanControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListed )( 
            ICleanControllerV3 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsStartupComplete )( 
            ICleanControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsStartupComplete);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNewLinker )( 
            ICleanControllerV3 * This,
            /* [retval][out] */ ILinker **ppLinker);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryEntries )( 
            ICleanControllerV3 * This,
            /* [retval][out] */ SAFEARRAY * *ppEntries);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryLogContents )( 
            ICleanControllerV3 * This,
            /* [in] */ BSTR pFilePath,
            /* [in] */ long schemaVersion,
            /* [retval][out] */ BSTR *ppContents);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteHistoryLog )( 
            ICleanControllerV3 * This,
            /* [in] */ BSTR pFilePath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListedEx )( 
            ICleanControllerV3 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListedExV2 )( 
            ICleanControllerV3 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSourceV2 *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItemsAsync )( 
            ICleanControllerV3 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ VARIANT_BOOL *pSuccessful);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetWhiteListStatus )( 
            ICleanControllerV3 * This,
            /* [in] */ BSTR pInWhiteListData,
            /* [out] */ BSTR *ppOutWhiteListData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteQuarantineItemsAsync )( 
            ICleanControllerV3 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ VARIANT_BOOL *pSuccessful);
        
        END_INTERFACE
    } ICleanControllerV3Vtbl;

    interface ICleanControllerV3
    {
        CONST_VTBL struct ICleanControllerV3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICleanControllerV3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICleanControllerV3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICleanControllerV3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICleanControllerV3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICleanControllerV3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICleanControllerV3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICleanControllerV3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICleanControllerV3_Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild) ) 

#define ICleanControllerV3_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define ICleanControllerV3_put_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> put_QuarantinePath(This,ppPath) ) 

#define ICleanControllerV3_get_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> get_QuarantinePath(This,ppPath) ) 

#define ICleanControllerV3_QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR)	\
    ( (This)->lpVtbl -> QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR) ) 

#define ICleanControllerV3_IsCleanInProgress(This,pIsInProgress)	\
    ( (This)->lpVtbl -> IsCleanInProgress(This,pIsInProgress) ) 

#define ICleanControllerV3_GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath)	\
    ( (This)->lpVtbl -> GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath) ) 

#define ICleanControllerV3_StopCurrentClean(This)	\
    ( (This)->lpVtbl -> StopCurrentClean(This) ) 

#define ICleanControllerV3_GetQuarantineItems(This,ppQuarantineItemsIds)	\
    ( (This)->lpVtbl -> GetQuarantineItems(This,ppQuarantineItemsIds) ) 

#define ICleanControllerV3_DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV3_RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV3_GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV3_GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV3_GetLastOverallCleanResult(This,pCleanState,pLastErrorCode)	\
    ( (This)->lpVtbl -> GetLastOverallCleanResult(This,pCleanState,pLastErrorCode) ) 

#define ICleanControllerV3_IsDORRequired(This,pIsDORRequired)	\
    ( (This)->lpVtbl -> IsDORRequired(This,pIsDORRequired) ) 

#define ICleanControllerV3_PrepareUpdate(This,timeoutMs)	\
    ( (This)->lpVtbl -> PrepareUpdate(This,timeoutMs) ) 

#define ICleanControllerV3_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ICleanControllerV3_IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource) ) 

#define ICleanControllerV3_IsStartupComplete(This,pIsStartupComplete)	\
    ( (This)->lpVtbl -> IsStartupComplete(This,pIsStartupComplete) ) 

#define ICleanControllerV3_GetNewLinker(This,ppLinker)	\
    ( (This)->lpVtbl -> GetNewLinker(This,ppLinker) ) 

#define ICleanControllerV3_GetHistoryEntries(This,ppEntries)	\
    ( (This)->lpVtbl -> GetHistoryEntries(This,ppEntries) ) 

#define ICleanControllerV3_GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents)	\
    ( (This)->lpVtbl -> GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents) ) 

#define ICleanControllerV3_DeleteHistoryLog(This,pFilePath)	\
    ( (This)->lpVtbl -> DeleteHistoryLog(This,pFilePath) ) 

#define ICleanControllerV3_IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource) ) 


#define ICleanControllerV3_IsFileWhiteListedExV2(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListedExV2(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource) ) 

#define ICleanControllerV3_RestoreQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful)	\
    ( (This)->lpVtbl -> RestoreQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful) ) 


#define ICleanControllerV3_GetWhiteListStatus(This,pInWhiteListData,ppOutWhiteListData)	\
    ( (This)->lpVtbl -> GetWhiteListStatus(This,pInWhiteListData,ppOutWhiteListData) ) 

#define ICleanControllerV3_DeleteQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful)	\
    ( (This)->lpVtbl -> DeleteQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICleanControllerV3_INTERFACE_DEFINED__ */


#ifndef __ICleanControllerV4_INTERFACE_DEFINED__
#define __ICleanControllerV4_INTERFACE_DEFINED__

/* interface ICleanControllerV4 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ICleanControllerV4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3641B831-731C-4963-B50B-D84902285C26")
    ICleanControllerV4 : public ICleanControllerV3
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsDORCompleted( 
            /* [out] */ BSTR *ppHistoryFilePath,
            /* [out] */ BSTR *ppHistoryLogID,
            /* [out] */ _CCHistoryLogType *pHistoryLogType,
            /* [out] */ DATE *pHistoryTimestamp,
            /* [retval][out] */ VARIANT_BOOL *pIsDORCompleted) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SessionLogonNotification( 
            /* [in] */ unsigned long sessionID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ClearDORCompletedStatus( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICleanControllerV4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICleanControllerV4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICleanControllerV4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICleanControllerV4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICleanControllerV4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICleanControllerV4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICleanControllerV4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICleanControllerV4 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ICleanControllerV4 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ICleanControllerV4 * This,
            /* [in] */ long timeoutMs);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_QuarantinePath )( 
            ICleanControllerV4 * This,
            /* [in] */ BSTR ppPath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_QuarantinePath )( 
            ICleanControllerV4 * This,
            /* [retval][out] */ BSTR *ppPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QueueClean )( 
            ICleanControllerV4 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ SAFEARRAY * pIgnoreTraceIDs,
            /* [in] */ VARIANT_BOOL autoRebootUponDOR);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsCleanInProgress )( 
            ICleanControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsInProgress);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetCurrentCleanParameters )( 
            ICleanControllerV4 * This,
            /* [out] */ _ClientType *pClientType,
            /* [out] */ BSTR *ppClientID,
            /* [out] */ BSTR *ppDetectionResultsPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopCurrentClean )( 
            ICleanControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItems )( 
            ICleanControllerV4 * This,
            /* [retval][out] */ SAFEARRAY * *ppQuarantineItemsIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteQuarantineItems )( 
            ICleanControllerV4 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItems )( 
            ICleanControllerV4 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemData )( 
            ICleanControllerV4 * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ QuarantineData *pQuarantineData,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemDataValues )( 
            ICleanControllerV4 * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ BSTR *ppObjectPath,
            /* [out] */ _CCObjectType *pObjectType,
            /* [out] */ long *pThreatId,
            /* [out] */ BSTR *ppThreatName,
            /* [out] */ BSTR *ppCleanTime,
            /* [out] */ _QuarantineResult *pQuarantineResult,
            /* [out] */ BSTR *ppParentID,
            /* [out] */ _CCLinkType *pRelationToParent,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLastOverallCleanResult )( 
            ICleanControllerV4 * This,
            /* [out] */ _CleanState *pCleanState,
            /* [out] */ long *pLastErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsDORRequired )( 
            ICleanControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsDORRequired);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ICleanControllerV4 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ICleanControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListed )( 
            ICleanControllerV4 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsStartupComplete )( 
            ICleanControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsStartupComplete);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNewLinker )( 
            ICleanControllerV4 * This,
            /* [retval][out] */ ILinker **ppLinker);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryEntries )( 
            ICleanControllerV4 * This,
            /* [retval][out] */ SAFEARRAY * *ppEntries);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryLogContents )( 
            ICleanControllerV4 * This,
            /* [in] */ BSTR pFilePath,
            /* [in] */ long schemaVersion,
            /* [retval][out] */ BSTR *ppContents);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteHistoryLog )( 
            ICleanControllerV4 * This,
            /* [in] */ BSTR pFilePath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListedEx )( 
            ICleanControllerV4 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListedExV2 )( 
            ICleanControllerV4 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSourceV2 *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItemsAsync )( 
            ICleanControllerV4 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ VARIANT_BOOL *pSuccessful);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetWhiteListStatus )( 
            ICleanControllerV4 * This,
            /* [in] */ BSTR pInWhiteListData,
            /* [out] */ BSTR *ppOutWhiteListData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteQuarantineItemsAsync )( 
            ICleanControllerV4 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ VARIANT_BOOL *pSuccessful);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsDORCompleted )( 
            ICleanControllerV4 * This,
            /* [out] */ BSTR *ppHistoryFilePath,
            /* [out] */ BSTR *ppHistoryLogID,
            /* [out] */ _CCHistoryLogType *pHistoryLogType,
            /* [out] */ DATE *pHistoryTimestamp,
            /* [retval][out] */ VARIANT_BOOL *pIsDORCompleted);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SessionLogonNotification )( 
            ICleanControllerV4 * This,
            /* [in] */ unsigned long sessionID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearDORCompletedStatus )( 
            ICleanControllerV4 * This);
        
        END_INTERFACE
    } ICleanControllerV4Vtbl;

    interface ICleanControllerV4
    {
        CONST_VTBL struct ICleanControllerV4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICleanControllerV4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICleanControllerV4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICleanControllerV4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICleanControllerV4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICleanControllerV4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICleanControllerV4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICleanControllerV4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICleanControllerV4_Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild) ) 

#define ICleanControllerV4_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define ICleanControllerV4_put_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> put_QuarantinePath(This,ppPath) ) 

#define ICleanControllerV4_get_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> get_QuarantinePath(This,ppPath) ) 

#define ICleanControllerV4_QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR)	\
    ( (This)->lpVtbl -> QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR) ) 

#define ICleanControllerV4_IsCleanInProgress(This,pIsInProgress)	\
    ( (This)->lpVtbl -> IsCleanInProgress(This,pIsInProgress) ) 

#define ICleanControllerV4_GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath)	\
    ( (This)->lpVtbl -> GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath) ) 

#define ICleanControllerV4_StopCurrentClean(This)	\
    ( (This)->lpVtbl -> StopCurrentClean(This) ) 

#define ICleanControllerV4_GetQuarantineItems(This,ppQuarantineItemsIds)	\
    ( (This)->lpVtbl -> GetQuarantineItems(This,ppQuarantineItemsIds) ) 

#define ICleanControllerV4_DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV4_RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV4_GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV4_GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV4_GetLastOverallCleanResult(This,pCleanState,pLastErrorCode)	\
    ( (This)->lpVtbl -> GetLastOverallCleanResult(This,pCleanState,pLastErrorCode) ) 

#define ICleanControllerV4_IsDORRequired(This,pIsDORRequired)	\
    ( (This)->lpVtbl -> IsDORRequired(This,pIsDORRequired) ) 

#define ICleanControllerV4_PrepareUpdate(This,timeoutMs)	\
    ( (This)->lpVtbl -> PrepareUpdate(This,timeoutMs) ) 

#define ICleanControllerV4_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ICleanControllerV4_IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource) ) 

#define ICleanControllerV4_IsStartupComplete(This,pIsStartupComplete)	\
    ( (This)->lpVtbl -> IsStartupComplete(This,pIsStartupComplete) ) 

#define ICleanControllerV4_GetNewLinker(This,ppLinker)	\
    ( (This)->lpVtbl -> GetNewLinker(This,ppLinker) ) 

#define ICleanControllerV4_GetHistoryEntries(This,ppEntries)	\
    ( (This)->lpVtbl -> GetHistoryEntries(This,ppEntries) ) 

#define ICleanControllerV4_GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents)	\
    ( (This)->lpVtbl -> GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents) ) 

#define ICleanControllerV4_DeleteHistoryLog(This,pFilePath)	\
    ( (This)->lpVtbl -> DeleteHistoryLog(This,pFilePath) ) 

#define ICleanControllerV4_IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource) ) 


#define ICleanControllerV4_IsFileWhiteListedExV2(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListedExV2(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource) ) 

#define ICleanControllerV4_RestoreQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful)	\
    ( (This)->lpVtbl -> RestoreQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful) ) 


#define ICleanControllerV4_GetWhiteListStatus(This,pInWhiteListData,ppOutWhiteListData)	\
    ( (This)->lpVtbl -> GetWhiteListStatus(This,pInWhiteListData,ppOutWhiteListData) ) 

#define ICleanControllerV4_DeleteQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful)	\
    ( (This)->lpVtbl -> DeleteQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful) ) 


#define ICleanControllerV4_IsDORCompleted(This,ppHistoryFilePath,ppHistoryLogID,pHistoryLogType,pHistoryTimestamp,pIsDORCompleted)	\
    ( (This)->lpVtbl -> IsDORCompleted(This,ppHistoryFilePath,ppHistoryLogID,pHistoryLogType,pHistoryTimestamp,pIsDORCompleted) ) 

#define ICleanControllerV4_SessionLogonNotification(This,sessionID)	\
    ( (This)->lpVtbl -> SessionLogonNotification(This,sessionID) ) 

#define ICleanControllerV4_ClearDORCompletedStatus(This)	\
    ( (This)->lpVtbl -> ClearDORCompletedStatus(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICleanControllerV4_INTERFACE_DEFINED__ */


#ifndef __ICleanControllerV5_INTERFACE_DEFINED__
#define __ICleanControllerV5_INTERFACE_DEFINED__

/* interface ICleanControllerV5 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ICleanControllerV5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4F3822FA-CCD5-4934-AB6D-3382B2F91DB9")
    ICleanControllerV5 : public ICleanControllerV4
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StopV2( 
            /* [in] */ long timeoutMs,
            /* [in] */ _CCStopType stopType) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICleanControllerV5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICleanControllerV5 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICleanControllerV5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICleanControllerV5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICleanControllerV5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICleanControllerV5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICleanControllerV5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICleanControllerV5 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ICleanControllerV5 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ICleanControllerV5 * This,
            /* [in] */ long timeoutMs);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_QuarantinePath )( 
            ICleanControllerV5 * This,
            /* [in] */ BSTR ppPath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_QuarantinePath )( 
            ICleanControllerV5 * This,
            /* [retval][out] */ BSTR *ppPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QueueClean )( 
            ICleanControllerV5 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ SAFEARRAY * pIgnoreTraceIDs,
            /* [in] */ VARIANT_BOOL autoRebootUponDOR);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsCleanInProgress )( 
            ICleanControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsInProgress);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetCurrentCleanParameters )( 
            ICleanControllerV5 * This,
            /* [out] */ _ClientType *pClientType,
            /* [out] */ BSTR *ppClientID,
            /* [out] */ BSTR *ppDetectionResultsPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopCurrentClean )( 
            ICleanControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItems )( 
            ICleanControllerV5 * This,
            /* [retval][out] */ SAFEARRAY * *ppQuarantineItemsIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteQuarantineItems )( 
            ICleanControllerV5 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItems )( 
            ICleanControllerV5 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemData )( 
            ICleanControllerV5 * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ QuarantineData *pQuarantineData,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemDataValues )( 
            ICleanControllerV5 * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ BSTR *ppObjectPath,
            /* [out] */ _CCObjectType *pObjectType,
            /* [out] */ long *pThreatId,
            /* [out] */ BSTR *ppThreatName,
            /* [out] */ BSTR *ppCleanTime,
            /* [out] */ _QuarantineResult *pQuarantineResult,
            /* [out] */ BSTR *ppParentID,
            /* [out] */ _CCLinkType *pRelationToParent,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLastOverallCleanResult )( 
            ICleanControllerV5 * This,
            /* [out] */ _CleanState *pCleanState,
            /* [out] */ long *pLastErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsDORRequired )( 
            ICleanControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsDORRequired);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ICleanControllerV5 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ICleanControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListed )( 
            ICleanControllerV5 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsStartupComplete )( 
            ICleanControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsStartupComplete);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNewLinker )( 
            ICleanControllerV5 * This,
            /* [retval][out] */ ILinker **ppLinker);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryEntries )( 
            ICleanControllerV5 * This,
            /* [retval][out] */ SAFEARRAY * *ppEntries);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryLogContents )( 
            ICleanControllerV5 * This,
            /* [in] */ BSTR pFilePath,
            /* [in] */ long schemaVersion,
            /* [retval][out] */ BSTR *ppContents);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteHistoryLog )( 
            ICleanControllerV5 * This,
            /* [in] */ BSTR pFilePath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListedEx )( 
            ICleanControllerV5 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListedExV2 )( 
            ICleanControllerV5 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSourceV2 *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItemsAsync )( 
            ICleanControllerV5 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ VARIANT_BOOL *pSuccessful);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetWhiteListStatus )( 
            ICleanControllerV5 * This,
            /* [in] */ BSTR pInWhiteListData,
            /* [out] */ BSTR *ppOutWhiteListData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteQuarantineItemsAsync )( 
            ICleanControllerV5 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ VARIANT_BOOL *pSuccessful);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsDORCompleted )( 
            ICleanControllerV5 * This,
            /* [out] */ BSTR *ppHistoryFilePath,
            /* [out] */ BSTR *ppHistoryLogID,
            /* [out] */ _CCHistoryLogType *pHistoryLogType,
            /* [out] */ DATE *pHistoryTimestamp,
            /* [retval][out] */ VARIANT_BOOL *pIsDORCompleted);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SessionLogonNotification )( 
            ICleanControllerV5 * This,
            /* [in] */ unsigned long sessionID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearDORCompletedStatus )( 
            ICleanControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopV2 )( 
            ICleanControllerV5 * This,
            /* [in] */ long timeoutMs,
            /* [in] */ _CCStopType stopType);
        
        END_INTERFACE
    } ICleanControllerV5Vtbl;

    interface ICleanControllerV5
    {
        CONST_VTBL struct ICleanControllerV5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICleanControllerV5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICleanControllerV5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICleanControllerV5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICleanControllerV5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICleanControllerV5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICleanControllerV5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICleanControllerV5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICleanControllerV5_Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild) ) 

#define ICleanControllerV5_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define ICleanControllerV5_put_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> put_QuarantinePath(This,ppPath) ) 

#define ICleanControllerV5_get_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> get_QuarantinePath(This,ppPath) ) 

#define ICleanControllerV5_QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR)	\
    ( (This)->lpVtbl -> QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR) ) 

#define ICleanControllerV5_IsCleanInProgress(This,pIsInProgress)	\
    ( (This)->lpVtbl -> IsCleanInProgress(This,pIsInProgress) ) 

#define ICleanControllerV5_GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath)	\
    ( (This)->lpVtbl -> GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath) ) 

#define ICleanControllerV5_StopCurrentClean(This)	\
    ( (This)->lpVtbl -> StopCurrentClean(This) ) 

#define ICleanControllerV5_GetQuarantineItems(This,ppQuarantineItemsIds)	\
    ( (This)->lpVtbl -> GetQuarantineItems(This,ppQuarantineItemsIds) ) 

#define ICleanControllerV5_DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV5_RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV5_GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV5_GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV5_GetLastOverallCleanResult(This,pCleanState,pLastErrorCode)	\
    ( (This)->lpVtbl -> GetLastOverallCleanResult(This,pCleanState,pLastErrorCode) ) 

#define ICleanControllerV5_IsDORRequired(This,pIsDORRequired)	\
    ( (This)->lpVtbl -> IsDORRequired(This,pIsDORRequired) ) 

#define ICleanControllerV5_PrepareUpdate(This,timeoutMs)	\
    ( (This)->lpVtbl -> PrepareUpdate(This,timeoutMs) ) 

#define ICleanControllerV5_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ICleanControllerV5_IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource) ) 

#define ICleanControllerV5_IsStartupComplete(This,pIsStartupComplete)	\
    ( (This)->lpVtbl -> IsStartupComplete(This,pIsStartupComplete) ) 

#define ICleanControllerV5_GetNewLinker(This,ppLinker)	\
    ( (This)->lpVtbl -> GetNewLinker(This,ppLinker) ) 

#define ICleanControllerV5_GetHistoryEntries(This,ppEntries)	\
    ( (This)->lpVtbl -> GetHistoryEntries(This,ppEntries) ) 

#define ICleanControllerV5_GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents)	\
    ( (This)->lpVtbl -> GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents) ) 

#define ICleanControllerV5_DeleteHistoryLog(This,pFilePath)	\
    ( (This)->lpVtbl -> DeleteHistoryLog(This,pFilePath) ) 

#define ICleanControllerV5_IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource) ) 


#define ICleanControllerV5_IsFileWhiteListedExV2(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListedExV2(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource) ) 

#define ICleanControllerV5_RestoreQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful)	\
    ( (This)->lpVtbl -> RestoreQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful) ) 


#define ICleanControllerV5_GetWhiteListStatus(This,pInWhiteListData,ppOutWhiteListData)	\
    ( (This)->lpVtbl -> GetWhiteListStatus(This,pInWhiteListData,ppOutWhiteListData) ) 

#define ICleanControllerV5_DeleteQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful)	\
    ( (This)->lpVtbl -> DeleteQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful) ) 


#define ICleanControllerV5_IsDORCompleted(This,ppHistoryFilePath,ppHistoryLogID,pHistoryLogType,pHistoryTimestamp,pIsDORCompleted)	\
    ( (This)->lpVtbl -> IsDORCompleted(This,ppHistoryFilePath,ppHistoryLogID,pHistoryLogType,pHistoryTimestamp,pIsDORCompleted) ) 

#define ICleanControllerV5_SessionLogonNotification(This,sessionID)	\
    ( (This)->lpVtbl -> SessionLogonNotification(This,sessionID) ) 

#define ICleanControllerV5_ClearDORCompletedStatus(This)	\
    ( (This)->lpVtbl -> ClearDORCompletedStatus(This) ) 


#define ICleanControllerV5_StopV2(This,timeoutMs,stopType)	\
    ( (This)->lpVtbl -> StopV2(This,timeoutMs,stopType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICleanControllerV5_INTERFACE_DEFINED__ */


#ifndef __ICleanControllerV6_INTERFACE_DEFINED__
#define __ICleanControllerV6_INTERFACE_DEFINED__

/* interface ICleanControllerV6 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ICleanControllerV6;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8D488C7C-023D-4561-B377-DD9FB7124326")
    ICleanControllerV6 : public ICleanControllerV5
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StartV2( 
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RefreshQuarantineTelemetryData( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICleanControllerV6Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICleanControllerV6 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICleanControllerV6 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICleanControllerV6 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICleanControllerV6 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICleanControllerV6 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICleanControllerV6 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICleanControllerV6 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ICleanControllerV6 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ICleanControllerV6 * This,
            /* [in] */ long timeoutMs);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_QuarantinePath )( 
            ICleanControllerV6 * This,
            /* [in] */ BSTR ppPath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_QuarantinePath )( 
            ICleanControllerV6 * This,
            /* [retval][out] */ BSTR *ppPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QueueClean )( 
            ICleanControllerV6 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ SAFEARRAY * pIgnoreTraceIDs,
            /* [in] */ VARIANT_BOOL autoRebootUponDOR);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsCleanInProgress )( 
            ICleanControllerV6 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsInProgress);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetCurrentCleanParameters )( 
            ICleanControllerV6 * This,
            /* [out] */ _ClientType *pClientType,
            /* [out] */ BSTR *ppClientID,
            /* [out] */ BSTR *ppDetectionResultsPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopCurrentClean )( 
            ICleanControllerV6 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItems )( 
            ICleanControllerV6 * This,
            /* [retval][out] */ SAFEARRAY * *ppQuarantineItemsIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteQuarantineItems )( 
            ICleanControllerV6 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItems )( 
            ICleanControllerV6 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemData )( 
            ICleanControllerV6 * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ QuarantineData *pQuarantineData,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemDataValues )( 
            ICleanControllerV6 * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ BSTR *ppObjectPath,
            /* [out] */ _CCObjectType *pObjectType,
            /* [out] */ long *pThreatId,
            /* [out] */ BSTR *ppThreatName,
            /* [out] */ BSTR *ppCleanTime,
            /* [out] */ _QuarantineResult *pQuarantineResult,
            /* [out] */ BSTR *ppParentID,
            /* [out] */ _CCLinkType *pRelationToParent,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLastOverallCleanResult )( 
            ICleanControllerV6 * This,
            /* [out] */ _CleanState *pCleanState,
            /* [out] */ long *pLastErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsDORRequired )( 
            ICleanControllerV6 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsDORRequired);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ICleanControllerV6 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ICleanControllerV6 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListed )( 
            ICleanControllerV6 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsStartupComplete )( 
            ICleanControllerV6 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsStartupComplete);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNewLinker )( 
            ICleanControllerV6 * This,
            /* [retval][out] */ ILinker **ppLinker);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryEntries )( 
            ICleanControllerV6 * This,
            /* [retval][out] */ SAFEARRAY * *ppEntries);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryLogContents )( 
            ICleanControllerV6 * This,
            /* [in] */ BSTR pFilePath,
            /* [in] */ long schemaVersion,
            /* [retval][out] */ BSTR *ppContents);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteHistoryLog )( 
            ICleanControllerV6 * This,
            /* [in] */ BSTR pFilePath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListedEx )( 
            ICleanControllerV6 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListedExV2 )( 
            ICleanControllerV6 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSourceV2 *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItemsAsync )( 
            ICleanControllerV6 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ VARIANT_BOOL *pSuccessful);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetWhiteListStatus )( 
            ICleanControllerV6 * This,
            /* [in] */ BSTR pInWhiteListData,
            /* [out] */ BSTR *ppOutWhiteListData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteQuarantineItemsAsync )( 
            ICleanControllerV6 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ VARIANT_BOOL *pSuccessful);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsDORCompleted )( 
            ICleanControllerV6 * This,
            /* [out] */ BSTR *ppHistoryFilePath,
            /* [out] */ BSTR *ppHistoryLogID,
            /* [out] */ _CCHistoryLogType *pHistoryLogType,
            /* [out] */ DATE *pHistoryTimestamp,
            /* [retval][out] */ VARIANT_BOOL *pIsDORCompleted);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SessionLogonNotification )( 
            ICleanControllerV6 * This,
            /* [in] */ unsigned long sessionID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearDORCompletedStatus )( 
            ICleanControllerV6 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopV2 )( 
            ICleanControllerV6 * This,
            /* [in] */ long timeoutMs,
            /* [in] */ _CCStopType stopType);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            ICleanControllerV6 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RefreshQuarantineTelemetryData )( 
            ICleanControllerV6 * This);
        
        END_INTERFACE
    } ICleanControllerV6Vtbl;

    interface ICleanControllerV6
    {
        CONST_VTBL struct ICleanControllerV6Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICleanControllerV6_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICleanControllerV6_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICleanControllerV6_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICleanControllerV6_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICleanControllerV6_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICleanControllerV6_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICleanControllerV6_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICleanControllerV6_Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild) ) 

#define ICleanControllerV6_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define ICleanControllerV6_put_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> put_QuarantinePath(This,ppPath) ) 

#define ICleanControllerV6_get_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> get_QuarantinePath(This,ppPath) ) 

#define ICleanControllerV6_QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR)	\
    ( (This)->lpVtbl -> QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR) ) 

#define ICleanControllerV6_IsCleanInProgress(This,pIsInProgress)	\
    ( (This)->lpVtbl -> IsCleanInProgress(This,pIsInProgress) ) 

#define ICleanControllerV6_GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath)	\
    ( (This)->lpVtbl -> GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath) ) 

#define ICleanControllerV6_StopCurrentClean(This)	\
    ( (This)->lpVtbl -> StopCurrentClean(This) ) 

#define ICleanControllerV6_GetQuarantineItems(This,ppQuarantineItemsIds)	\
    ( (This)->lpVtbl -> GetQuarantineItems(This,ppQuarantineItemsIds) ) 

#define ICleanControllerV6_DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV6_RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV6_GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV6_GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV6_GetLastOverallCleanResult(This,pCleanState,pLastErrorCode)	\
    ( (This)->lpVtbl -> GetLastOverallCleanResult(This,pCleanState,pLastErrorCode) ) 

#define ICleanControllerV6_IsDORRequired(This,pIsDORRequired)	\
    ( (This)->lpVtbl -> IsDORRequired(This,pIsDORRequired) ) 

#define ICleanControllerV6_PrepareUpdate(This,timeoutMs)	\
    ( (This)->lpVtbl -> PrepareUpdate(This,timeoutMs) ) 

#define ICleanControllerV6_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ICleanControllerV6_IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource) ) 

#define ICleanControllerV6_IsStartupComplete(This,pIsStartupComplete)	\
    ( (This)->lpVtbl -> IsStartupComplete(This,pIsStartupComplete) ) 

#define ICleanControllerV6_GetNewLinker(This,ppLinker)	\
    ( (This)->lpVtbl -> GetNewLinker(This,ppLinker) ) 

#define ICleanControllerV6_GetHistoryEntries(This,ppEntries)	\
    ( (This)->lpVtbl -> GetHistoryEntries(This,ppEntries) ) 

#define ICleanControllerV6_GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents)	\
    ( (This)->lpVtbl -> GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents) ) 

#define ICleanControllerV6_DeleteHistoryLog(This,pFilePath)	\
    ( (This)->lpVtbl -> DeleteHistoryLog(This,pFilePath) ) 

#define ICleanControllerV6_IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource) ) 


#define ICleanControllerV6_IsFileWhiteListedExV2(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListedExV2(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource) ) 

#define ICleanControllerV6_RestoreQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful)	\
    ( (This)->lpVtbl -> RestoreQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful) ) 


#define ICleanControllerV6_GetWhiteListStatus(This,pInWhiteListData,ppOutWhiteListData)	\
    ( (This)->lpVtbl -> GetWhiteListStatus(This,pInWhiteListData,ppOutWhiteListData) ) 

#define ICleanControllerV6_DeleteQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful)	\
    ( (This)->lpVtbl -> DeleteQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful) ) 


#define ICleanControllerV6_IsDORCompleted(This,ppHistoryFilePath,ppHistoryLogID,pHistoryLogType,pHistoryTimestamp,pIsDORCompleted)	\
    ( (This)->lpVtbl -> IsDORCompleted(This,ppHistoryFilePath,ppHistoryLogID,pHistoryLogType,pHistoryTimestamp,pIsDORCompleted) ) 

#define ICleanControllerV6_SessionLogonNotification(This,sessionID)	\
    ( (This)->lpVtbl -> SessionLogonNotification(This,sessionID) ) 

#define ICleanControllerV6_ClearDORCompletedStatus(This)	\
    ( (This)->lpVtbl -> ClearDORCompletedStatus(This) ) 


#define ICleanControllerV6_StopV2(This,timeoutMs,stopType)	\
    ( (This)->lpVtbl -> StopV2(This,timeoutMs,stopType) ) 


#define ICleanControllerV6_StartV2(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pTelemetryController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV2(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pTelemetryController,pProductCode,pProductVersion,pProductBuild) ) 

#define ICleanControllerV6_RefreshQuarantineTelemetryData(This)	\
    ( (This)->lpVtbl -> RefreshQuarantineTelemetryData(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICleanControllerV6_INTERFACE_DEFINED__ */


#ifndef __ICleanControllerV7_INTERFACE_DEFINED__
#define __ICleanControllerV7_INTERFACE_DEFINED__

/* interface ICleanControllerV7 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ICleanControllerV7;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("81701AB9-0B9C-49FE-9C79-C3C4DCA91E7B")
    ICleanControllerV7 : public ICleanControllerV6
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CreateHistoryEnumerator( 
            /* [out] */ BSTR *pEnumeratorUUID,
            /* [out] */ unsigned long *pNumberOfFiles) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetHistoryEntry( 
            /* [in] */ BSTR enumeratorUUID,
            /* [in] */ unsigned long index,
            /* [out] */ _CCHistoryLogType *pLogType,
            /* [out] */ DATE *pTimeStamp,
            /* [out] */ BSTR *pFilePath,
            /* [out] */ BSTR *pLogID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DestroyHistoryEnumerator( 
            /* [in] */ BSTR enumeratorUUID) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICleanControllerV7Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICleanControllerV7 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICleanControllerV7 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICleanControllerV7 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICleanControllerV7 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICleanControllerV7 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICleanControllerV7 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICleanControllerV7 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ICleanControllerV7 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ICleanControllerV7 * This,
            /* [in] */ long timeoutMs);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_QuarantinePath )( 
            ICleanControllerV7 * This,
            /* [in] */ BSTR ppPath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_QuarantinePath )( 
            ICleanControllerV7 * This,
            /* [retval][out] */ BSTR *ppPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QueueClean )( 
            ICleanControllerV7 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ SAFEARRAY * pIgnoreTraceIDs,
            /* [in] */ VARIANT_BOOL autoRebootUponDOR);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsCleanInProgress )( 
            ICleanControllerV7 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsInProgress);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetCurrentCleanParameters )( 
            ICleanControllerV7 * This,
            /* [out] */ _ClientType *pClientType,
            /* [out] */ BSTR *ppClientID,
            /* [out] */ BSTR *ppDetectionResultsPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopCurrentClean )( 
            ICleanControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItems )( 
            ICleanControllerV7 * This,
            /* [retval][out] */ SAFEARRAY * *ppQuarantineItemsIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteQuarantineItems )( 
            ICleanControllerV7 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItems )( 
            ICleanControllerV7 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemData )( 
            ICleanControllerV7 * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ QuarantineData *pQuarantineData,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemDataValues )( 
            ICleanControllerV7 * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ BSTR *ppObjectPath,
            /* [out] */ _CCObjectType *pObjectType,
            /* [out] */ long *pThreatId,
            /* [out] */ BSTR *ppThreatName,
            /* [out] */ BSTR *ppCleanTime,
            /* [out] */ _QuarantineResult *pQuarantineResult,
            /* [out] */ BSTR *ppParentID,
            /* [out] */ _CCLinkType *pRelationToParent,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLastOverallCleanResult )( 
            ICleanControllerV7 * This,
            /* [out] */ _CleanState *pCleanState,
            /* [out] */ long *pLastErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsDORRequired )( 
            ICleanControllerV7 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsDORRequired);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ICleanControllerV7 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ICleanControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListed )( 
            ICleanControllerV7 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsStartupComplete )( 
            ICleanControllerV7 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsStartupComplete);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNewLinker )( 
            ICleanControllerV7 * This,
            /* [retval][out] */ ILinker **ppLinker);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryEntries )( 
            ICleanControllerV7 * This,
            /* [retval][out] */ SAFEARRAY * *ppEntries);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryLogContents )( 
            ICleanControllerV7 * This,
            /* [in] */ BSTR pFilePath,
            /* [in] */ long schemaVersion,
            /* [retval][out] */ BSTR *ppContents);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteHistoryLog )( 
            ICleanControllerV7 * This,
            /* [in] */ BSTR pFilePath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListedEx )( 
            ICleanControllerV7 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListedExV2 )( 
            ICleanControllerV7 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSourceV2 *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItemsAsync )( 
            ICleanControllerV7 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ VARIANT_BOOL *pSuccessful);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetWhiteListStatus )( 
            ICleanControllerV7 * This,
            /* [in] */ BSTR pInWhiteListData,
            /* [out] */ BSTR *ppOutWhiteListData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteQuarantineItemsAsync )( 
            ICleanControllerV7 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ VARIANT_BOOL *pSuccessful);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsDORCompleted )( 
            ICleanControllerV7 * This,
            /* [out] */ BSTR *ppHistoryFilePath,
            /* [out] */ BSTR *ppHistoryLogID,
            /* [out] */ _CCHistoryLogType *pHistoryLogType,
            /* [out] */ DATE *pHistoryTimestamp,
            /* [retval][out] */ VARIANT_BOOL *pIsDORCompleted);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SessionLogonNotification )( 
            ICleanControllerV7 * This,
            /* [in] */ unsigned long sessionID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearDORCompletedStatus )( 
            ICleanControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopV2 )( 
            ICleanControllerV7 * This,
            /* [in] */ long timeoutMs,
            /* [in] */ _CCStopType stopType);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            ICleanControllerV7 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RefreshQuarantineTelemetryData )( 
            ICleanControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CreateHistoryEnumerator )( 
            ICleanControllerV7 * This,
            /* [out] */ BSTR *pEnumeratorUUID,
            /* [out] */ unsigned long *pNumberOfFiles);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryEntry )( 
            ICleanControllerV7 * This,
            /* [in] */ BSTR enumeratorUUID,
            /* [in] */ unsigned long index,
            /* [out] */ _CCHistoryLogType *pLogType,
            /* [out] */ DATE *pTimeStamp,
            /* [out] */ BSTR *pFilePath,
            /* [out] */ BSTR *pLogID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DestroyHistoryEnumerator )( 
            ICleanControllerV7 * This,
            /* [in] */ BSTR enumeratorUUID);
        
        END_INTERFACE
    } ICleanControllerV7Vtbl;

    interface ICleanControllerV7
    {
        CONST_VTBL struct ICleanControllerV7Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICleanControllerV7_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICleanControllerV7_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICleanControllerV7_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICleanControllerV7_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICleanControllerV7_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICleanControllerV7_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICleanControllerV7_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICleanControllerV7_Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild) ) 

#define ICleanControllerV7_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define ICleanControllerV7_put_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> put_QuarantinePath(This,ppPath) ) 

#define ICleanControllerV7_get_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> get_QuarantinePath(This,ppPath) ) 

#define ICleanControllerV7_QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR)	\
    ( (This)->lpVtbl -> QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR) ) 

#define ICleanControllerV7_IsCleanInProgress(This,pIsInProgress)	\
    ( (This)->lpVtbl -> IsCleanInProgress(This,pIsInProgress) ) 

#define ICleanControllerV7_GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath)	\
    ( (This)->lpVtbl -> GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath) ) 

#define ICleanControllerV7_StopCurrentClean(This)	\
    ( (This)->lpVtbl -> StopCurrentClean(This) ) 

#define ICleanControllerV7_GetQuarantineItems(This,ppQuarantineItemsIds)	\
    ( (This)->lpVtbl -> GetQuarantineItems(This,ppQuarantineItemsIds) ) 

#define ICleanControllerV7_DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV7_RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV7_GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV7_GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV7_GetLastOverallCleanResult(This,pCleanState,pLastErrorCode)	\
    ( (This)->lpVtbl -> GetLastOverallCleanResult(This,pCleanState,pLastErrorCode) ) 

#define ICleanControllerV7_IsDORRequired(This,pIsDORRequired)	\
    ( (This)->lpVtbl -> IsDORRequired(This,pIsDORRequired) ) 

#define ICleanControllerV7_PrepareUpdate(This,timeoutMs)	\
    ( (This)->lpVtbl -> PrepareUpdate(This,timeoutMs) ) 

#define ICleanControllerV7_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ICleanControllerV7_IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource) ) 

#define ICleanControllerV7_IsStartupComplete(This,pIsStartupComplete)	\
    ( (This)->lpVtbl -> IsStartupComplete(This,pIsStartupComplete) ) 

#define ICleanControllerV7_GetNewLinker(This,ppLinker)	\
    ( (This)->lpVtbl -> GetNewLinker(This,ppLinker) ) 

#define ICleanControllerV7_GetHistoryEntries(This,ppEntries)	\
    ( (This)->lpVtbl -> GetHistoryEntries(This,ppEntries) ) 

#define ICleanControllerV7_GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents)	\
    ( (This)->lpVtbl -> GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents) ) 

#define ICleanControllerV7_DeleteHistoryLog(This,pFilePath)	\
    ( (This)->lpVtbl -> DeleteHistoryLog(This,pFilePath) ) 

#define ICleanControllerV7_IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource) ) 


#define ICleanControllerV7_IsFileWhiteListedExV2(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListedExV2(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource) ) 

#define ICleanControllerV7_RestoreQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful)	\
    ( (This)->lpVtbl -> RestoreQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful) ) 


#define ICleanControllerV7_GetWhiteListStatus(This,pInWhiteListData,ppOutWhiteListData)	\
    ( (This)->lpVtbl -> GetWhiteListStatus(This,pInWhiteListData,ppOutWhiteListData) ) 

#define ICleanControllerV7_DeleteQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful)	\
    ( (This)->lpVtbl -> DeleteQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful) ) 


#define ICleanControllerV7_IsDORCompleted(This,ppHistoryFilePath,ppHistoryLogID,pHistoryLogType,pHistoryTimestamp,pIsDORCompleted)	\
    ( (This)->lpVtbl -> IsDORCompleted(This,ppHistoryFilePath,ppHistoryLogID,pHistoryLogType,pHistoryTimestamp,pIsDORCompleted) ) 

#define ICleanControllerV7_SessionLogonNotification(This,sessionID)	\
    ( (This)->lpVtbl -> SessionLogonNotification(This,sessionID) ) 

#define ICleanControllerV7_ClearDORCompletedStatus(This)	\
    ( (This)->lpVtbl -> ClearDORCompletedStatus(This) ) 


#define ICleanControllerV7_StopV2(This,timeoutMs,stopType)	\
    ( (This)->lpVtbl -> StopV2(This,timeoutMs,stopType) ) 


#define ICleanControllerV7_StartV2(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pTelemetryController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV2(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pTelemetryController,pProductCode,pProductVersion,pProductBuild) ) 

#define ICleanControllerV7_RefreshQuarantineTelemetryData(This)	\
    ( (This)->lpVtbl -> RefreshQuarantineTelemetryData(This) ) 


#define ICleanControllerV7_CreateHistoryEnumerator(This,pEnumeratorUUID,pNumberOfFiles)	\
    ( (This)->lpVtbl -> CreateHistoryEnumerator(This,pEnumeratorUUID,pNumberOfFiles) ) 

#define ICleanControllerV7_GetHistoryEntry(This,enumeratorUUID,index,pLogType,pTimeStamp,pFilePath,pLogID)	\
    ( (This)->lpVtbl -> GetHistoryEntry(This,enumeratorUUID,index,pLogType,pTimeStamp,pFilePath,pLogID) ) 

#define ICleanControllerV7_DestroyHistoryEnumerator(This,enumeratorUUID)	\
    ( (This)->lpVtbl -> DestroyHistoryEnumerator(This,enumeratorUUID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICleanControllerV7_INTERFACE_DEFINED__ */


#ifndef __ICleanControllerV8_INTERFACE_DEFINED__
#define __ICleanControllerV8_INTERFACE_DEFINED__

/* interface ICleanControllerV8 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ICleanControllerV8;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6C1047E9-9ADC-4F8A-8594-036375F53103")
    ICleanControllerV8 : public ICleanControllerV7
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_QuarantinePruningAge( 
            /* [in] */ unsigned short pNumDays) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_QuarantinePruningAge( 
            /* [retval][out] */ unsigned short *pNumDays) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PruneQuarantine( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICleanControllerV8Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICleanControllerV8 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICleanControllerV8 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICleanControllerV8 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICleanControllerV8 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICleanControllerV8 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICleanControllerV8 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICleanControllerV8 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ICleanControllerV8 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ICleanControllerV8 * This,
            /* [in] */ long timeoutMs);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_QuarantinePath )( 
            ICleanControllerV8 * This,
            /* [in] */ BSTR ppPath);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_QuarantinePath )( 
            ICleanControllerV8 * This,
            /* [retval][out] */ BSTR *ppPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QueueClean )( 
            ICleanControllerV8 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ SAFEARRAY * pIgnoreTraceIDs,
            /* [in] */ VARIANT_BOOL autoRebootUponDOR);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsCleanInProgress )( 
            ICleanControllerV8 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsInProgress);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetCurrentCleanParameters )( 
            ICleanControllerV8 * This,
            /* [out] */ _ClientType *pClientType,
            /* [out] */ BSTR *ppClientID,
            /* [out] */ BSTR *ppDetectionResultsPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopCurrentClean )( 
            ICleanControllerV8 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItems )( 
            ICleanControllerV8 * This,
            /* [retval][out] */ SAFEARRAY * *ppQuarantineItemsIds);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteQuarantineItems )( 
            ICleanControllerV8 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItems )( 
            ICleanControllerV8 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemData )( 
            ICleanControllerV8 * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ QuarantineData *pQuarantineData,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetQuarantineItemDataValues )( 
            ICleanControllerV8 * This,
            /* [in] */ BSTR pQuarantineItemId,
            /* [out] */ BSTR *ppObjectPath,
            /* [out] */ _CCObjectType *pObjectType,
            /* [out] */ long *pThreatId,
            /* [out] */ BSTR *ppThreatName,
            /* [out] */ BSTR *ppCleanTime,
            /* [out] */ _QuarantineResult *pQuarantineResult,
            /* [out] */ BSTR *ppParentID,
            /* [out] */ _CCLinkType *pRelationToParent,
            /* [out] */ _CCErrorCode *pCCErrorCode,
            /* [out] */ long *pWinErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLastOverallCleanResult )( 
            ICleanControllerV8 * This,
            /* [out] */ _CleanState *pCleanState,
            /* [out] */ long *pLastErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsDORRequired )( 
            ICleanControllerV8 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsDORRequired);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ICleanControllerV8 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ICleanControllerV8 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListed )( 
            ICleanControllerV8 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsStartupComplete )( 
            ICleanControllerV8 * This,
            /* [retval][out] */ VARIANT_BOOL *pIsStartupComplete);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNewLinker )( 
            ICleanControllerV8 * This,
            /* [retval][out] */ ILinker **ppLinker);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryEntries )( 
            ICleanControllerV8 * This,
            /* [retval][out] */ SAFEARRAY * *ppEntries);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryLogContents )( 
            ICleanControllerV8 * This,
            /* [in] */ BSTR pFilePath,
            /* [in] */ long schemaVersion,
            /* [retval][out] */ BSTR *ppContents);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteHistoryLog )( 
            ICleanControllerV8 * This,
            /* [in] */ BSTR pFilePath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListedEx )( 
            ICleanControllerV8 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSource *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsFileWhiteListedExV2 )( 
            ICleanControllerV8 * This,
            /* [in] */ _CCDetectionSourceType controllerType,
            /* [in] */ BSTR pControllerVersion,
            /* [in] */ long ruleID,
            /* [in] */ BSTR pFilePath,
            /* [in] */ BSTR pMd5Hash,
            /* [in] */ BSTR pSha1Hash,
            /* [in] */ BSTR pSha256Hash,
            /* [in] */ VARIANT_BOOL isRootkit,
            /* [retval][out] */ _CCWhiteListSourceV2 *pWhiteListSource);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItemsAsync )( 
            ICleanControllerV8 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ VARIANT_BOOL *pSuccessful);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetWhiteListStatus )( 
            ICleanControllerV8 * This,
            /* [in] */ BSTR pInWhiteListData,
            /* [out] */ BSTR *ppOutWhiteListData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteQuarantineItemsAsync )( 
            ICleanControllerV8 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ SAFEARRAY * pQuarantineItemsIds,
            /* [out] */ VARIANT_BOOL *pSuccessful);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsDORCompleted )( 
            ICleanControllerV8 * This,
            /* [out] */ BSTR *ppHistoryFilePath,
            /* [out] */ BSTR *ppHistoryLogID,
            /* [out] */ _CCHistoryLogType *pHistoryLogType,
            /* [out] */ DATE *pHistoryTimestamp,
            /* [retval][out] */ VARIANT_BOOL *pIsDORCompleted);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SessionLogonNotification )( 
            ICleanControllerV8 * This,
            /* [in] */ unsigned long sessionID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearDORCompletedStatus )( 
            ICleanControllerV8 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopV2 )( 
            ICleanControllerV8 * This,
            /* [in] */ long timeoutMs,
            /* [in] */ _CCStopType stopType);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            ICleanControllerV8 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RefreshQuarantineTelemetryData )( 
            ICleanControllerV8 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CreateHistoryEnumerator )( 
            ICleanControllerV8 * This,
            /* [out] */ BSTR *pEnumeratorUUID,
            /* [out] */ unsigned long *pNumberOfFiles);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHistoryEntry )( 
            ICleanControllerV8 * This,
            /* [in] */ BSTR enumeratorUUID,
            /* [in] */ unsigned long index,
            /* [out] */ _CCHistoryLogType *pLogType,
            /* [out] */ DATE *pTimeStamp,
            /* [out] */ BSTR *pFilePath,
            /* [out] */ BSTR *pLogID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DestroyHistoryEnumerator )( 
            ICleanControllerV8 * This,
            /* [in] */ BSTR enumeratorUUID);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_QuarantinePruningAge )( 
            ICleanControllerV8 * This,
            /* [in] */ unsigned short pNumDays);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_QuarantinePruningAge )( 
            ICleanControllerV8 * This,
            /* [retval][out] */ unsigned short *pNumDays);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PruneQuarantine )( 
            ICleanControllerV8 * This);
        
        END_INTERFACE
    } ICleanControllerV8Vtbl;

    interface ICleanControllerV8
    {
        CONST_VTBL struct ICleanControllerV8Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICleanControllerV8_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICleanControllerV8_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICleanControllerV8_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICleanControllerV8_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICleanControllerV8_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICleanControllerV8_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICleanControllerV8_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICleanControllerV8_Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pProductCode,pProductVersion,pProductBuild) ) 

#define ICleanControllerV8_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define ICleanControllerV8_put_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> put_QuarantinePath(This,ppPath) ) 

#define ICleanControllerV8_get_QuarantinePath(This,ppPath)	\
    ( (This)->lpVtbl -> get_QuarantinePath(This,ppPath) ) 

#define ICleanControllerV8_QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR)	\
    ( (This)->lpVtbl -> QueueClean(This,clientType,pClientID,pDetectionResultsPath,pIgnoreTraceIDs,autoRebootUponDOR) ) 

#define ICleanControllerV8_IsCleanInProgress(This,pIsInProgress)	\
    ( (This)->lpVtbl -> IsCleanInProgress(This,pIsInProgress) ) 

#define ICleanControllerV8_GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath)	\
    ( (This)->lpVtbl -> GetCurrentCleanParameters(This,pClientType,ppClientID,ppDetectionResultsPath) ) 

#define ICleanControllerV8_StopCurrentClean(This)	\
    ( (This)->lpVtbl -> StopCurrentClean(This) ) 

#define ICleanControllerV8_GetQuarantineItems(This,ppQuarantineItemsIds)	\
    ( (This)->lpVtbl -> GetQuarantineItems(This,ppQuarantineItemsIds) ) 

#define ICleanControllerV8_DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> DeleteQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV8_RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> RestoreQuarantineItems(This,clientType,pClientID,pQuarantineItemsIds,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV8_GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemData(This,pQuarantineItemId,pQuarantineData,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV8_GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode)	\
    ( (This)->lpVtbl -> GetQuarantineItemDataValues(This,pQuarantineItemId,ppObjectPath,pObjectType,pThreatId,ppThreatName,ppCleanTime,pQuarantineResult,ppParentID,pRelationToParent,pCCErrorCode,pWinErrorCode) ) 

#define ICleanControllerV8_GetLastOverallCleanResult(This,pCleanState,pLastErrorCode)	\
    ( (This)->lpVtbl -> GetLastOverallCleanResult(This,pCleanState,pLastErrorCode) ) 

#define ICleanControllerV8_IsDORRequired(This,pIsDORRequired)	\
    ( (This)->lpVtbl -> IsDORRequired(This,pIsDORRequired) ) 

#define ICleanControllerV8_PrepareUpdate(This,timeoutMs)	\
    ( (This)->lpVtbl -> PrepareUpdate(This,timeoutMs) ) 

#define ICleanControllerV8_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ICleanControllerV8_IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListed(This,controllerType,pControllerVersion,ruleID,pFilePath,isRootkit,pWhiteListSource) ) 

#define ICleanControllerV8_IsStartupComplete(This,pIsStartupComplete)	\
    ( (This)->lpVtbl -> IsStartupComplete(This,pIsStartupComplete) ) 

#define ICleanControllerV8_GetNewLinker(This,ppLinker)	\
    ( (This)->lpVtbl -> GetNewLinker(This,ppLinker) ) 

#define ICleanControllerV8_GetHistoryEntries(This,ppEntries)	\
    ( (This)->lpVtbl -> GetHistoryEntries(This,ppEntries) ) 

#define ICleanControllerV8_GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents)	\
    ( (This)->lpVtbl -> GetHistoryLogContents(This,pFilePath,schemaVersion,ppContents) ) 

#define ICleanControllerV8_DeleteHistoryLog(This,pFilePath)	\
    ( (This)->lpVtbl -> DeleteHistoryLog(This,pFilePath) ) 

#define ICleanControllerV8_IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListedEx(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource) ) 


#define ICleanControllerV8_IsFileWhiteListedExV2(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource)	\
    ( (This)->lpVtbl -> IsFileWhiteListedExV2(This,controllerType,pControllerVersion,ruleID,pFilePath,pMd5Hash,pSha1Hash,pSha256Hash,isRootkit,pWhiteListSource) ) 

#define ICleanControllerV8_RestoreQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful)	\
    ( (This)->lpVtbl -> RestoreQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful) ) 


#define ICleanControllerV8_GetWhiteListStatus(This,pInWhiteListData,ppOutWhiteListData)	\
    ( (This)->lpVtbl -> GetWhiteListStatus(This,pInWhiteListData,ppOutWhiteListData) ) 

#define ICleanControllerV8_DeleteQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful)	\
    ( (This)->lpVtbl -> DeleteQuarantineItemsAsync(This,clientType,pClientID,pQuarantineItemsIds,pSuccessful) ) 


#define ICleanControllerV8_IsDORCompleted(This,ppHistoryFilePath,ppHistoryLogID,pHistoryLogType,pHistoryTimestamp,pIsDORCompleted)	\
    ( (This)->lpVtbl -> IsDORCompleted(This,ppHistoryFilePath,ppHistoryLogID,pHistoryLogType,pHistoryTimestamp,pIsDORCompleted) ) 

#define ICleanControllerV8_SessionLogonNotification(This,sessionID)	\
    ( (This)->lpVtbl -> SessionLogonNotification(This,sessionID) ) 

#define ICleanControllerV8_ClearDORCompletedStatus(This)	\
    ( (This)->lpVtbl -> ClearDORCompletedStatus(This) ) 


#define ICleanControllerV8_StopV2(This,timeoutMs,stopType)	\
    ( (This)->lpVtbl -> StopV2(This,timeoutMs,stopType) ) 


#define ICleanControllerV8_StartV2(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pTelemetryController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV2(This,pImplDLLPath,pDataPath,pLogController,pLicenseController,pPoliciesController,pUpdateController,pCloudController,pTelemetryController,pProductCode,pProductVersion,pProductBuild) ) 

#define ICleanControllerV8_RefreshQuarantineTelemetryData(This)	\
    ( (This)->lpVtbl -> RefreshQuarantineTelemetryData(This) ) 


#define ICleanControllerV8_CreateHistoryEnumerator(This,pEnumeratorUUID,pNumberOfFiles)	\
    ( (This)->lpVtbl -> CreateHistoryEnumerator(This,pEnumeratorUUID,pNumberOfFiles) ) 

#define ICleanControllerV8_GetHistoryEntry(This,enumeratorUUID,index,pLogType,pTimeStamp,pFilePath,pLogID)	\
    ( (This)->lpVtbl -> GetHistoryEntry(This,enumeratorUUID,index,pLogType,pTimeStamp,pFilePath,pLogID) ) 

#define ICleanControllerV8_DestroyHistoryEnumerator(This,enumeratorUUID)	\
    ( (This)->lpVtbl -> DestroyHistoryEnumerator(This,enumeratorUUID) ) 


#define ICleanControllerV8_put_QuarantinePruningAge(This,pNumDays)	\
    ( (This)->lpVtbl -> put_QuarantinePruningAge(This,pNumDays) ) 

#define ICleanControllerV8_get_QuarantinePruningAge(This,pNumDays)	\
    ( (This)->lpVtbl -> get_QuarantinePruningAge(This,pNumDays) ) 

#define ICleanControllerV8_PruneQuarantine(This)	\
    ( (This)->lpVtbl -> PruneQuarantine(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICleanControllerV8_INTERFACE_DEFINED__ */


#ifndef __ICleanControllerEvents_INTERFACE_DEFINED__
#define __ICleanControllerEvents_INTERFACE_DEFINED__

/* interface ICleanControllerEvents */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ICleanControllerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3A82D6A8-59F8-4B47-BBD0-8F5E5DBB3C7D")
    ICleanControllerEvents : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CleanStateChanged( 
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ BSTR pDetectionResultsID,
            /* [in] */ _CleanState cleanState,
            /* [in] */ long lastErrorCode,
            /* [in] */ long numQuarantinedItems,
            /* [in] */ long numRemediatedItems) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE QuarantineItemAdded( 
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ BSTR pDetectionResultsID,
            /* [in] */ BSTR pQuarantineItemId,
            /* [in] */ BSTR pObjectPath,
            /* [in] */ _CCObjectType ObjectType,
            /* [in] */ long ThreatId,
            /* [in] */ BSTR pThreatName,
            /* [in] */ BSTR pCleanTime,
            /* [in] */ _QuarantineResult QuarantineResult,
            /* [in] */ BSTR pParentID,
            /* [in] */ _CCLinkType RelationToParent) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE QuarantineItemRemoved( 
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ BSTR pDetectionResultsID,
            /* [in] */ BSTR pQuarantineItemId) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StartupComplete( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE HistoryLogAdded( 
            /* [in] */ _CCHistoryLogType LogType,
            /* [in] */ DATE TimeStamp,
            /* [in] */ BSTR FilePath,
            /* [in] */ BSTR LogID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE HistoryLogRemoved( 
            /* [in] */ BSTR FilePath,
            /* [in] */ BSTR LogID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ItemRemediated( 
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ BSTR pDetectionResultsID,
            /* [in] */ BSTR pTraceID) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICleanControllerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICleanControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICleanControllerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICleanControllerEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICleanControllerEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICleanControllerEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICleanControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICleanControllerEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CleanStateChanged )( 
            ICleanControllerEvents * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ BSTR pDetectionResultsID,
            /* [in] */ _CleanState cleanState,
            /* [in] */ long lastErrorCode,
            /* [in] */ long numQuarantinedItems,
            /* [in] */ long numRemediatedItems);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QuarantineItemAdded )( 
            ICleanControllerEvents * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ BSTR pDetectionResultsID,
            /* [in] */ BSTR pQuarantineItemId,
            /* [in] */ BSTR pObjectPath,
            /* [in] */ _CCObjectType ObjectType,
            /* [in] */ long ThreatId,
            /* [in] */ BSTR pThreatName,
            /* [in] */ BSTR pCleanTime,
            /* [in] */ _QuarantineResult QuarantineResult,
            /* [in] */ BSTR pParentID,
            /* [in] */ _CCLinkType RelationToParent);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QuarantineItemRemoved )( 
            ICleanControllerEvents * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ BSTR pDetectionResultsID,
            /* [in] */ BSTR pQuarantineItemId);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartupComplete )( 
            ICleanControllerEvents * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *HistoryLogAdded )( 
            ICleanControllerEvents * This,
            /* [in] */ _CCHistoryLogType LogType,
            /* [in] */ DATE TimeStamp,
            /* [in] */ BSTR FilePath,
            /* [in] */ BSTR LogID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *HistoryLogRemoved )( 
            ICleanControllerEvents * This,
            /* [in] */ BSTR FilePath,
            /* [in] */ BSTR LogID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ItemRemediated )( 
            ICleanControllerEvents * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ BSTR pDetectionResultsID,
            /* [in] */ BSTR pTraceID);
        
        END_INTERFACE
    } ICleanControllerEventsVtbl;

    interface ICleanControllerEvents
    {
        CONST_VTBL struct ICleanControllerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICleanControllerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICleanControllerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICleanControllerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICleanControllerEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICleanControllerEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICleanControllerEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICleanControllerEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICleanControllerEvents_CleanStateChanged(This,clientType,pClientID,pDetectionResultsPath,pDetectionResultsID,cleanState,lastErrorCode,numQuarantinedItems,numRemediatedItems)	\
    ( (This)->lpVtbl -> CleanStateChanged(This,clientType,pClientID,pDetectionResultsPath,pDetectionResultsID,cleanState,lastErrorCode,numQuarantinedItems,numRemediatedItems) ) 

#define ICleanControllerEvents_QuarantineItemAdded(This,clientType,pClientID,pDetectionResultsPath,pDetectionResultsID,pQuarantineItemId,pObjectPath,ObjectType,ThreatId,pThreatName,pCleanTime,QuarantineResult,pParentID,RelationToParent)	\
    ( (This)->lpVtbl -> QuarantineItemAdded(This,clientType,pClientID,pDetectionResultsPath,pDetectionResultsID,pQuarantineItemId,pObjectPath,ObjectType,ThreatId,pThreatName,pCleanTime,QuarantineResult,pParentID,RelationToParent) ) 

#define ICleanControllerEvents_QuarantineItemRemoved(This,clientType,pClientID,pDetectionResultsPath,pDetectionResultsID,pQuarantineItemId)	\
    ( (This)->lpVtbl -> QuarantineItemRemoved(This,clientType,pClientID,pDetectionResultsPath,pDetectionResultsID,pQuarantineItemId) ) 

#define ICleanControllerEvents_StartupComplete(This)	\
    ( (This)->lpVtbl -> StartupComplete(This) ) 

#define ICleanControllerEvents_HistoryLogAdded(This,LogType,TimeStamp,FilePath,LogID)	\
    ( (This)->lpVtbl -> HistoryLogAdded(This,LogType,TimeStamp,FilePath,LogID) ) 

#define ICleanControllerEvents_HistoryLogRemoved(This,FilePath,LogID)	\
    ( (This)->lpVtbl -> HistoryLogRemoved(This,FilePath,LogID) ) 

#define ICleanControllerEvents_ItemRemediated(This,clientType,pClientID,pDetectionResultsPath,pDetectionResultsID,pTraceID)	\
    ( (This)->lpVtbl -> ItemRemediated(This,clientType,pClientID,pDetectionResultsPath,pDetectionResultsID,pTraceID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICleanControllerEvents_INTERFACE_DEFINED__ */


#ifndef ___ICleanControllerEvents_DISPINTERFACE_DEFINED__
#define ___ICleanControllerEvents_DISPINTERFACE_DEFINED__

/* dispinterface _ICleanControllerEvents */
/* [uuid] */ 


EXTERN_C const IID DIID__ICleanControllerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("F12E228B-821D-4093-B2E0-7F3E169A925A")
    _ICleanControllerEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _ICleanControllerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ICleanControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ICleanControllerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ICleanControllerEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ICleanControllerEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ICleanControllerEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ICleanControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ICleanControllerEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ICleanControllerEventsVtbl;

    interface _ICleanControllerEvents
    {
        CONST_VTBL struct _ICleanControllerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ICleanControllerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ICleanControllerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ICleanControllerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ICleanControllerEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ICleanControllerEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ICleanControllerEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ICleanControllerEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___ICleanControllerEvents_DISPINTERFACE_DEFINED__ */


#ifndef __ICleanControllerEventsV2_INTERFACE_DEFINED__
#define __ICleanControllerEventsV2_INTERFACE_DEFINED__

/* interface ICleanControllerEventsV2 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ICleanControllerEventsV2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CFFF19F6-ECFE-446D-ACAD-8DC525DA2563")
    ICleanControllerEventsV2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RestoreQuarantineItemsComplete( 
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ _CCErrorCode ccErrorCode,
            /* [in] */ long winErrorCode) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICleanControllerEventsV2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICleanControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICleanControllerEventsV2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICleanControllerEventsV2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICleanControllerEventsV2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICleanControllerEventsV2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICleanControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICleanControllerEventsV2 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestoreQuarantineItemsComplete )( 
            ICleanControllerEventsV2 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ _CCErrorCode ccErrorCode,
            /* [in] */ long winErrorCode);
        
        END_INTERFACE
    } ICleanControllerEventsV2Vtbl;

    interface ICleanControllerEventsV2
    {
        CONST_VTBL struct ICleanControllerEventsV2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICleanControllerEventsV2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICleanControllerEventsV2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICleanControllerEventsV2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICleanControllerEventsV2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICleanControllerEventsV2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICleanControllerEventsV2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICleanControllerEventsV2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICleanControllerEventsV2_RestoreQuarantineItemsComplete(This,clientType,pClientID,ccErrorCode,winErrorCode)	\
    ( (This)->lpVtbl -> RestoreQuarantineItemsComplete(This,clientType,pClientID,ccErrorCode,winErrorCode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICleanControllerEventsV2_INTERFACE_DEFINED__ */


#ifndef ___ICleanControllerEventsV2_DISPINTERFACE_DEFINED__
#define ___ICleanControllerEventsV2_DISPINTERFACE_DEFINED__

/* dispinterface _ICleanControllerEventsV2 */
/* [uuid] */ 


EXTERN_C const IID DIID__ICleanControllerEventsV2;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("63A6AB57-4679-4529-B78D-143547B22799")
    _ICleanControllerEventsV2 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _ICleanControllerEventsV2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ICleanControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ICleanControllerEventsV2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ICleanControllerEventsV2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ICleanControllerEventsV2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ICleanControllerEventsV2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ICleanControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ICleanControllerEventsV2 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ICleanControllerEventsV2Vtbl;

    interface _ICleanControllerEventsV2
    {
        CONST_VTBL struct _ICleanControllerEventsV2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ICleanControllerEventsV2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ICleanControllerEventsV2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ICleanControllerEventsV2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ICleanControllerEventsV2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ICleanControllerEventsV2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ICleanControllerEventsV2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ICleanControllerEventsV2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___ICleanControllerEventsV2_DISPINTERFACE_DEFINED__ */


#ifndef __ICleanControllerEventsV3_INTERFACE_DEFINED__
#define __ICleanControllerEventsV3_INTERFACE_DEFINED__

/* interface ICleanControllerEventsV3 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ICleanControllerEventsV3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("55D0C28B-2BF3-4230-B48D-DB2C2D7BF6F8")
    ICleanControllerEventsV3 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DeleteQuarantineItemsComplete( 
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ _CCErrorCode ccErrorCode,
            /* [in] */ long winErrorCode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE QuarantineItemDeletedStatus( 
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ BSTR pDetectionResultsID,
            /* [in] */ BSTR pQuarantineItemId,
            /* [in] */ _CCErrorCode ccErrorCode,
            /* [in] */ long winErrorCode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE QuarantineItemRestoredStatus( 
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ BSTR pDetectionResultsID,
            /* [in] */ BSTR pQuarantineItemId,
            /* [in] */ _CCErrorCode ccErrorCode,
            /* [in] */ long winErrorCode) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICleanControllerEventsV3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICleanControllerEventsV3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICleanControllerEventsV3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICleanControllerEventsV3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICleanControllerEventsV3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICleanControllerEventsV3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICleanControllerEventsV3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICleanControllerEventsV3 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeleteQuarantineItemsComplete )( 
            ICleanControllerEventsV3 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ _CCErrorCode ccErrorCode,
            /* [in] */ long winErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QuarantineItemDeletedStatus )( 
            ICleanControllerEventsV3 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ BSTR pDetectionResultsID,
            /* [in] */ BSTR pQuarantineItemId,
            /* [in] */ _CCErrorCode ccErrorCode,
            /* [in] */ long winErrorCode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QuarantineItemRestoredStatus )( 
            ICleanControllerEventsV3 * This,
            /* [in] */ _ClientType clientType,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pDetectionResultsPath,
            /* [in] */ BSTR pDetectionResultsID,
            /* [in] */ BSTR pQuarantineItemId,
            /* [in] */ _CCErrorCode ccErrorCode,
            /* [in] */ long winErrorCode);
        
        END_INTERFACE
    } ICleanControllerEventsV3Vtbl;

    interface ICleanControllerEventsV3
    {
        CONST_VTBL struct ICleanControllerEventsV3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICleanControllerEventsV3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICleanControllerEventsV3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICleanControllerEventsV3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICleanControllerEventsV3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICleanControllerEventsV3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICleanControllerEventsV3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICleanControllerEventsV3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICleanControllerEventsV3_DeleteQuarantineItemsComplete(This,clientType,pClientID,ccErrorCode,winErrorCode)	\
    ( (This)->lpVtbl -> DeleteQuarantineItemsComplete(This,clientType,pClientID,ccErrorCode,winErrorCode) ) 

#define ICleanControllerEventsV3_QuarantineItemDeletedStatus(This,clientType,pClientID,pDetectionResultsPath,pDetectionResultsID,pQuarantineItemId,ccErrorCode,winErrorCode)	\
    ( (This)->lpVtbl -> QuarantineItemDeletedStatus(This,clientType,pClientID,pDetectionResultsPath,pDetectionResultsID,pQuarantineItemId,ccErrorCode,winErrorCode) ) 

#define ICleanControllerEventsV3_QuarantineItemRestoredStatus(This,clientType,pClientID,pDetectionResultsPath,pDetectionResultsID,pQuarantineItemId,ccErrorCode,winErrorCode)	\
    ( (This)->lpVtbl -> QuarantineItemRestoredStatus(This,clientType,pClientID,pDetectionResultsPath,pDetectionResultsID,pQuarantineItemId,ccErrorCode,winErrorCode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICleanControllerEventsV3_INTERFACE_DEFINED__ */


#ifndef ___ICleanControllerEventsV3_DISPINTERFACE_DEFINED__
#define ___ICleanControllerEventsV3_DISPINTERFACE_DEFINED__

/* dispinterface _ICleanControllerEventsV3 */
/* [uuid] */ 


EXTERN_C const IID DIID__ICleanControllerEventsV3;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("D81C2A20-D03D-40D4-A371-A499633A2AD3")
    _ICleanControllerEventsV3 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _ICleanControllerEventsV3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ICleanControllerEventsV3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ICleanControllerEventsV3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ICleanControllerEventsV3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ICleanControllerEventsV3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ICleanControllerEventsV3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ICleanControllerEventsV3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ICleanControllerEventsV3 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ICleanControllerEventsV3Vtbl;

    interface _ICleanControllerEventsV3
    {
        CONST_VTBL struct _ICleanControllerEventsV3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ICleanControllerEventsV3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ICleanControllerEventsV3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ICleanControllerEventsV3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ICleanControllerEventsV3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ICleanControllerEventsV3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ICleanControllerEventsV3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ICleanControllerEventsV3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___ICleanControllerEventsV3_DISPINTERFACE_DEFINED__ */


#ifndef __ICleanControllerEventsV4_INTERFACE_DEFINED__
#define __ICleanControllerEventsV4_INTERFACE_DEFINED__

/* interface ICleanControllerEventsV4 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ICleanControllerEventsV4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0B14402F-4F35-443E-A34E-0F511098C644")
    ICleanControllerEventsV4 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ShutdownService( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StartMainUI( 
            /* [in] */ unsigned long sessionID) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICleanControllerEventsV4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICleanControllerEventsV4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICleanControllerEventsV4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICleanControllerEventsV4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICleanControllerEventsV4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICleanControllerEventsV4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICleanControllerEventsV4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICleanControllerEventsV4 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ShutdownService )( 
            ICleanControllerEventsV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartMainUI )( 
            ICleanControllerEventsV4 * This,
            /* [in] */ unsigned long sessionID);
        
        END_INTERFACE
    } ICleanControllerEventsV4Vtbl;

    interface ICleanControllerEventsV4
    {
        CONST_VTBL struct ICleanControllerEventsV4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICleanControllerEventsV4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICleanControllerEventsV4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICleanControllerEventsV4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICleanControllerEventsV4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICleanControllerEventsV4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICleanControllerEventsV4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICleanControllerEventsV4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICleanControllerEventsV4_ShutdownService(This)	\
    ( (This)->lpVtbl -> ShutdownService(This) ) 

#define ICleanControllerEventsV4_StartMainUI(This,sessionID)	\
    ( (This)->lpVtbl -> StartMainUI(This,sessionID) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICleanControllerEventsV4_INTERFACE_DEFINED__ */


#ifndef ___ICleanControllerEventsV4_DISPINTERFACE_DEFINED__
#define ___ICleanControllerEventsV4_DISPINTERFACE_DEFINED__

/* dispinterface _ICleanControllerEventsV4 */
/* [uuid] */ 


EXTERN_C const IID DIID__ICleanControllerEventsV4;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("983849D5-BFE9-43E9-A9A0-CBAFBC917F39")
    _ICleanControllerEventsV4 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _ICleanControllerEventsV4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ICleanControllerEventsV4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ICleanControllerEventsV4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ICleanControllerEventsV4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ICleanControllerEventsV4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ICleanControllerEventsV4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ICleanControllerEventsV4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ICleanControllerEventsV4 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ICleanControllerEventsV4Vtbl;

    interface _ICleanControllerEventsV4
    {
        CONST_VTBL struct _ICleanControllerEventsV4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ICleanControllerEventsV4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ICleanControllerEventsV4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ICleanControllerEventsV4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ICleanControllerEventsV4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ICleanControllerEventsV4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ICleanControllerEventsV4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ICleanControllerEventsV4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___ICleanControllerEventsV4_DISPINTERFACE_DEFINED__ */


#ifndef __ICleanControllerEventsV5_INTERFACE_DEFINED__
#define __ICleanControllerEventsV5_INTERFACE_DEFINED__

/* interface ICleanControllerEventsV5 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ICleanControllerEventsV5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("562B1FA7-13DE-40A1-8839-AB2C5FA3129C")
    ICleanControllerEventsV5 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE QuarantinePruningAgeChanged( 
            /* [in] */ unsigned short newPruningAgeDays) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICleanControllerEventsV5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICleanControllerEventsV5 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICleanControllerEventsV5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICleanControllerEventsV5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICleanControllerEventsV5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICleanControllerEventsV5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICleanControllerEventsV5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICleanControllerEventsV5 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QuarantinePruningAgeChanged )( 
            ICleanControllerEventsV5 * This,
            /* [in] */ unsigned short newPruningAgeDays);
        
        END_INTERFACE
    } ICleanControllerEventsV5Vtbl;

    interface ICleanControllerEventsV5
    {
        CONST_VTBL struct ICleanControllerEventsV5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICleanControllerEventsV5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICleanControllerEventsV5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICleanControllerEventsV5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICleanControllerEventsV5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICleanControllerEventsV5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICleanControllerEventsV5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICleanControllerEventsV5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICleanControllerEventsV5_QuarantinePruningAgeChanged(This,newPruningAgeDays)	\
    ( (This)->lpVtbl -> QuarantinePruningAgeChanged(This,newPruningAgeDays) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICleanControllerEventsV5_INTERFACE_DEFINED__ */


#ifndef ___ICleanControllerEventsV5_DISPINTERFACE_DEFINED__
#define ___ICleanControllerEventsV5_DISPINTERFACE_DEFINED__

/* dispinterface _ICleanControllerEventsV5 */
/* [uuid] */ 


EXTERN_C const IID DIID__ICleanControllerEventsV5;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("503084FD-0743-46C7-833F-D0057E8AC505")
    _ICleanControllerEventsV5 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _ICleanControllerEventsV5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ICleanControllerEventsV5 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ICleanControllerEventsV5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ICleanControllerEventsV5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ICleanControllerEventsV5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ICleanControllerEventsV5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ICleanControllerEventsV5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ICleanControllerEventsV5 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ICleanControllerEventsV5Vtbl;

    interface _ICleanControllerEventsV5
    {
        CONST_VTBL struct _ICleanControllerEventsV5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ICleanControllerEventsV5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ICleanControllerEventsV5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ICleanControllerEventsV5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ICleanControllerEventsV5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ICleanControllerEventsV5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ICleanControllerEventsV5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ICleanControllerEventsV5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___ICleanControllerEventsV5_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_CleanController;

#ifdef __cplusplus

class DECLSPEC_UUID("11D1E5E8-14E1-4B5B-AE1A-2678CB91E8E5")
CleanController;
#endif
#endif /* __CleanControllerCOMLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


