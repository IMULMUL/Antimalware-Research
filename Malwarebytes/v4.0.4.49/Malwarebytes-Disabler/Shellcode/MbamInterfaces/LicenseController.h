

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.01.0622 */
/* at Tue Jan 19 14:14:07 2038
 */
/* Compiler settings for C:\Users\User\source\repos\MBAMExploit\Typelibs\LicenseController.IDL:
    Oicf, W1, Zp8, env=Win64 (32b run), target_arch=AMD64 8.01.0622 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#include "LogController.h"
#include "PoliciesController.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */


#ifndef __LicenseController_h__
#define __LicenseController_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __ILicenseController_FWD_DEFINED__
#define __ILicenseController_FWD_DEFINED__
typedef interface ILicenseController ILicenseController;

#endif 	/* __ILicenseController_FWD_DEFINED__ */


#ifndef __ILicenseControllerV2_FWD_DEFINED__
#define __ILicenseControllerV2_FWD_DEFINED__
typedef interface ILicenseControllerV2 ILicenseControllerV2;

#endif 	/* __ILicenseControllerV2_FWD_DEFINED__ */


#ifndef __ILicenseControllerV3_FWD_DEFINED__
#define __ILicenseControllerV3_FWD_DEFINED__
typedef interface ILicenseControllerV3 ILicenseControllerV3;

#endif 	/* __ILicenseControllerV3_FWD_DEFINED__ */


#ifndef __ILicenseControllerV4_FWD_DEFINED__
#define __ILicenseControllerV4_FWD_DEFINED__
typedef interface ILicenseControllerV4 ILicenseControllerV4;

#endif 	/* __ILicenseControllerV4_FWD_DEFINED__ */


#ifndef __ILicenseControllerV5_FWD_DEFINED__
#define __ILicenseControllerV5_FWD_DEFINED__
typedef interface ILicenseControllerV5 ILicenseControllerV5;

#endif 	/* __ILicenseControllerV5_FWD_DEFINED__ */


#ifndef __ILicenseControllerV6_FWD_DEFINED__
#define __ILicenseControllerV6_FWD_DEFINED__
typedef interface ILicenseControllerV6 ILicenseControllerV6;

#endif 	/* __ILicenseControllerV6_FWD_DEFINED__ */


#ifndef __ILicenseControllerV7_FWD_DEFINED__
#define __ILicenseControllerV7_FWD_DEFINED__
typedef interface ILicenseControllerV7 ILicenseControllerV7;

#endif 	/* __ILicenseControllerV7_FWD_DEFINED__ */


#ifndef __ILicenseControllerV8_FWD_DEFINED__
#define __ILicenseControllerV8_FWD_DEFINED__
typedef interface ILicenseControllerV8 ILicenseControllerV8;

#endif 	/* __ILicenseControllerV8_FWD_DEFINED__ */


#ifndef __ILicenseControllerEvents_FWD_DEFINED__
#define __ILicenseControllerEvents_FWD_DEFINED__
typedef interface ILicenseControllerEvents ILicenseControllerEvents;

#endif 	/* __ILicenseControllerEvents_FWD_DEFINED__ */


#ifndef ___ILicenseControllerEvents_FWD_DEFINED__
#define ___ILicenseControllerEvents_FWD_DEFINED__
typedef interface _ILicenseControllerEvents _ILicenseControllerEvents;

#endif 	/* ___ILicenseControllerEvents_FWD_DEFINED__ */


#ifndef __LicenseController_FWD_DEFINED__
#define __LicenseController_FWD_DEFINED__

#ifdef __cplusplus
typedef class LicenseController LicenseController;
#else
typedef struct LicenseController LicenseController;
#endif /* __cplusplus */

#endif 	/* __LicenseController_FWD_DEFINED__ */


#ifdef __cplusplus
extern "C"{
#endif 



#ifndef __LicenseControllerCOMLib_LIBRARY_DEFINED__
#define __LicenseControllerCOMLib_LIBRARY_DEFINED__

/* library LicenseControllerCOMLib */
/* [custom][custom][custom][version][uuid] */ 











typedef /* [public][public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_LicenseController_0000_0000_0001
    {
        LicenseStateUnknown	= 0,
        LicenseStateFree	= 1,
        LicenseStateTrial	= 2,
        LicenseStateTrialExpired	= 3,
        LicenseStateLicensed	= 4,
        LicenseStateLicenseExpired	= 5,
        LicenseStateLicenseGrace	= 6
    } 	_LicenseStateEnum;

typedef /* [uuid] */  DECLSPEC_UUID("AC3965B9-D246-4137-98F8-2E0BC1FAB58F") struct tagLicenseConfig
    {
    BSTR MachineId;
    BSTR InstallationToken;
    BSTR Key;
    BSTR Id;
    BSTR InstallationKey;
    BSTR EntitlementStatus;
    BSTR EntitlementEndDate;
    BSTR EntitlementTermType;
    BSTR EntitlementAutoRenew;
    long GraceTermDays;
    BSTR EntitlementKey;
    BSTR EntitlementReferralKey;
    BSTR EntitlementSubscriptionId;
    BSTR EntitlementSubscriptionSecret;
    BSTR TrialStatus;
    BSTR TrialStartDate;
    BSTR TrialEndDate;
    VARIANT_BOOL TrialUsed;
    _LicenseStateEnum LicenseState;
    BSTR ProductCode;
    BSTR LastContactDate;
    BSTR Staging;
    BSTR EntitlementFeatures;
    long CheckIntervalSeconds;
    BSTR ExpirationDate;
    BSTR RenewLink;
    BSTR InProductUpgradeLink;
    BSTR OfflineUpgradeLink;
    VARIANT_BOOL UserCancelled;
    long EntitlementVolumePurchased;
    long EntitlementVolumeUsed;
    } 	LicenseConfig;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_LicenseController_0000_0000_0002
    {
        ReturnCode_Ok	= 0,
        ReturnCode_Expired	= 1,
        ReturnCode_Abused	= 2,
        ReturnCode_Mismatch	= 3,
        ReturnCode_Maxed	= 4,
        ReturnCode_Refunded	= 5,
        ReturnCode_Blacklisted	= 6,
        ReturnCode_EntitlementNotFound	= 7,
        ReturnCode_InstallationNotFound	= 8,
        ReturnCode_KeyNotFound	= 9,
        ReturnCode_Disabled	= 10,
        ReturnCode_BadKeyFormat	= 11,
        ReturnCode_SSLException	= 12,
        ReturnCode_BadProxyConfigDetected	= 13,
        ReturnCode_NoNetworkConnection	= 14,
        ReturnCode_GeneralNetworkError	= 15,
        ReturnCode_UnknownError	= 16
    } 	_ReturnCode;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_LicenseController_0000_0000_0003
    {
        LicenseConfigOptionName_MachineId	= 0,
        LicenseConfigOptionName_InstallationToken	= 1,
        LicenseConfigOptionName_Key	= 2,
        LicenseConfigOptionName_InstallationKey	= 3,
        LicenseConfigOptionName_EntitlementStatus	= 4,
        LicenseConfigOptionName_EntitlementEndDate	= 5,
        LicenseConfigOptionName_EntitlementTermType	= 6,
        LicenseConfigOptionName_EntitlementAutoRenew	= 7,
        LicenseConfigOptionName_GraceTermDays	= 8,
        LicenseConfigOptionName_EntitlementKey	= 9,
        LicenseConfigOptionName_EntitlementReferralKey	= 10,
        LicenseConfigOptionName_EntitlementSubscriptionId	= 11,
        LicenseConfigOptionName_EntitlementSubscriptionSecret	= 12,
        LicenseConfigOptionName_TrialStatus	= 13,
        LicenseConfigOptionName_TrialStartDate	= 14,
        LicenseConfigOptionName_TrialEndDate	= 15,
        LicenseConfigOptionName_TrialUsed	= 16,
        LicenseConfigOptionName_LicenseState	= 17,
        LicenseConfigOptionName_ProductCode	= 18,
        LicenseConfigOptionName_LastContactdate	= 19,
        LicenseConfigOptionName_Staging	= 20,
        LicenseConfigOptionName_EntitlementFeatures	= 21,
        LicenseConfigOptionName_ExpirationDate	= 22,
        LicenseConfigOptionName_RenewLink	= 23,
        LicenseConfigOptionName_Id	= 24,
        LicenseConfigOptionName_InProductUpgradeLink	= 25,
        LicenseConfigOptionName_OfflineUpgradeLink	= 26,
        LicenseConfigOptionName_UserCancelled	= 27,
        LicenseConfigOptionName_ExpirationNotification	= 28,
        LicenseConfigOptionName_ComputerName	= 29,
        LicenseConfigOptionName_KeystoneFailureCount	= 30,
        LicenseConfigOptionName_EntitlementVolumePurchased	= 31,
        LicenseConfigOptionName_EntitlementVolumeUsed	= 32,
        LicenseConfigOptionName_AdditionalSeatsLink	= 33,
        LicenseConfigOptionName_EntitlementTermLength	= 34,
        LicenseConfigOptionName_EntitlementStartDate	= 35,
        LicenseConfigOptionName_EntitlementProductsCode	= 36,
        LicenseConfigOptionName_EntitlementProductsCustomerType	= 37,
        LicenseConfigOptionName_EntitlementProductsName	= 38,
        LicenseConfigOptionName_BrowserExtensionTrialGiven	= 39,
        LicenseConfigOptionName_LastLicensingError	= 40
    } 	_LicenseConfigOptionName;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_LicenseController_0000_0000_0004
    {
        LicenseNotificationTarget_Tray	= 0,
        LicenseNotificationTarget_Dashboard	= 1,
        LicenseNotificationTarget_Dasboard_Modal_Lightbox	= 2
    } 	_NotificationTarget;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_LicenseController_0000_0000_0005
    {
        LicenseNotificationType_Trial	= 0,
        LicenseNotificationType_Trial_Expired	= 1,
        LicenseNotificationType_Grace	= 2,
        LicenseNotificationType_Grace_Expired	= 3,
        LicenseNotificationType_Pre_Expiration	= 4,
        LicenseNotificationType_Post_Expiration	= 5,
        LicenseNotificationType_Action_Center	= 6,
        LicenseNotificationType_Promotion	= 7
    } 	_NotificationType;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_LicenseController_0000_0000_0006
    {
        LicenseAlertLevel_General	= 0,
        LicenseAlertLevel_Yellow	= 1,
        LicenseAlertLevel_Red	= 2,
        LicenseAlertLevel_DayOfExpiration	= 3,
        LicenseAlertLevel_AfterExpiration	= 4
    } 	_LicenseAlertLevel;


EXTERN_C const IID LIBID_LicenseControllerCOMLib;

#ifndef __ILicenseController_INTERFACE_DEFINED__
#define __ILicenseController_INTERFACE_DEFINED__

/* interface ILicenseController */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ILicenseController;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8307A4A5-A025-438B-B23B-8EE38A453D54")
    ILicenseController : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Start( 
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild,
            /* [in] */ BSTR pAffiliateName,
            /* [in] */ BSTR pAffiliateID,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Stop( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetLicenseConfig( 
            /* [retval][out] */ LicenseConfig *pLicenseConfig) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetLicenseConfig( 
            /* [in] */ LicenseConfig *pLicenseConfig) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Check( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Activate( 
            /* [in] */ BSTR Key,
            /* [out] */ _ReturnCode *ReturnCodeEnum) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Unactivate( 
            /* [in] */ VARIANT_BOOL Uninstall) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StartTrial( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE EndTrial( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CanIRun( 
            /* [in] */ BSTR ProductCode,
            /* [out] */ VARIANT_BOOL *Answer) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_MachineId( 
            /* [in] */ BSTR ppMachineId) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_MachineId( 
            /* [retval][out] */ BSTR *ppMachineId) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_InstallationToken( 
            /* [in] */ BSTR ppInstallationToken) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_InstallationToken( 
            /* [retval][out] */ BSTR *ppInstallationToken) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Key( 
            /* [in] */ BSTR ppKey) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Key( 
            /* [retval][out] */ BSTR *ppKey) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_InstallationKey( 
            /* [in] */ BSTR ppInstallationkey) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_InstallationKey( 
            /* [retval][out] */ BSTR *ppInstallationkey) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementStatus( 
            /* [in] */ BSTR ppEntitlementStatus) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementStatus( 
            /* [retval][out] */ BSTR *ppEntitlementStatus) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementEndDate( 
            /* [in] */ BSTR ppEntitlementEndDate) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementEndDate( 
            /* [retval][out] */ BSTR *ppEntitlementEndDate) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementTermType( 
            /* [in] */ BSTR ppEntitlementTermType) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementTermType( 
            /* [retval][out] */ BSTR *ppEntitlementTermType) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementAutoRenew( 
            /* [in] */ BSTR ppEntitlementAutoRenew) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementAutoRenew( 
            /* [retval][out] */ BSTR *ppEntitlementAutoRenew) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_GraceTermDays( 
            /* [in] */ long pGraceTermDays) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GraceTermDays( 
            /* [retval][out] */ long *pGraceTermDays) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementKey( 
            /* [in] */ BSTR ppEntitlementKey) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementKey( 
            /* [retval][out] */ BSTR *ppEntitlementKey) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementReferralKey( 
            /* [in] */ BSTR ppEntitlementReferralKey) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementReferralKey( 
            /* [retval][out] */ BSTR *ppEntitlementReferralKey) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementSubscriptionId( 
            /* [in] */ BSTR ppEntitlementSubscriptionId) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementSubscriptionId( 
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionId) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementSubscriptionSecret( 
            /* [in] */ BSTR ppEntitlementSubscriptionSecret) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementSubscriptionSecret( 
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionSecret) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_TrialStatus( 
            /* [in] */ BSTR ppTrialStatus) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TrialStatus( 
            /* [retval][out] */ BSTR *ppTrialStatus) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_TrialStartDate( 
            /* [in] */ BSTR ppTrialStartDate) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TrialStartDate( 
            /* [retval][out] */ BSTR *ppTrialStartDate) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_TrialEndDate( 
            /* [in] */ BSTR ppTrialEndDate) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TrialEndDate( 
            /* [retval][out] */ BSTR *ppTrialEndDate) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_TrialUsed( 
            /* [in] */ VARIANT_BOOL pTrialUsed) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TrialUsed( 
            /* [retval][out] */ VARIANT_BOOL *pTrialUsed) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_LicenseState( 
            /* [in] */ _LicenseStateEnum pLicenseState) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_LicenseState( 
            /* [retval][out] */ _LicenseStateEnum *pLicenseState) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ProductCode( 
            /* [in] */ BSTR ppProductCode) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ProductCode( 
            /* [retval][out] */ BSTR *ppProductCode) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_LastContactDate( 
            /* [in] */ BSTR ppLastContactDate) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_LastContactDate( 
            /* [retval][out] */ BSTR *ppLastContactDate) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Staging( 
            /* [in] */ BSTR ppStaging) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Staging( 
            /* [retval][out] */ BSTR *ppStaging) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SendEvent( 
            /* [in] */ BSTR EventType,
            /* [in] */ unsigned long EventCounter,
            /* [in] */ BSTR EventTag,
            /* [in] */ BSTR Tags,
            /* [in] */ BSTR OccuredAt) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementFeatures( 
            /* [in] */ BSTR ppEntitlementFeatures) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementFeatures( 
            /* [retval][out] */ BSTR *ppEntitlementFeatures) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ExpirationDate( 
            /* [in] */ BSTR ppExpirationDate) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ExpirationDate( 
            /* [retval][out] */ BSTR *ppExpirationDate) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PrepareUpdate( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FinishUpdate( void) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_RenewLink( 
            /* [in] */ BSTR ppRenewLink) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_RenewLink( 
            /* [retval][out] */ BSTR *ppRenewLink) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Renew_Link( void) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Id( 
            /* [in] */ BSTR ppId) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Id( 
            /* [retval][out] */ BSTR *ppId) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_InProductUpgradeLink( 
            /* [in] */ BSTR ppUpgradeLink) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_InProductUpgradeLink( 
            /* [retval][out] */ BSTR *ppUpgradeLink) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_OfflineUpgradeLink( 
            /* [in] */ BSTR ppUpgradeLink) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OfflineUpgradeLink( 
            /* [retval][out] */ BSTR *ppUpgradeLink) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetAllowDataCollection( 
            /* [in] */ VARIANT_BOOL bAllow) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNotificationCount( 
            /* [out] */ long *pNumNotifications) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNotificationIDs( 
            /* [retval][out] */ SAFEARRAY * *ppNotificationIDs) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNotificationDetails( 
            /* [in] */ BSTR pID,
            /* [out] */ _NotificationTarget *pTarget,
            /* [out] */ _NotificationType *pType,
            /* [out] */ long *pStartingDay,
            /* [out] */ long *pEndingDay,
            /* [out] */ long *pShownOnDay,
            /* [out] */ VARIANT_BOOL *pShowRepeatedly,
            /* [out] */ VARIANT_BOOL *pShowIfUiVisible,
            /* [out] */ _LicenseAlertLevel *pAlertLevel) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetNotificationShown( 
            /* [in] */ BSTR pID,
            /* [in] */ long shownOnDay) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetNotificationTypeShown( 
            /* [in] */ _NotificationType type,
            /* [in] */ long shownOnDay) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ResetNotificationShown( 
            /* [in] */ BSTR pID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ResetNotificationShownForType( 
            /* [in] */ _NotificationType type) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ILicenseControllerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILicenseController * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILicenseController * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILicenseController * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ILicenseController * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ILicenseController * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ILicenseController * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ILicenseController * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ILicenseController * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild,
            /* [in] */ BSTR pAffiliateName,
            /* [in] */ BSTR pAffiliateID,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ILicenseController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLicenseConfig )( 
            ILicenseController * This,
            /* [retval][out] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetLicenseConfig )( 
            ILicenseController * This,
            /* [in] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            ILicenseController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            ILicenseController * This,
            /* [in] */ BSTR Key,
            /* [out] */ _ReturnCode *ReturnCodeEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Unactivate )( 
            ILicenseController * This,
            /* [in] */ VARIANT_BOOL Uninstall);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartTrial )( 
            ILicenseController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EndTrial )( 
            ILicenseController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CanIRun )( 
            ILicenseController * This,
            /* [in] */ BSTR ProductCode,
            /* [out] */ VARIANT_BOOL *Answer);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MachineId )( 
            ILicenseController * This,
            /* [in] */ BSTR ppMachineId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MachineId )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppMachineId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationToken )( 
            ILicenseController * This,
            /* [in] */ BSTR ppInstallationToken);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationToken )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppInstallationToken);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Key )( 
            ILicenseController * This,
            /* [in] */ BSTR ppKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Key )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationKey )( 
            ILicenseController * This,
            /* [in] */ BSTR ppInstallationkey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationKey )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppInstallationkey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementStatus )( 
            ILicenseController * This,
            /* [in] */ BSTR ppEntitlementStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementStatus )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppEntitlementStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementEndDate )( 
            ILicenseController * This,
            /* [in] */ BSTR ppEntitlementEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementEndDate )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppEntitlementEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementTermType )( 
            ILicenseController * This,
            /* [in] */ BSTR ppEntitlementTermType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementTermType )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppEntitlementTermType);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementAutoRenew )( 
            ILicenseController * This,
            /* [in] */ BSTR ppEntitlementAutoRenew);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementAutoRenew )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppEntitlementAutoRenew);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GraceTermDays )( 
            ILicenseController * This,
            /* [in] */ long pGraceTermDays);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GraceTermDays )( 
            ILicenseController * This,
            /* [retval][out] */ long *pGraceTermDays);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementKey )( 
            ILicenseController * This,
            /* [in] */ BSTR ppEntitlementKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementKey )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppEntitlementKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementReferralKey )( 
            ILicenseController * This,
            /* [in] */ BSTR ppEntitlementReferralKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementReferralKey )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppEntitlementReferralKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionId )( 
            ILicenseController * This,
            /* [in] */ BSTR ppEntitlementSubscriptionId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionId )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionSecret )( 
            ILicenseController * This,
            /* [in] */ BSTR ppEntitlementSubscriptionSecret);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionSecret )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionSecret);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStatus )( 
            ILicenseController * This,
            /* [in] */ BSTR ppTrialStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStatus )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppTrialStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStartDate )( 
            ILicenseController * This,
            /* [in] */ BSTR ppTrialStartDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStartDate )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppTrialStartDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialEndDate )( 
            ILicenseController * This,
            /* [in] */ BSTR ppTrialEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialEndDate )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppTrialEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialUsed )( 
            ILicenseController * This,
            /* [in] */ VARIANT_BOOL pTrialUsed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialUsed )( 
            ILicenseController * This,
            /* [retval][out] */ VARIANT_BOOL *pTrialUsed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LicenseState )( 
            ILicenseController * This,
            /* [in] */ _LicenseStateEnum pLicenseState);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LicenseState )( 
            ILicenseController * This,
            /* [retval][out] */ _LicenseStateEnum *pLicenseState);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProductCode )( 
            ILicenseController * This,
            /* [in] */ BSTR ppProductCode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProductCode )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppProductCode);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LastContactDate )( 
            ILicenseController * This,
            /* [in] */ BSTR ppLastContactDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastContactDate )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppLastContactDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Staging )( 
            ILicenseController * This,
            /* [in] */ BSTR ppStaging);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Staging )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppStaging);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            ILicenseController * This,
            /* [in] */ BSTR EventType,
            /* [in] */ unsigned long EventCounter,
            /* [in] */ BSTR EventTag,
            /* [in] */ BSTR Tags,
            /* [in] */ BSTR OccuredAt);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementFeatures )( 
            ILicenseController * This,
            /* [in] */ BSTR ppEntitlementFeatures);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementFeatures )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppEntitlementFeatures);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExpirationDate )( 
            ILicenseController * This,
            /* [in] */ BSTR ppExpirationDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExpirationDate )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppExpirationDate);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ILicenseController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ILicenseController * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RenewLink )( 
            ILicenseController * This,
            /* [in] */ BSTR ppRenewLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RenewLink )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppRenewLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Renew_Link )( 
            ILicenseController * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Id )( 
            ILicenseController * This,
            /* [in] */ BSTR ppId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InProductUpgradeLink )( 
            ILicenseController * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InProductUpgradeLink )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OfflineUpgradeLink )( 
            ILicenseController * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OfflineUpgradeLink )( 
            ILicenseController * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAllowDataCollection )( 
            ILicenseController * This,
            /* [in] */ VARIANT_BOOL bAllow);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationCount )( 
            ILicenseController * This,
            /* [out] */ long *pNumNotifications);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationIDs )( 
            ILicenseController * This,
            /* [retval][out] */ SAFEARRAY * *ppNotificationIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationDetails )( 
            ILicenseController * This,
            /* [in] */ BSTR pID,
            /* [out] */ _NotificationTarget *pTarget,
            /* [out] */ _NotificationType *pType,
            /* [out] */ long *pStartingDay,
            /* [out] */ long *pEndingDay,
            /* [out] */ long *pShownOnDay,
            /* [out] */ VARIANT_BOOL *pShowRepeatedly,
            /* [out] */ VARIANT_BOOL *pShowIfUiVisible,
            /* [out] */ _LicenseAlertLevel *pAlertLevel);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationShown )( 
            ILicenseController * This,
            /* [in] */ BSTR pID,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationTypeShown )( 
            ILicenseController * This,
            /* [in] */ _NotificationType type,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShown )( 
            ILicenseController * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShownForType )( 
            ILicenseController * This,
            /* [in] */ _NotificationType type);
        
        END_INTERFACE
    } ILicenseControllerVtbl;

    interface ILicenseController
    {
        CONST_VTBL struct ILicenseControllerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILicenseController_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILicenseController_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILicenseController_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILicenseController_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ILicenseController_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ILicenseController_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ILicenseController_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ILicenseController_Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController) ) 

#define ILicenseController_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define ILicenseController_GetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> GetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseController_SetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> SetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseController_Check(This)	\
    ( (This)->lpVtbl -> Check(This) ) 

#define ILicenseController_Activate(This,Key,ReturnCodeEnum)	\
    ( (This)->lpVtbl -> Activate(This,Key,ReturnCodeEnum) ) 

#define ILicenseController_Unactivate(This,Uninstall)	\
    ( (This)->lpVtbl -> Unactivate(This,Uninstall) ) 

#define ILicenseController_StartTrial(This)	\
    ( (This)->lpVtbl -> StartTrial(This) ) 

#define ILicenseController_EndTrial(This)	\
    ( (This)->lpVtbl -> EndTrial(This) ) 

#define ILicenseController_CanIRun(This,ProductCode,Answer)	\
    ( (This)->lpVtbl -> CanIRun(This,ProductCode,Answer) ) 

#define ILicenseController_put_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> put_MachineId(This,ppMachineId) ) 

#define ILicenseController_get_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> get_MachineId(This,ppMachineId) ) 

#define ILicenseController_put_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> put_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseController_get_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> get_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseController_put_Key(This,ppKey)	\
    ( (This)->lpVtbl -> put_Key(This,ppKey) ) 

#define ILicenseController_get_Key(This,ppKey)	\
    ( (This)->lpVtbl -> get_Key(This,ppKey) ) 

#define ILicenseController_put_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> put_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseController_get_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> get_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseController_put_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> put_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseController_get_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> get_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseController_put_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> put_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseController_get_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> get_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseController_put_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> put_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseController_get_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> get_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseController_put_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> put_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseController_get_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> get_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseController_put_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> put_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseController_get_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> get_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseController_put_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> put_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseController_get_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> get_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseController_put_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> put_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseController_get_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> get_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseController_put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseController_get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseController_put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseController_get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseController_put_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> put_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseController_get_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> get_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseController_put_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> put_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseController_get_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> get_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseController_put_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> put_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseController_get_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> get_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseController_put_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> put_TrialUsed(This,pTrialUsed) ) 

#define ILicenseController_get_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> get_TrialUsed(This,pTrialUsed) ) 

#define ILicenseController_put_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> put_LicenseState(This,pLicenseState) ) 

#define ILicenseController_get_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> get_LicenseState(This,pLicenseState) ) 

#define ILicenseController_put_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> put_ProductCode(This,ppProductCode) ) 

#define ILicenseController_get_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> get_ProductCode(This,ppProductCode) ) 

#define ILicenseController_put_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> put_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseController_get_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> get_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseController_put_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> put_Staging(This,ppStaging) ) 

#define ILicenseController_get_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> get_Staging(This,ppStaging) ) 

#define ILicenseController_SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt)	\
    ( (This)->lpVtbl -> SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt) ) 

#define ILicenseController_put_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> put_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseController_get_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> get_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseController_put_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> put_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseController_get_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> get_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseController_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define ILicenseController_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ILicenseController_put_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> put_RenewLink(This,ppRenewLink) ) 

#define ILicenseController_get_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> get_RenewLink(This,ppRenewLink) ) 

#define ILicenseController_Renew_Link(This)	\
    ( (This)->lpVtbl -> Renew_Link(This) ) 

#define ILicenseController_put_Id(This,ppId)	\
    ( (This)->lpVtbl -> put_Id(This,ppId) ) 

#define ILicenseController_get_Id(This,ppId)	\
    ( (This)->lpVtbl -> get_Id(This,ppId) ) 

#define ILicenseController_put_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseController_get_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseController_put_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseController_get_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseController_SetAllowDataCollection(This,bAllow)	\
    ( (This)->lpVtbl -> SetAllowDataCollection(This,bAllow) ) 

#define ILicenseController_GetNotificationCount(This,pNumNotifications)	\
    ( (This)->lpVtbl -> GetNotificationCount(This,pNumNotifications) ) 

#define ILicenseController_GetNotificationIDs(This,ppNotificationIDs)	\
    ( (This)->lpVtbl -> GetNotificationIDs(This,ppNotificationIDs) ) 

#define ILicenseController_GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel)	\
    ( (This)->lpVtbl -> GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel) ) 

#define ILicenseController_SetNotificationShown(This,pID,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationShown(This,pID,shownOnDay) ) 

#define ILicenseController_SetNotificationTypeShown(This,type,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationTypeShown(This,type,shownOnDay) ) 

#define ILicenseController_ResetNotificationShown(This,pID)	\
    ( (This)->lpVtbl -> ResetNotificationShown(This,pID) ) 

#define ILicenseController_ResetNotificationShownForType(This,type)	\
    ( (This)->lpVtbl -> ResetNotificationShownForType(This,type) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILicenseController_INTERFACE_DEFINED__ */


#ifndef __ILicenseControllerV2_INTERFACE_DEFINED__
#define __ILicenseControllerV2_INTERFACE_DEFINED__

/* interface ILicenseControllerV2 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ILicenseControllerV2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8ED8EAAB-1FA5-48D4-ACD4-32645776BA28")
    ILicenseControllerV2 : public ILicenseController
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PowerSuspendNotification( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PowerResumeNotification( 
            /* [in] */ VARIANT_BOOL wasPowerSuspendCalled) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ILicenseControllerV2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILicenseControllerV2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILicenseControllerV2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILicenseControllerV2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ILicenseControllerV2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ILicenseControllerV2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ILicenseControllerV2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ILicenseControllerV2 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild,
            /* [in] */ BSTR pAffiliateName,
            /* [in] */ BSTR pAffiliateID,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ILicenseControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLicenseConfig )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetLicenseConfig )( 
            ILicenseControllerV2 * This,
            /* [in] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            ILicenseControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR Key,
            /* [out] */ _ReturnCode *ReturnCodeEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Unactivate )( 
            ILicenseControllerV2 * This,
            /* [in] */ VARIANT_BOOL Uninstall);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartTrial )( 
            ILicenseControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EndTrial )( 
            ILicenseControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CanIRun )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ProductCode,
            /* [out] */ VARIANT_BOOL *Answer);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MachineId )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppMachineId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MachineId )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppMachineId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationToken )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppInstallationToken);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationToken )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppInstallationToken);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Key )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Key )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationKey )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppInstallationkey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationKey )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppInstallationkey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementStatus )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppEntitlementStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementStatus )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppEntitlementStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementEndDate )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppEntitlementEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementEndDate )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppEntitlementEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementTermType )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppEntitlementTermType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementTermType )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppEntitlementTermType);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementAutoRenew )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppEntitlementAutoRenew);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementAutoRenew )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppEntitlementAutoRenew);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GraceTermDays )( 
            ILicenseControllerV2 * This,
            /* [in] */ long pGraceTermDays);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GraceTermDays )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ long *pGraceTermDays);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementKey )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppEntitlementKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementKey )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppEntitlementKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementReferralKey )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppEntitlementReferralKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementReferralKey )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppEntitlementReferralKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionId )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppEntitlementSubscriptionId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionId )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionSecret )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppEntitlementSubscriptionSecret);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionSecret )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionSecret);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStatus )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppTrialStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStatus )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppTrialStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStartDate )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppTrialStartDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStartDate )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppTrialStartDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialEndDate )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppTrialEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialEndDate )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppTrialEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialUsed )( 
            ILicenseControllerV2 * This,
            /* [in] */ VARIANT_BOOL pTrialUsed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialUsed )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pTrialUsed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LicenseState )( 
            ILicenseControllerV2 * This,
            /* [in] */ _LicenseStateEnum pLicenseState);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LicenseState )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ _LicenseStateEnum *pLicenseState);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProductCode )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppProductCode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProductCode )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppProductCode);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LastContactDate )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppLastContactDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastContactDate )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppLastContactDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Staging )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppStaging);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Staging )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppStaging);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR EventType,
            /* [in] */ unsigned long EventCounter,
            /* [in] */ BSTR EventTag,
            /* [in] */ BSTR Tags,
            /* [in] */ BSTR OccuredAt);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementFeatures )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppEntitlementFeatures);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementFeatures )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppEntitlementFeatures);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExpirationDate )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppExpirationDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExpirationDate )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppExpirationDate);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ILicenseControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ILicenseControllerV2 * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RenewLink )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppRenewLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RenewLink )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppRenewLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Renew_Link )( 
            ILicenseControllerV2 * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Id )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InProductUpgradeLink )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InProductUpgradeLink )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OfflineUpgradeLink )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OfflineUpgradeLink )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAllowDataCollection )( 
            ILicenseControllerV2 * This,
            /* [in] */ VARIANT_BOOL bAllow);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationCount )( 
            ILicenseControllerV2 * This,
            /* [out] */ long *pNumNotifications);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationIDs )( 
            ILicenseControllerV2 * This,
            /* [retval][out] */ SAFEARRAY * *ppNotificationIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationDetails )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR pID,
            /* [out] */ _NotificationTarget *pTarget,
            /* [out] */ _NotificationType *pType,
            /* [out] */ long *pStartingDay,
            /* [out] */ long *pEndingDay,
            /* [out] */ long *pShownOnDay,
            /* [out] */ VARIANT_BOOL *pShowRepeatedly,
            /* [out] */ VARIANT_BOOL *pShowIfUiVisible,
            /* [out] */ _LicenseAlertLevel *pAlertLevel);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationShown )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR pID,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationTypeShown )( 
            ILicenseControllerV2 * This,
            /* [in] */ _NotificationType type,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShown )( 
            ILicenseControllerV2 * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShownForType )( 
            ILicenseControllerV2 * This,
            /* [in] */ _NotificationType type);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PowerSuspendNotification )( 
            ILicenseControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PowerResumeNotification )( 
            ILicenseControllerV2 * This,
            /* [in] */ VARIANT_BOOL wasPowerSuspendCalled);
        
        END_INTERFACE
    } ILicenseControllerV2Vtbl;

    interface ILicenseControllerV2
    {
        CONST_VTBL struct ILicenseControllerV2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILicenseControllerV2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILicenseControllerV2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILicenseControllerV2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILicenseControllerV2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ILicenseControllerV2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ILicenseControllerV2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ILicenseControllerV2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ILicenseControllerV2_Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController) ) 

#define ILicenseControllerV2_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define ILicenseControllerV2_GetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> GetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseControllerV2_SetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> SetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseControllerV2_Check(This)	\
    ( (This)->lpVtbl -> Check(This) ) 

#define ILicenseControllerV2_Activate(This,Key,ReturnCodeEnum)	\
    ( (This)->lpVtbl -> Activate(This,Key,ReturnCodeEnum) ) 

#define ILicenseControllerV2_Unactivate(This,Uninstall)	\
    ( (This)->lpVtbl -> Unactivate(This,Uninstall) ) 

#define ILicenseControllerV2_StartTrial(This)	\
    ( (This)->lpVtbl -> StartTrial(This) ) 

#define ILicenseControllerV2_EndTrial(This)	\
    ( (This)->lpVtbl -> EndTrial(This) ) 

#define ILicenseControllerV2_CanIRun(This,ProductCode,Answer)	\
    ( (This)->lpVtbl -> CanIRun(This,ProductCode,Answer) ) 

#define ILicenseControllerV2_put_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> put_MachineId(This,ppMachineId) ) 

#define ILicenseControllerV2_get_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> get_MachineId(This,ppMachineId) ) 

#define ILicenseControllerV2_put_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> put_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseControllerV2_get_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> get_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseControllerV2_put_Key(This,ppKey)	\
    ( (This)->lpVtbl -> put_Key(This,ppKey) ) 

#define ILicenseControllerV2_get_Key(This,ppKey)	\
    ( (This)->lpVtbl -> get_Key(This,ppKey) ) 

#define ILicenseControllerV2_put_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> put_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseControllerV2_get_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> get_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseControllerV2_put_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> put_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseControllerV2_get_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> get_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseControllerV2_put_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> put_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseControllerV2_get_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> get_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseControllerV2_put_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> put_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseControllerV2_get_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> get_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseControllerV2_put_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> put_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseControllerV2_get_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> get_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseControllerV2_put_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> put_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseControllerV2_get_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> get_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseControllerV2_put_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> put_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseControllerV2_get_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> get_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseControllerV2_put_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> put_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseControllerV2_get_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> get_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseControllerV2_put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseControllerV2_get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseControllerV2_put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseControllerV2_get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseControllerV2_put_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> put_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseControllerV2_get_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> get_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseControllerV2_put_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> put_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseControllerV2_get_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> get_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseControllerV2_put_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> put_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseControllerV2_get_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> get_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseControllerV2_put_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> put_TrialUsed(This,pTrialUsed) ) 

#define ILicenseControllerV2_get_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> get_TrialUsed(This,pTrialUsed) ) 

#define ILicenseControllerV2_put_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> put_LicenseState(This,pLicenseState) ) 

#define ILicenseControllerV2_get_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> get_LicenseState(This,pLicenseState) ) 

#define ILicenseControllerV2_put_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> put_ProductCode(This,ppProductCode) ) 

#define ILicenseControllerV2_get_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> get_ProductCode(This,ppProductCode) ) 

#define ILicenseControllerV2_put_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> put_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseControllerV2_get_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> get_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseControllerV2_put_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> put_Staging(This,ppStaging) ) 

#define ILicenseControllerV2_get_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> get_Staging(This,ppStaging) ) 

#define ILicenseControllerV2_SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt)	\
    ( (This)->lpVtbl -> SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt) ) 

#define ILicenseControllerV2_put_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> put_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseControllerV2_get_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> get_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseControllerV2_put_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> put_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseControllerV2_get_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> get_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseControllerV2_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define ILicenseControllerV2_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ILicenseControllerV2_put_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> put_RenewLink(This,ppRenewLink) ) 

#define ILicenseControllerV2_get_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> get_RenewLink(This,ppRenewLink) ) 

#define ILicenseControllerV2_Renew_Link(This)	\
    ( (This)->lpVtbl -> Renew_Link(This) ) 

#define ILicenseControllerV2_put_Id(This,ppId)	\
    ( (This)->lpVtbl -> put_Id(This,ppId) ) 

#define ILicenseControllerV2_get_Id(This,ppId)	\
    ( (This)->lpVtbl -> get_Id(This,ppId) ) 

#define ILicenseControllerV2_put_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV2_get_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV2_put_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV2_get_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV2_SetAllowDataCollection(This,bAllow)	\
    ( (This)->lpVtbl -> SetAllowDataCollection(This,bAllow) ) 

#define ILicenseControllerV2_GetNotificationCount(This,pNumNotifications)	\
    ( (This)->lpVtbl -> GetNotificationCount(This,pNumNotifications) ) 

#define ILicenseControllerV2_GetNotificationIDs(This,ppNotificationIDs)	\
    ( (This)->lpVtbl -> GetNotificationIDs(This,ppNotificationIDs) ) 

#define ILicenseControllerV2_GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel)	\
    ( (This)->lpVtbl -> GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel) ) 

#define ILicenseControllerV2_SetNotificationShown(This,pID,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationShown(This,pID,shownOnDay) ) 

#define ILicenseControllerV2_SetNotificationTypeShown(This,type,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationTypeShown(This,type,shownOnDay) ) 

#define ILicenseControllerV2_ResetNotificationShown(This,pID)	\
    ( (This)->lpVtbl -> ResetNotificationShown(This,pID) ) 

#define ILicenseControllerV2_ResetNotificationShownForType(This,type)	\
    ( (This)->lpVtbl -> ResetNotificationShownForType(This,type) ) 


#define ILicenseControllerV2_PowerSuspendNotification(This)	\
    ( (This)->lpVtbl -> PowerSuspendNotification(This) ) 

#define ILicenseControllerV2_PowerResumeNotification(This,wasPowerSuspendCalled)	\
    ( (This)->lpVtbl -> PowerResumeNotification(This,wasPowerSuspendCalled) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILicenseControllerV2_INTERFACE_DEFINED__ */


#ifndef __ILicenseControllerV3_INTERFACE_DEFINED__
#define __ILicenseControllerV3_INTERFACE_DEFINED__

/* interface ILicenseControllerV3 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ILicenseControllerV3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C2E404A3-4E3F-4094-AE06-5E38D39B79AE")
    ILicenseControllerV3 : public ILicenseControllerV2
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ComputerName( 
            /* [retval][out] */ BSTR *ppComputerName) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ILicenseControllerV3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILicenseControllerV3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILicenseControllerV3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILicenseControllerV3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ILicenseControllerV3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ILicenseControllerV3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ILicenseControllerV3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ILicenseControllerV3 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild,
            /* [in] */ BSTR pAffiliateName,
            /* [in] */ BSTR pAffiliateID,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ILicenseControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLicenseConfig )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetLicenseConfig )( 
            ILicenseControllerV3 * This,
            /* [in] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            ILicenseControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR Key,
            /* [out] */ _ReturnCode *ReturnCodeEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Unactivate )( 
            ILicenseControllerV3 * This,
            /* [in] */ VARIANT_BOOL Uninstall);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartTrial )( 
            ILicenseControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EndTrial )( 
            ILicenseControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CanIRun )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ProductCode,
            /* [out] */ VARIANT_BOOL *Answer);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MachineId )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppMachineId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MachineId )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppMachineId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationToken )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppInstallationToken);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationToken )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppInstallationToken);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Key )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Key )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationKey )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppInstallationkey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationKey )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppInstallationkey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementStatus )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppEntitlementStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementStatus )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppEntitlementStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementEndDate )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppEntitlementEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementEndDate )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppEntitlementEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementTermType )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppEntitlementTermType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementTermType )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppEntitlementTermType);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementAutoRenew )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppEntitlementAutoRenew);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementAutoRenew )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppEntitlementAutoRenew);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GraceTermDays )( 
            ILicenseControllerV3 * This,
            /* [in] */ long pGraceTermDays);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GraceTermDays )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ long *pGraceTermDays);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementKey )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppEntitlementKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementKey )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppEntitlementKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementReferralKey )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppEntitlementReferralKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementReferralKey )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppEntitlementReferralKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionId )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppEntitlementSubscriptionId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionId )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionSecret )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppEntitlementSubscriptionSecret);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionSecret )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionSecret);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStatus )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppTrialStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStatus )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppTrialStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStartDate )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppTrialStartDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStartDate )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppTrialStartDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialEndDate )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppTrialEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialEndDate )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppTrialEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialUsed )( 
            ILicenseControllerV3 * This,
            /* [in] */ VARIANT_BOOL pTrialUsed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialUsed )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pTrialUsed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LicenseState )( 
            ILicenseControllerV3 * This,
            /* [in] */ _LicenseStateEnum pLicenseState);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LicenseState )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ _LicenseStateEnum *pLicenseState);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProductCode )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppProductCode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProductCode )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppProductCode);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LastContactDate )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppLastContactDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastContactDate )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppLastContactDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Staging )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppStaging);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Staging )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppStaging);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR EventType,
            /* [in] */ unsigned long EventCounter,
            /* [in] */ BSTR EventTag,
            /* [in] */ BSTR Tags,
            /* [in] */ BSTR OccuredAt);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementFeatures )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppEntitlementFeatures);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementFeatures )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppEntitlementFeatures);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExpirationDate )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppExpirationDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExpirationDate )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppExpirationDate);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ILicenseControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ILicenseControllerV3 * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RenewLink )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppRenewLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RenewLink )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppRenewLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Renew_Link )( 
            ILicenseControllerV3 * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Id )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InProductUpgradeLink )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InProductUpgradeLink )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OfflineUpgradeLink )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OfflineUpgradeLink )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAllowDataCollection )( 
            ILicenseControllerV3 * This,
            /* [in] */ VARIANT_BOOL bAllow);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationCount )( 
            ILicenseControllerV3 * This,
            /* [out] */ long *pNumNotifications);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationIDs )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ SAFEARRAY * *ppNotificationIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationDetails )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR pID,
            /* [out] */ _NotificationTarget *pTarget,
            /* [out] */ _NotificationType *pType,
            /* [out] */ long *pStartingDay,
            /* [out] */ long *pEndingDay,
            /* [out] */ long *pShownOnDay,
            /* [out] */ VARIANT_BOOL *pShowRepeatedly,
            /* [out] */ VARIANT_BOOL *pShowIfUiVisible,
            /* [out] */ _LicenseAlertLevel *pAlertLevel);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationShown )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR pID,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationTypeShown )( 
            ILicenseControllerV3 * This,
            /* [in] */ _NotificationType type,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShown )( 
            ILicenseControllerV3 * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShownForType )( 
            ILicenseControllerV3 * This,
            /* [in] */ _NotificationType type);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PowerSuspendNotification )( 
            ILicenseControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PowerResumeNotification )( 
            ILicenseControllerV3 * This,
            /* [in] */ VARIANT_BOOL wasPowerSuspendCalled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ComputerName )( 
            ILicenseControllerV3 * This,
            /* [retval][out] */ BSTR *ppComputerName);
        
        END_INTERFACE
    } ILicenseControllerV3Vtbl;

    interface ILicenseControllerV3
    {
        CONST_VTBL struct ILicenseControllerV3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILicenseControllerV3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILicenseControllerV3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILicenseControllerV3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILicenseControllerV3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ILicenseControllerV3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ILicenseControllerV3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ILicenseControllerV3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ILicenseControllerV3_Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController) ) 

#define ILicenseControllerV3_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define ILicenseControllerV3_GetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> GetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseControllerV3_SetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> SetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseControllerV3_Check(This)	\
    ( (This)->lpVtbl -> Check(This) ) 

#define ILicenseControllerV3_Activate(This,Key,ReturnCodeEnum)	\
    ( (This)->lpVtbl -> Activate(This,Key,ReturnCodeEnum) ) 

#define ILicenseControllerV3_Unactivate(This,Uninstall)	\
    ( (This)->lpVtbl -> Unactivate(This,Uninstall) ) 

#define ILicenseControllerV3_StartTrial(This)	\
    ( (This)->lpVtbl -> StartTrial(This) ) 

#define ILicenseControllerV3_EndTrial(This)	\
    ( (This)->lpVtbl -> EndTrial(This) ) 

#define ILicenseControllerV3_CanIRun(This,ProductCode,Answer)	\
    ( (This)->lpVtbl -> CanIRun(This,ProductCode,Answer) ) 

#define ILicenseControllerV3_put_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> put_MachineId(This,ppMachineId) ) 

#define ILicenseControllerV3_get_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> get_MachineId(This,ppMachineId) ) 

#define ILicenseControllerV3_put_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> put_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseControllerV3_get_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> get_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseControllerV3_put_Key(This,ppKey)	\
    ( (This)->lpVtbl -> put_Key(This,ppKey) ) 

#define ILicenseControllerV3_get_Key(This,ppKey)	\
    ( (This)->lpVtbl -> get_Key(This,ppKey) ) 

#define ILicenseControllerV3_put_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> put_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseControllerV3_get_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> get_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseControllerV3_put_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> put_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseControllerV3_get_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> get_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseControllerV3_put_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> put_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseControllerV3_get_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> get_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseControllerV3_put_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> put_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseControllerV3_get_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> get_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseControllerV3_put_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> put_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseControllerV3_get_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> get_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseControllerV3_put_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> put_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseControllerV3_get_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> get_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseControllerV3_put_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> put_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseControllerV3_get_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> get_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseControllerV3_put_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> put_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseControllerV3_get_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> get_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseControllerV3_put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseControllerV3_get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseControllerV3_put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseControllerV3_get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseControllerV3_put_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> put_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseControllerV3_get_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> get_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseControllerV3_put_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> put_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseControllerV3_get_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> get_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseControllerV3_put_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> put_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseControllerV3_get_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> get_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseControllerV3_put_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> put_TrialUsed(This,pTrialUsed) ) 

#define ILicenseControllerV3_get_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> get_TrialUsed(This,pTrialUsed) ) 

#define ILicenseControllerV3_put_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> put_LicenseState(This,pLicenseState) ) 

#define ILicenseControllerV3_get_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> get_LicenseState(This,pLicenseState) ) 

#define ILicenseControllerV3_put_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> put_ProductCode(This,ppProductCode) ) 

#define ILicenseControllerV3_get_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> get_ProductCode(This,ppProductCode) ) 

#define ILicenseControllerV3_put_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> put_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseControllerV3_get_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> get_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseControllerV3_put_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> put_Staging(This,ppStaging) ) 

#define ILicenseControllerV3_get_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> get_Staging(This,ppStaging) ) 

#define ILicenseControllerV3_SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt)	\
    ( (This)->lpVtbl -> SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt) ) 

#define ILicenseControllerV3_put_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> put_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseControllerV3_get_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> get_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseControllerV3_put_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> put_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseControllerV3_get_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> get_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseControllerV3_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define ILicenseControllerV3_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ILicenseControllerV3_put_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> put_RenewLink(This,ppRenewLink) ) 

#define ILicenseControllerV3_get_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> get_RenewLink(This,ppRenewLink) ) 

#define ILicenseControllerV3_Renew_Link(This)	\
    ( (This)->lpVtbl -> Renew_Link(This) ) 

#define ILicenseControllerV3_put_Id(This,ppId)	\
    ( (This)->lpVtbl -> put_Id(This,ppId) ) 

#define ILicenseControllerV3_get_Id(This,ppId)	\
    ( (This)->lpVtbl -> get_Id(This,ppId) ) 

#define ILicenseControllerV3_put_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV3_get_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV3_put_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV3_get_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV3_SetAllowDataCollection(This,bAllow)	\
    ( (This)->lpVtbl -> SetAllowDataCollection(This,bAllow) ) 

#define ILicenseControllerV3_GetNotificationCount(This,pNumNotifications)	\
    ( (This)->lpVtbl -> GetNotificationCount(This,pNumNotifications) ) 

#define ILicenseControllerV3_GetNotificationIDs(This,ppNotificationIDs)	\
    ( (This)->lpVtbl -> GetNotificationIDs(This,ppNotificationIDs) ) 

#define ILicenseControllerV3_GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel)	\
    ( (This)->lpVtbl -> GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel) ) 

#define ILicenseControllerV3_SetNotificationShown(This,pID,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationShown(This,pID,shownOnDay) ) 

#define ILicenseControllerV3_SetNotificationTypeShown(This,type,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationTypeShown(This,type,shownOnDay) ) 

#define ILicenseControllerV3_ResetNotificationShown(This,pID)	\
    ( (This)->lpVtbl -> ResetNotificationShown(This,pID) ) 

#define ILicenseControllerV3_ResetNotificationShownForType(This,type)	\
    ( (This)->lpVtbl -> ResetNotificationShownForType(This,type) ) 


#define ILicenseControllerV3_PowerSuspendNotification(This)	\
    ( (This)->lpVtbl -> PowerSuspendNotification(This) ) 

#define ILicenseControllerV3_PowerResumeNotification(This,wasPowerSuspendCalled)	\
    ( (This)->lpVtbl -> PowerResumeNotification(This,wasPowerSuspendCalled) ) 


#define ILicenseControllerV3_get_ComputerName(This,ppComputerName)	\
    ( (This)->lpVtbl -> get_ComputerName(This,ppComputerName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILicenseControllerV3_INTERFACE_DEFINED__ */


#ifndef __ILicenseControllerV4_INTERFACE_DEFINED__
#define __ILicenseControllerV4_INTERFACE_DEFINED__

/* interface ILicenseControllerV4 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ILicenseControllerV4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D57ACF19-30E3-4B7E-BCDD-6EEB8E57AF27")
    ILicenseControllerV4 : public ILicenseControllerV3
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementVolumePurchased( 
            /* [in] */ long pEntitlementVolumePurchased) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementVolumePurchased( 
            /* [retval][out] */ long *pEntitlementVolumePurchased) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementVolumeUsed( 
            /* [in] */ long pEntitlementVolumeUsed) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementVolumeUsed( 
            /* [retval][out] */ long *pEntitlementVolumeUsed) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ILicenseControllerV4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILicenseControllerV4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILicenseControllerV4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILicenseControllerV4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ILicenseControllerV4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ILicenseControllerV4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ILicenseControllerV4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ILicenseControllerV4 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild,
            /* [in] */ BSTR pAffiliateName,
            /* [in] */ BSTR pAffiliateID,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ILicenseControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLicenseConfig )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetLicenseConfig )( 
            ILicenseControllerV4 * This,
            /* [in] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            ILicenseControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR Key,
            /* [out] */ _ReturnCode *ReturnCodeEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Unactivate )( 
            ILicenseControllerV4 * This,
            /* [in] */ VARIANT_BOOL Uninstall);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartTrial )( 
            ILicenseControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EndTrial )( 
            ILicenseControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CanIRun )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ProductCode,
            /* [out] */ VARIANT_BOOL *Answer);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MachineId )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppMachineId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MachineId )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppMachineId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationToken )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppInstallationToken);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationToken )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppInstallationToken);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Key )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Key )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationKey )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppInstallationkey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationKey )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppInstallationkey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementStatus )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppEntitlementStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementStatus )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppEntitlementStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementEndDate )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppEntitlementEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementEndDate )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppEntitlementEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementTermType )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppEntitlementTermType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementTermType )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppEntitlementTermType);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementAutoRenew )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppEntitlementAutoRenew);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementAutoRenew )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppEntitlementAutoRenew);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GraceTermDays )( 
            ILicenseControllerV4 * This,
            /* [in] */ long pGraceTermDays);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GraceTermDays )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ long *pGraceTermDays);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementKey )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppEntitlementKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementKey )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppEntitlementKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementReferralKey )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppEntitlementReferralKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementReferralKey )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppEntitlementReferralKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionId )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppEntitlementSubscriptionId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionId )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionSecret )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppEntitlementSubscriptionSecret);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionSecret )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionSecret);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStatus )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppTrialStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStatus )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppTrialStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStartDate )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppTrialStartDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStartDate )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppTrialStartDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialEndDate )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppTrialEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialEndDate )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppTrialEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialUsed )( 
            ILicenseControllerV4 * This,
            /* [in] */ VARIANT_BOOL pTrialUsed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialUsed )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pTrialUsed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LicenseState )( 
            ILicenseControllerV4 * This,
            /* [in] */ _LicenseStateEnum pLicenseState);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LicenseState )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ _LicenseStateEnum *pLicenseState);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProductCode )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppProductCode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProductCode )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppProductCode);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LastContactDate )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppLastContactDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastContactDate )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppLastContactDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Staging )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppStaging);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Staging )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppStaging);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR EventType,
            /* [in] */ unsigned long EventCounter,
            /* [in] */ BSTR EventTag,
            /* [in] */ BSTR Tags,
            /* [in] */ BSTR OccuredAt);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementFeatures )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppEntitlementFeatures);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementFeatures )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppEntitlementFeatures);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExpirationDate )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppExpirationDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExpirationDate )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppExpirationDate);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ILicenseControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ILicenseControllerV4 * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RenewLink )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppRenewLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RenewLink )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppRenewLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Renew_Link )( 
            ILicenseControllerV4 * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Id )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InProductUpgradeLink )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InProductUpgradeLink )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OfflineUpgradeLink )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OfflineUpgradeLink )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAllowDataCollection )( 
            ILicenseControllerV4 * This,
            /* [in] */ VARIANT_BOOL bAllow);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationCount )( 
            ILicenseControllerV4 * This,
            /* [out] */ long *pNumNotifications);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationIDs )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ SAFEARRAY * *ppNotificationIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationDetails )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR pID,
            /* [out] */ _NotificationTarget *pTarget,
            /* [out] */ _NotificationType *pType,
            /* [out] */ long *pStartingDay,
            /* [out] */ long *pEndingDay,
            /* [out] */ long *pShownOnDay,
            /* [out] */ VARIANT_BOOL *pShowRepeatedly,
            /* [out] */ VARIANT_BOOL *pShowIfUiVisible,
            /* [out] */ _LicenseAlertLevel *pAlertLevel);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationShown )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR pID,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationTypeShown )( 
            ILicenseControllerV4 * This,
            /* [in] */ _NotificationType type,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShown )( 
            ILicenseControllerV4 * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShownForType )( 
            ILicenseControllerV4 * This,
            /* [in] */ _NotificationType type);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PowerSuspendNotification )( 
            ILicenseControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PowerResumeNotification )( 
            ILicenseControllerV4 * This,
            /* [in] */ VARIANT_BOOL wasPowerSuspendCalled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ComputerName )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ BSTR *ppComputerName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementVolumePurchased )( 
            ILicenseControllerV4 * This,
            /* [in] */ long pEntitlementVolumePurchased);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementVolumePurchased )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ long *pEntitlementVolumePurchased);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementVolumeUsed )( 
            ILicenseControllerV4 * This,
            /* [in] */ long pEntitlementVolumeUsed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementVolumeUsed )( 
            ILicenseControllerV4 * This,
            /* [retval][out] */ long *pEntitlementVolumeUsed);
        
        END_INTERFACE
    } ILicenseControllerV4Vtbl;

    interface ILicenseControllerV4
    {
        CONST_VTBL struct ILicenseControllerV4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILicenseControllerV4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILicenseControllerV4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILicenseControllerV4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILicenseControllerV4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ILicenseControllerV4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ILicenseControllerV4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ILicenseControllerV4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ILicenseControllerV4_Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController) ) 

#define ILicenseControllerV4_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define ILicenseControllerV4_GetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> GetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseControllerV4_SetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> SetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseControllerV4_Check(This)	\
    ( (This)->lpVtbl -> Check(This) ) 

#define ILicenseControllerV4_Activate(This,Key,ReturnCodeEnum)	\
    ( (This)->lpVtbl -> Activate(This,Key,ReturnCodeEnum) ) 

#define ILicenseControllerV4_Unactivate(This,Uninstall)	\
    ( (This)->lpVtbl -> Unactivate(This,Uninstall) ) 

#define ILicenseControllerV4_StartTrial(This)	\
    ( (This)->lpVtbl -> StartTrial(This) ) 

#define ILicenseControllerV4_EndTrial(This)	\
    ( (This)->lpVtbl -> EndTrial(This) ) 

#define ILicenseControllerV4_CanIRun(This,ProductCode,Answer)	\
    ( (This)->lpVtbl -> CanIRun(This,ProductCode,Answer) ) 

#define ILicenseControllerV4_put_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> put_MachineId(This,ppMachineId) ) 

#define ILicenseControllerV4_get_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> get_MachineId(This,ppMachineId) ) 

#define ILicenseControllerV4_put_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> put_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseControllerV4_get_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> get_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseControllerV4_put_Key(This,ppKey)	\
    ( (This)->lpVtbl -> put_Key(This,ppKey) ) 

#define ILicenseControllerV4_get_Key(This,ppKey)	\
    ( (This)->lpVtbl -> get_Key(This,ppKey) ) 

#define ILicenseControllerV4_put_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> put_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseControllerV4_get_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> get_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseControllerV4_put_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> put_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseControllerV4_get_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> get_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseControllerV4_put_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> put_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseControllerV4_get_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> get_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseControllerV4_put_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> put_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseControllerV4_get_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> get_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseControllerV4_put_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> put_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseControllerV4_get_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> get_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseControllerV4_put_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> put_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseControllerV4_get_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> get_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseControllerV4_put_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> put_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseControllerV4_get_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> get_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseControllerV4_put_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> put_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseControllerV4_get_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> get_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseControllerV4_put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseControllerV4_get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseControllerV4_put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseControllerV4_get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseControllerV4_put_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> put_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseControllerV4_get_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> get_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseControllerV4_put_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> put_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseControllerV4_get_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> get_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseControllerV4_put_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> put_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseControllerV4_get_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> get_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseControllerV4_put_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> put_TrialUsed(This,pTrialUsed) ) 

#define ILicenseControllerV4_get_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> get_TrialUsed(This,pTrialUsed) ) 

#define ILicenseControllerV4_put_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> put_LicenseState(This,pLicenseState) ) 

#define ILicenseControllerV4_get_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> get_LicenseState(This,pLicenseState) ) 

#define ILicenseControllerV4_put_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> put_ProductCode(This,ppProductCode) ) 

#define ILicenseControllerV4_get_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> get_ProductCode(This,ppProductCode) ) 

#define ILicenseControllerV4_put_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> put_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseControllerV4_get_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> get_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseControllerV4_put_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> put_Staging(This,ppStaging) ) 

#define ILicenseControllerV4_get_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> get_Staging(This,ppStaging) ) 

#define ILicenseControllerV4_SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt)	\
    ( (This)->lpVtbl -> SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt) ) 

#define ILicenseControllerV4_put_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> put_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseControllerV4_get_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> get_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseControllerV4_put_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> put_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseControllerV4_get_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> get_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseControllerV4_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define ILicenseControllerV4_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ILicenseControllerV4_put_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> put_RenewLink(This,ppRenewLink) ) 

#define ILicenseControllerV4_get_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> get_RenewLink(This,ppRenewLink) ) 

#define ILicenseControllerV4_Renew_Link(This)	\
    ( (This)->lpVtbl -> Renew_Link(This) ) 

#define ILicenseControllerV4_put_Id(This,ppId)	\
    ( (This)->lpVtbl -> put_Id(This,ppId) ) 

#define ILicenseControllerV4_get_Id(This,ppId)	\
    ( (This)->lpVtbl -> get_Id(This,ppId) ) 

#define ILicenseControllerV4_put_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV4_get_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV4_put_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV4_get_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV4_SetAllowDataCollection(This,bAllow)	\
    ( (This)->lpVtbl -> SetAllowDataCollection(This,bAllow) ) 

#define ILicenseControllerV4_GetNotificationCount(This,pNumNotifications)	\
    ( (This)->lpVtbl -> GetNotificationCount(This,pNumNotifications) ) 

#define ILicenseControllerV4_GetNotificationIDs(This,ppNotificationIDs)	\
    ( (This)->lpVtbl -> GetNotificationIDs(This,ppNotificationIDs) ) 

#define ILicenseControllerV4_GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel)	\
    ( (This)->lpVtbl -> GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel) ) 

#define ILicenseControllerV4_SetNotificationShown(This,pID,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationShown(This,pID,shownOnDay) ) 

#define ILicenseControllerV4_SetNotificationTypeShown(This,type,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationTypeShown(This,type,shownOnDay) ) 

#define ILicenseControllerV4_ResetNotificationShown(This,pID)	\
    ( (This)->lpVtbl -> ResetNotificationShown(This,pID) ) 

#define ILicenseControllerV4_ResetNotificationShownForType(This,type)	\
    ( (This)->lpVtbl -> ResetNotificationShownForType(This,type) ) 


#define ILicenseControllerV4_PowerSuspendNotification(This)	\
    ( (This)->lpVtbl -> PowerSuspendNotification(This) ) 

#define ILicenseControllerV4_PowerResumeNotification(This,wasPowerSuspendCalled)	\
    ( (This)->lpVtbl -> PowerResumeNotification(This,wasPowerSuspendCalled) ) 


#define ILicenseControllerV4_get_ComputerName(This,ppComputerName)	\
    ( (This)->lpVtbl -> get_ComputerName(This,ppComputerName) ) 


#define ILicenseControllerV4_put_EntitlementVolumePurchased(This,pEntitlementVolumePurchased)	\
    ( (This)->lpVtbl -> put_EntitlementVolumePurchased(This,pEntitlementVolumePurchased) ) 

#define ILicenseControllerV4_get_EntitlementVolumePurchased(This,pEntitlementVolumePurchased)	\
    ( (This)->lpVtbl -> get_EntitlementVolumePurchased(This,pEntitlementVolumePurchased) ) 

#define ILicenseControllerV4_put_EntitlementVolumeUsed(This,pEntitlementVolumeUsed)	\
    ( (This)->lpVtbl -> put_EntitlementVolumeUsed(This,pEntitlementVolumeUsed) ) 

#define ILicenseControllerV4_get_EntitlementVolumeUsed(This,pEntitlementVolumeUsed)	\
    ( (This)->lpVtbl -> get_EntitlementVolumeUsed(This,pEntitlementVolumeUsed) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILicenseControllerV4_INTERFACE_DEFINED__ */


#ifndef __ILicenseControllerV5_INTERFACE_DEFINED__
#define __ILicenseControllerV5_INTERFACE_DEFINED__

/* interface ILicenseControllerV5 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ILicenseControllerV5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3A7FB145-B72D-466E-A3AC-21599BBE9E8C")
    ILicenseControllerV5 : public ILicenseControllerV4
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AdditionalSeatsLink( 
            /* [in] */ BSTR ppAdditionalSeatsLink) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AdditionalSeatsLink( 
            /* [retval][out] */ BSTR *ppAdditionalSeatsLink) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementTermLength( 
            /* [in] */ long pEntitlementTermLength) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementTermLength( 
            /* [retval][out] */ long *pEntitlementTermLength) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ILicenseControllerV5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILicenseControllerV5 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILicenseControllerV5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILicenseControllerV5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ILicenseControllerV5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ILicenseControllerV5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ILicenseControllerV5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ILicenseControllerV5 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild,
            /* [in] */ BSTR pAffiliateName,
            /* [in] */ BSTR pAffiliateID,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ILicenseControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLicenseConfig )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetLicenseConfig )( 
            ILicenseControllerV5 * This,
            /* [in] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            ILicenseControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR Key,
            /* [out] */ _ReturnCode *ReturnCodeEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Unactivate )( 
            ILicenseControllerV5 * This,
            /* [in] */ VARIANT_BOOL Uninstall);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartTrial )( 
            ILicenseControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EndTrial )( 
            ILicenseControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CanIRun )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ProductCode,
            /* [out] */ VARIANT_BOOL *Answer);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MachineId )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppMachineId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MachineId )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppMachineId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationToken )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppInstallationToken);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationToken )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppInstallationToken);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Key )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Key )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationKey )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppInstallationkey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationKey )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppInstallationkey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementStatus )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppEntitlementStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementStatus )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppEntitlementStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementEndDate )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppEntitlementEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementEndDate )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppEntitlementEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementTermType )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppEntitlementTermType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementTermType )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppEntitlementTermType);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementAutoRenew )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppEntitlementAutoRenew);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementAutoRenew )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppEntitlementAutoRenew);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GraceTermDays )( 
            ILicenseControllerV5 * This,
            /* [in] */ long pGraceTermDays);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GraceTermDays )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ long *pGraceTermDays);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementKey )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppEntitlementKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementKey )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppEntitlementKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementReferralKey )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppEntitlementReferralKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementReferralKey )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppEntitlementReferralKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionId )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppEntitlementSubscriptionId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionId )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionSecret )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppEntitlementSubscriptionSecret);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionSecret )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionSecret);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStatus )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppTrialStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStatus )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppTrialStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStartDate )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppTrialStartDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStartDate )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppTrialStartDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialEndDate )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppTrialEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialEndDate )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppTrialEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialUsed )( 
            ILicenseControllerV5 * This,
            /* [in] */ VARIANT_BOOL pTrialUsed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialUsed )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pTrialUsed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LicenseState )( 
            ILicenseControllerV5 * This,
            /* [in] */ _LicenseStateEnum pLicenseState);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LicenseState )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ _LicenseStateEnum *pLicenseState);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProductCode )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppProductCode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProductCode )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppProductCode);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LastContactDate )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppLastContactDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastContactDate )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppLastContactDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Staging )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppStaging);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Staging )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppStaging);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR EventType,
            /* [in] */ unsigned long EventCounter,
            /* [in] */ BSTR EventTag,
            /* [in] */ BSTR Tags,
            /* [in] */ BSTR OccuredAt);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementFeatures )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppEntitlementFeatures);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementFeatures )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppEntitlementFeatures);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExpirationDate )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppExpirationDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExpirationDate )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppExpirationDate);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ILicenseControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ILicenseControllerV5 * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RenewLink )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppRenewLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RenewLink )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppRenewLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Renew_Link )( 
            ILicenseControllerV5 * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Id )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InProductUpgradeLink )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InProductUpgradeLink )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OfflineUpgradeLink )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OfflineUpgradeLink )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAllowDataCollection )( 
            ILicenseControllerV5 * This,
            /* [in] */ VARIANT_BOOL bAllow);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationCount )( 
            ILicenseControllerV5 * This,
            /* [out] */ long *pNumNotifications);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationIDs )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ SAFEARRAY * *ppNotificationIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationDetails )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR pID,
            /* [out] */ _NotificationTarget *pTarget,
            /* [out] */ _NotificationType *pType,
            /* [out] */ long *pStartingDay,
            /* [out] */ long *pEndingDay,
            /* [out] */ long *pShownOnDay,
            /* [out] */ VARIANT_BOOL *pShowRepeatedly,
            /* [out] */ VARIANT_BOOL *pShowIfUiVisible,
            /* [out] */ _LicenseAlertLevel *pAlertLevel);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationShown )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR pID,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationTypeShown )( 
            ILicenseControllerV5 * This,
            /* [in] */ _NotificationType type,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShown )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShownForType )( 
            ILicenseControllerV5 * This,
            /* [in] */ _NotificationType type);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PowerSuspendNotification )( 
            ILicenseControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PowerResumeNotification )( 
            ILicenseControllerV5 * This,
            /* [in] */ VARIANT_BOOL wasPowerSuspendCalled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ComputerName )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppComputerName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementVolumePurchased )( 
            ILicenseControllerV5 * This,
            /* [in] */ long pEntitlementVolumePurchased);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementVolumePurchased )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ long *pEntitlementVolumePurchased);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementVolumeUsed )( 
            ILicenseControllerV5 * This,
            /* [in] */ long pEntitlementVolumeUsed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementVolumeUsed )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ long *pEntitlementVolumeUsed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AdditionalSeatsLink )( 
            ILicenseControllerV5 * This,
            /* [in] */ BSTR ppAdditionalSeatsLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AdditionalSeatsLink )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ BSTR *ppAdditionalSeatsLink);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementTermLength )( 
            ILicenseControllerV5 * This,
            /* [in] */ long pEntitlementTermLength);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementTermLength )( 
            ILicenseControllerV5 * This,
            /* [retval][out] */ long *pEntitlementTermLength);
        
        END_INTERFACE
    } ILicenseControllerV5Vtbl;

    interface ILicenseControllerV5
    {
        CONST_VTBL struct ILicenseControllerV5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILicenseControllerV5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILicenseControllerV5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILicenseControllerV5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILicenseControllerV5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ILicenseControllerV5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ILicenseControllerV5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ILicenseControllerV5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ILicenseControllerV5_Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController) ) 

#define ILicenseControllerV5_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define ILicenseControllerV5_GetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> GetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseControllerV5_SetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> SetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseControllerV5_Check(This)	\
    ( (This)->lpVtbl -> Check(This) ) 

#define ILicenseControllerV5_Activate(This,Key,ReturnCodeEnum)	\
    ( (This)->lpVtbl -> Activate(This,Key,ReturnCodeEnum) ) 

#define ILicenseControllerV5_Unactivate(This,Uninstall)	\
    ( (This)->lpVtbl -> Unactivate(This,Uninstall) ) 

#define ILicenseControllerV5_StartTrial(This)	\
    ( (This)->lpVtbl -> StartTrial(This) ) 

#define ILicenseControllerV5_EndTrial(This)	\
    ( (This)->lpVtbl -> EndTrial(This) ) 

#define ILicenseControllerV5_CanIRun(This,ProductCode,Answer)	\
    ( (This)->lpVtbl -> CanIRun(This,ProductCode,Answer) ) 

#define ILicenseControllerV5_put_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> put_MachineId(This,ppMachineId) ) 

#define ILicenseControllerV5_get_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> get_MachineId(This,ppMachineId) ) 

#define ILicenseControllerV5_put_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> put_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseControllerV5_get_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> get_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseControllerV5_put_Key(This,ppKey)	\
    ( (This)->lpVtbl -> put_Key(This,ppKey) ) 

#define ILicenseControllerV5_get_Key(This,ppKey)	\
    ( (This)->lpVtbl -> get_Key(This,ppKey) ) 

#define ILicenseControllerV5_put_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> put_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseControllerV5_get_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> get_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseControllerV5_put_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> put_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseControllerV5_get_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> get_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseControllerV5_put_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> put_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseControllerV5_get_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> get_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseControllerV5_put_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> put_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseControllerV5_get_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> get_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseControllerV5_put_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> put_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseControllerV5_get_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> get_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseControllerV5_put_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> put_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseControllerV5_get_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> get_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseControllerV5_put_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> put_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseControllerV5_get_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> get_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseControllerV5_put_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> put_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseControllerV5_get_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> get_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseControllerV5_put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseControllerV5_get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseControllerV5_put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseControllerV5_get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseControllerV5_put_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> put_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseControllerV5_get_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> get_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseControllerV5_put_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> put_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseControllerV5_get_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> get_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseControllerV5_put_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> put_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseControllerV5_get_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> get_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseControllerV5_put_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> put_TrialUsed(This,pTrialUsed) ) 

#define ILicenseControllerV5_get_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> get_TrialUsed(This,pTrialUsed) ) 

#define ILicenseControllerV5_put_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> put_LicenseState(This,pLicenseState) ) 

#define ILicenseControllerV5_get_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> get_LicenseState(This,pLicenseState) ) 

#define ILicenseControllerV5_put_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> put_ProductCode(This,ppProductCode) ) 

#define ILicenseControllerV5_get_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> get_ProductCode(This,ppProductCode) ) 

#define ILicenseControllerV5_put_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> put_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseControllerV5_get_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> get_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseControllerV5_put_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> put_Staging(This,ppStaging) ) 

#define ILicenseControllerV5_get_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> get_Staging(This,ppStaging) ) 

#define ILicenseControllerV5_SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt)	\
    ( (This)->lpVtbl -> SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt) ) 

#define ILicenseControllerV5_put_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> put_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseControllerV5_get_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> get_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseControllerV5_put_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> put_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseControllerV5_get_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> get_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseControllerV5_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define ILicenseControllerV5_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ILicenseControllerV5_put_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> put_RenewLink(This,ppRenewLink) ) 

#define ILicenseControllerV5_get_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> get_RenewLink(This,ppRenewLink) ) 

#define ILicenseControllerV5_Renew_Link(This)	\
    ( (This)->lpVtbl -> Renew_Link(This) ) 

#define ILicenseControllerV5_put_Id(This,ppId)	\
    ( (This)->lpVtbl -> put_Id(This,ppId) ) 

#define ILicenseControllerV5_get_Id(This,ppId)	\
    ( (This)->lpVtbl -> get_Id(This,ppId) ) 

#define ILicenseControllerV5_put_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV5_get_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV5_put_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV5_get_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV5_SetAllowDataCollection(This,bAllow)	\
    ( (This)->lpVtbl -> SetAllowDataCollection(This,bAllow) ) 

#define ILicenseControllerV5_GetNotificationCount(This,pNumNotifications)	\
    ( (This)->lpVtbl -> GetNotificationCount(This,pNumNotifications) ) 

#define ILicenseControllerV5_GetNotificationIDs(This,ppNotificationIDs)	\
    ( (This)->lpVtbl -> GetNotificationIDs(This,ppNotificationIDs) ) 

#define ILicenseControllerV5_GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel)	\
    ( (This)->lpVtbl -> GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel) ) 

#define ILicenseControllerV5_SetNotificationShown(This,pID,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationShown(This,pID,shownOnDay) ) 

#define ILicenseControllerV5_SetNotificationTypeShown(This,type,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationTypeShown(This,type,shownOnDay) ) 

#define ILicenseControllerV5_ResetNotificationShown(This,pID)	\
    ( (This)->lpVtbl -> ResetNotificationShown(This,pID) ) 

#define ILicenseControllerV5_ResetNotificationShownForType(This,type)	\
    ( (This)->lpVtbl -> ResetNotificationShownForType(This,type) ) 


#define ILicenseControllerV5_PowerSuspendNotification(This)	\
    ( (This)->lpVtbl -> PowerSuspendNotification(This) ) 

#define ILicenseControllerV5_PowerResumeNotification(This,wasPowerSuspendCalled)	\
    ( (This)->lpVtbl -> PowerResumeNotification(This,wasPowerSuspendCalled) ) 


#define ILicenseControllerV5_get_ComputerName(This,ppComputerName)	\
    ( (This)->lpVtbl -> get_ComputerName(This,ppComputerName) ) 


#define ILicenseControllerV5_put_EntitlementVolumePurchased(This,pEntitlementVolumePurchased)	\
    ( (This)->lpVtbl -> put_EntitlementVolumePurchased(This,pEntitlementVolumePurchased) ) 

#define ILicenseControllerV5_get_EntitlementVolumePurchased(This,pEntitlementVolumePurchased)	\
    ( (This)->lpVtbl -> get_EntitlementVolumePurchased(This,pEntitlementVolumePurchased) ) 

#define ILicenseControllerV5_put_EntitlementVolumeUsed(This,pEntitlementVolumeUsed)	\
    ( (This)->lpVtbl -> put_EntitlementVolumeUsed(This,pEntitlementVolumeUsed) ) 

#define ILicenseControllerV5_get_EntitlementVolumeUsed(This,pEntitlementVolumeUsed)	\
    ( (This)->lpVtbl -> get_EntitlementVolumeUsed(This,pEntitlementVolumeUsed) ) 


#define ILicenseControllerV5_put_AdditionalSeatsLink(This,ppAdditionalSeatsLink)	\
    ( (This)->lpVtbl -> put_AdditionalSeatsLink(This,ppAdditionalSeatsLink) ) 

#define ILicenseControllerV5_get_AdditionalSeatsLink(This,ppAdditionalSeatsLink)	\
    ( (This)->lpVtbl -> get_AdditionalSeatsLink(This,ppAdditionalSeatsLink) ) 

#define ILicenseControllerV5_put_EntitlementTermLength(This,pEntitlementTermLength)	\
    ( (This)->lpVtbl -> put_EntitlementTermLength(This,pEntitlementTermLength) ) 

#define ILicenseControllerV5_get_EntitlementTermLength(This,pEntitlementTermLength)	\
    ( (This)->lpVtbl -> get_EntitlementTermLength(This,pEntitlementTermLength) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILicenseControllerV5_INTERFACE_DEFINED__ */


#ifndef __ILicenseControllerV6_INTERFACE_DEFINED__
#define __ILicenseControllerV6_INTERFACE_DEFINED__

/* interface ILicenseControllerV6 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ILicenseControllerV6;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B44D50B8-E459-4078-9249-3763459B2676")
    ILicenseControllerV6 : public ILicenseControllerV5
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementStartDate( 
            /* [in] */ BSTR ppEntitlementStartDate) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementStartDate( 
            /* [retval][out] */ BSTR *ppEntitlementStartDate) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementProductsCode( 
            /* [in] */ BSTR ppEntitlementProductsCode) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementProductsCode( 
            /* [retval][out] */ BSTR *ppEntitlementProductsCode) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementProductsCustomerType( 
            /* [in] */ BSTR ppEntitlementProductsCustomerType) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementProductsCustomerType( 
            /* [retval][out] */ BSTR *ppEntitlementProductsCustomerType) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EntitlementProductsName( 
            /* [in] */ BSTR ppEntitlementProductsName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntitlementProductsName( 
            /* [retval][out] */ BSTR *ppEntitlementProductsName) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ILicenseControllerV6Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILicenseControllerV6 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILicenseControllerV6 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILicenseControllerV6 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ILicenseControllerV6 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ILicenseControllerV6 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ILicenseControllerV6 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ILicenseControllerV6 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild,
            /* [in] */ BSTR pAffiliateName,
            /* [in] */ BSTR pAffiliateID,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ILicenseControllerV6 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLicenseConfig )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetLicenseConfig )( 
            ILicenseControllerV6 * This,
            /* [in] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            ILicenseControllerV6 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR Key,
            /* [out] */ _ReturnCode *ReturnCodeEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Unactivate )( 
            ILicenseControllerV6 * This,
            /* [in] */ VARIANT_BOOL Uninstall);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartTrial )( 
            ILicenseControllerV6 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EndTrial )( 
            ILicenseControllerV6 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CanIRun )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ProductCode,
            /* [out] */ VARIANT_BOOL *Answer);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MachineId )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppMachineId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MachineId )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppMachineId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationToken )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppInstallationToken);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationToken )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppInstallationToken);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Key )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Key )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationKey )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppInstallationkey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationKey )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppInstallationkey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementStatus )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppEntitlementStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementStatus )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppEntitlementStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementEndDate )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppEntitlementEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementEndDate )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppEntitlementEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementTermType )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppEntitlementTermType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementTermType )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppEntitlementTermType);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementAutoRenew )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppEntitlementAutoRenew);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementAutoRenew )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppEntitlementAutoRenew);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GraceTermDays )( 
            ILicenseControllerV6 * This,
            /* [in] */ long pGraceTermDays);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GraceTermDays )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ long *pGraceTermDays);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementKey )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppEntitlementKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementKey )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppEntitlementKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementReferralKey )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppEntitlementReferralKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementReferralKey )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppEntitlementReferralKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionId )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppEntitlementSubscriptionId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionId )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionSecret )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppEntitlementSubscriptionSecret);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionSecret )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionSecret);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStatus )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppTrialStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStatus )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppTrialStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStartDate )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppTrialStartDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStartDate )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppTrialStartDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialEndDate )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppTrialEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialEndDate )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppTrialEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialUsed )( 
            ILicenseControllerV6 * This,
            /* [in] */ VARIANT_BOOL pTrialUsed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialUsed )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ VARIANT_BOOL *pTrialUsed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LicenseState )( 
            ILicenseControllerV6 * This,
            /* [in] */ _LicenseStateEnum pLicenseState);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LicenseState )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ _LicenseStateEnum *pLicenseState);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProductCode )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppProductCode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProductCode )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppProductCode);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LastContactDate )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppLastContactDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastContactDate )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppLastContactDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Staging )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppStaging);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Staging )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppStaging);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR EventType,
            /* [in] */ unsigned long EventCounter,
            /* [in] */ BSTR EventTag,
            /* [in] */ BSTR Tags,
            /* [in] */ BSTR OccuredAt);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementFeatures )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppEntitlementFeatures);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementFeatures )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppEntitlementFeatures);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExpirationDate )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppExpirationDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExpirationDate )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppExpirationDate);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ILicenseControllerV6 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ILicenseControllerV6 * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RenewLink )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppRenewLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RenewLink )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppRenewLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Renew_Link )( 
            ILicenseControllerV6 * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Id )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InProductUpgradeLink )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InProductUpgradeLink )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OfflineUpgradeLink )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OfflineUpgradeLink )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAllowDataCollection )( 
            ILicenseControllerV6 * This,
            /* [in] */ VARIANT_BOOL bAllow);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationCount )( 
            ILicenseControllerV6 * This,
            /* [out] */ long *pNumNotifications);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationIDs )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ SAFEARRAY * *ppNotificationIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationDetails )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR pID,
            /* [out] */ _NotificationTarget *pTarget,
            /* [out] */ _NotificationType *pType,
            /* [out] */ long *pStartingDay,
            /* [out] */ long *pEndingDay,
            /* [out] */ long *pShownOnDay,
            /* [out] */ VARIANT_BOOL *pShowRepeatedly,
            /* [out] */ VARIANT_BOOL *pShowIfUiVisible,
            /* [out] */ _LicenseAlertLevel *pAlertLevel);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationShown )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR pID,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationTypeShown )( 
            ILicenseControllerV6 * This,
            /* [in] */ _NotificationType type,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShown )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShownForType )( 
            ILicenseControllerV6 * This,
            /* [in] */ _NotificationType type);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PowerSuspendNotification )( 
            ILicenseControllerV6 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PowerResumeNotification )( 
            ILicenseControllerV6 * This,
            /* [in] */ VARIANT_BOOL wasPowerSuspendCalled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ComputerName )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppComputerName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementVolumePurchased )( 
            ILicenseControllerV6 * This,
            /* [in] */ long pEntitlementVolumePurchased);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementVolumePurchased )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ long *pEntitlementVolumePurchased);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementVolumeUsed )( 
            ILicenseControllerV6 * This,
            /* [in] */ long pEntitlementVolumeUsed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementVolumeUsed )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ long *pEntitlementVolumeUsed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AdditionalSeatsLink )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppAdditionalSeatsLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AdditionalSeatsLink )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppAdditionalSeatsLink);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementTermLength )( 
            ILicenseControllerV6 * This,
            /* [in] */ long pEntitlementTermLength);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementTermLength )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ long *pEntitlementTermLength);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementStartDate )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppEntitlementStartDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementStartDate )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppEntitlementStartDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementProductsCode )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppEntitlementProductsCode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementProductsCode )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppEntitlementProductsCode);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementProductsCustomerType )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppEntitlementProductsCustomerType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementProductsCustomerType )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppEntitlementProductsCustomerType);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementProductsName )( 
            ILicenseControllerV6 * This,
            /* [in] */ BSTR ppEntitlementProductsName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementProductsName )( 
            ILicenseControllerV6 * This,
            /* [retval][out] */ BSTR *ppEntitlementProductsName);
        
        END_INTERFACE
    } ILicenseControllerV6Vtbl;

    interface ILicenseControllerV6
    {
        CONST_VTBL struct ILicenseControllerV6Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILicenseControllerV6_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILicenseControllerV6_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILicenseControllerV6_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILicenseControllerV6_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ILicenseControllerV6_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ILicenseControllerV6_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ILicenseControllerV6_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ILicenseControllerV6_Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController) ) 

#define ILicenseControllerV6_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define ILicenseControllerV6_GetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> GetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseControllerV6_SetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> SetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseControllerV6_Check(This)	\
    ( (This)->lpVtbl -> Check(This) ) 

#define ILicenseControllerV6_Activate(This,Key,ReturnCodeEnum)	\
    ( (This)->lpVtbl -> Activate(This,Key,ReturnCodeEnum) ) 

#define ILicenseControllerV6_Unactivate(This,Uninstall)	\
    ( (This)->lpVtbl -> Unactivate(This,Uninstall) ) 

#define ILicenseControllerV6_StartTrial(This)	\
    ( (This)->lpVtbl -> StartTrial(This) ) 

#define ILicenseControllerV6_EndTrial(This)	\
    ( (This)->lpVtbl -> EndTrial(This) ) 

#define ILicenseControllerV6_CanIRun(This,ProductCode,Answer)	\
    ( (This)->lpVtbl -> CanIRun(This,ProductCode,Answer) ) 

#define ILicenseControllerV6_put_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> put_MachineId(This,ppMachineId) ) 

#define ILicenseControllerV6_get_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> get_MachineId(This,ppMachineId) ) 

#define ILicenseControllerV6_put_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> put_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseControllerV6_get_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> get_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseControllerV6_put_Key(This,ppKey)	\
    ( (This)->lpVtbl -> put_Key(This,ppKey) ) 

#define ILicenseControllerV6_get_Key(This,ppKey)	\
    ( (This)->lpVtbl -> get_Key(This,ppKey) ) 

#define ILicenseControllerV6_put_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> put_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseControllerV6_get_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> get_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseControllerV6_put_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> put_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseControllerV6_get_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> get_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseControllerV6_put_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> put_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseControllerV6_get_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> get_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseControllerV6_put_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> put_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseControllerV6_get_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> get_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseControllerV6_put_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> put_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseControllerV6_get_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> get_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseControllerV6_put_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> put_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseControllerV6_get_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> get_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseControllerV6_put_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> put_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseControllerV6_get_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> get_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseControllerV6_put_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> put_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseControllerV6_get_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> get_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseControllerV6_put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseControllerV6_get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseControllerV6_put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseControllerV6_get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseControllerV6_put_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> put_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseControllerV6_get_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> get_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseControllerV6_put_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> put_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseControllerV6_get_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> get_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseControllerV6_put_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> put_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseControllerV6_get_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> get_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseControllerV6_put_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> put_TrialUsed(This,pTrialUsed) ) 

#define ILicenseControllerV6_get_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> get_TrialUsed(This,pTrialUsed) ) 

#define ILicenseControllerV6_put_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> put_LicenseState(This,pLicenseState) ) 

#define ILicenseControllerV6_get_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> get_LicenseState(This,pLicenseState) ) 

#define ILicenseControllerV6_put_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> put_ProductCode(This,ppProductCode) ) 

#define ILicenseControllerV6_get_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> get_ProductCode(This,ppProductCode) ) 

#define ILicenseControllerV6_put_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> put_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseControllerV6_get_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> get_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseControllerV6_put_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> put_Staging(This,ppStaging) ) 

#define ILicenseControllerV6_get_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> get_Staging(This,ppStaging) ) 

#define ILicenseControllerV6_SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt)	\
    ( (This)->lpVtbl -> SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt) ) 

#define ILicenseControllerV6_put_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> put_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseControllerV6_get_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> get_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseControllerV6_put_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> put_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseControllerV6_get_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> get_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseControllerV6_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define ILicenseControllerV6_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ILicenseControllerV6_put_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> put_RenewLink(This,ppRenewLink) ) 

#define ILicenseControllerV6_get_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> get_RenewLink(This,ppRenewLink) ) 

#define ILicenseControllerV6_Renew_Link(This)	\
    ( (This)->lpVtbl -> Renew_Link(This) ) 

#define ILicenseControllerV6_put_Id(This,ppId)	\
    ( (This)->lpVtbl -> put_Id(This,ppId) ) 

#define ILicenseControllerV6_get_Id(This,ppId)	\
    ( (This)->lpVtbl -> get_Id(This,ppId) ) 

#define ILicenseControllerV6_put_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV6_get_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV6_put_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV6_get_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV6_SetAllowDataCollection(This,bAllow)	\
    ( (This)->lpVtbl -> SetAllowDataCollection(This,bAllow) ) 

#define ILicenseControllerV6_GetNotificationCount(This,pNumNotifications)	\
    ( (This)->lpVtbl -> GetNotificationCount(This,pNumNotifications) ) 

#define ILicenseControllerV6_GetNotificationIDs(This,ppNotificationIDs)	\
    ( (This)->lpVtbl -> GetNotificationIDs(This,ppNotificationIDs) ) 

#define ILicenseControllerV6_GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel)	\
    ( (This)->lpVtbl -> GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel) ) 

#define ILicenseControllerV6_SetNotificationShown(This,pID,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationShown(This,pID,shownOnDay) ) 

#define ILicenseControllerV6_SetNotificationTypeShown(This,type,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationTypeShown(This,type,shownOnDay) ) 

#define ILicenseControllerV6_ResetNotificationShown(This,pID)	\
    ( (This)->lpVtbl -> ResetNotificationShown(This,pID) ) 

#define ILicenseControllerV6_ResetNotificationShownForType(This,type)	\
    ( (This)->lpVtbl -> ResetNotificationShownForType(This,type) ) 


#define ILicenseControllerV6_PowerSuspendNotification(This)	\
    ( (This)->lpVtbl -> PowerSuspendNotification(This) ) 

#define ILicenseControllerV6_PowerResumeNotification(This,wasPowerSuspendCalled)	\
    ( (This)->lpVtbl -> PowerResumeNotification(This,wasPowerSuspendCalled) ) 


#define ILicenseControllerV6_get_ComputerName(This,ppComputerName)	\
    ( (This)->lpVtbl -> get_ComputerName(This,ppComputerName) ) 


#define ILicenseControllerV6_put_EntitlementVolumePurchased(This,pEntitlementVolumePurchased)	\
    ( (This)->lpVtbl -> put_EntitlementVolumePurchased(This,pEntitlementVolumePurchased) ) 

#define ILicenseControllerV6_get_EntitlementVolumePurchased(This,pEntitlementVolumePurchased)	\
    ( (This)->lpVtbl -> get_EntitlementVolumePurchased(This,pEntitlementVolumePurchased) ) 

#define ILicenseControllerV6_put_EntitlementVolumeUsed(This,pEntitlementVolumeUsed)	\
    ( (This)->lpVtbl -> put_EntitlementVolumeUsed(This,pEntitlementVolumeUsed) ) 

#define ILicenseControllerV6_get_EntitlementVolumeUsed(This,pEntitlementVolumeUsed)	\
    ( (This)->lpVtbl -> get_EntitlementVolumeUsed(This,pEntitlementVolumeUsed) ) 


#define ILicenseControllerV6_put_AdditionalSeatsLink(This,ppAdditionalSeatsLink)	\
    ( (This)->lpVtbl -> put_AdditionalSeatsLink(This,ppAdditionalSeatsLink) ) 

#define ILicenseControllerV6_get_AdditionalSeatsLink(This,ppAdditionalSeatsLink)	\
    ( (This)->lpVtbl -> get_AdditionalSeatsLink(This,ppAdditionalSeatsLink) ) 

#define ILicenseControllerV6_put_EntitlementTermLength(This,pEntitlementTermLength)	\
    ( (This)->lpVtbl -> put_EntitlementTermLength(This,pEntitlementTermLength) ) 

#define ILicenseControllerV6_get_EntitlementTermLength(This,pEntitlementTermLength)	\
    ( (This)->lpVtbl -> get_EntitlementTermLength(This,pEntitlementTermLength) ) 


#define ILicenseControllerV6_put_EntitlementStartDate(This,ppEntitlementStartDate)	\
    ( (This)->lpVtbl -> put_EntitlementStartDate(This,ppEntitlementStartDate) ) 

#define ILicenseControllerV6_get_EntitlementStartDate(This,ppEntitlementStartDate)	\
    ( (This)->lpVtbl -> get_EntitlementStartDate(This,ppEntitlementStartDate) ) 

#define ILicenseControllerV6_put_EntitlementProductsCode(This,ppEntitlementProductsCode)	\
    ( (This)->lpVtbl -> put_EntitlementProductsCode(This,ppEntitlementProductsCode) ) 

#define ILicenseControllerV6_get_EntitlementProductsCode(This,ppEntitlementProductsCode)	\
    ( (This)->lpVtbl -> get_EntitlementProductsCode(This,ppEntitlementProductsCode) ) 

#define ILicenseControllerV6_put_EntitlementProductsCustomerType(This,ppEntitlementProductsCustomerType)	\
    ( (This)->lpVtbl -> put_EntitlementProductsCustomerType(This,ppEntitlementProductsCustomerType) ) 

#define ILicenseControllerV6_get_EntitlementProductsCustomerType(This,ppEntitlementProductsCustomerType)	\
    ( (This)->lpVtbl -> get_EntitlementProductsCustomerType(This,ppEntitlementProductsCustomerType) ) 

#define ILicenseControllerV6_put_EntitlementProductsName(This,ppEntitlementProductsName)	\
    ( (This)->lpVtbl -> put_EntitlementProductsName(This,ppEntitlementProductsName) ) 

#define ILicenseControllerV6_get_EntitlementProductsName(This,ppEntitlementProductsName)	\
    ( (This)->lpVtbl -> get_EntitlementProductsName(This,ppEntitlementProductsName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILicenseControllerV6_INTERFACE_DEFINED__ */


#ifndef __ILicenseControllerV7_INTERFACE_DEFINED__
#define __ILicenseControllerV7_INTERFACE_DEFINED__

/* interface ILicenseControllerV7 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ILicenseControllerV7;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E32ABD9A-1CBD-44A5-8A62-55D347D3C4F0")
    ILicenseControllerV7 : public ILicenseControllerV6
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_BrowserExtensionTrialGiven( 
            /* [retval][out] */ VARIANT_BOOL *pTrialGiven) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE TrialReset( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ILicenseControllerV7Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILicenseControllerV7 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILicenseControllerV7 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILicenseControllerV7 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ILicenseControllerV7 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ILicenseControllerV7 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ILicenseControllerV7 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ILicenseControllerV7 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild,
            /* [in] */ BSTR pAffiliateName,
            /* [in] */ BSTR pAffiliateID,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ILicenseControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLicenseConfig )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetLicenseConfig )( 
            ILicenseControllerV7 * This,
            /* [in] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            ILicenseControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR Key,
            /* [out] */ _ReturnCode *ReturnCodeEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Unactivate )( 
            ILicenseControllerV7 * This,
            /* [in] */ VARIANT_BOOL Uninstall);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartTrial )( 
            ILicenseControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EndTrial )( 
            ILicenseControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CanIRun )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ProductCode,
            /* [out] */ VARIANT_BOOL *Answer);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MachineId )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppMachineId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MachineId )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppMachineId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationToken )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppInstallationToken);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationToken )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppInstallationToken);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Key )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Key )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationKey )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppInstallationkey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationKey )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppInstallationkey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementStatus )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppEntitlementStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementStatus )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppEntitlementStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementEndDate )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppEntitlementEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementEndDate )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppEntitlementEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementTermType )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppEntitlementTermType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementTermType )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppEntitlementTermType);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementAutoRenew )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppEntitlementAutoRenew);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementAutoRenew )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppEntitlementAutoRenew);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GraceTermDays )( 
            ILicenseControllerV7 * This,
            /* [in] */ long pGraceTermDays);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GraceTermDays )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ long *pGraceTermDays);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementKey )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppEntitlementKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementKey )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppEntitlementKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementReferralKey )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppEntitlementReferralKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementReferralKey )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppEntitlementReferralKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionId )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppEntitlementSubscriptionId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionId )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionSecret )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppEntitlementSubscriptionSecret);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionSecret )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionSecret);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStatus )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppTrialStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStatus )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppTrialStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStartDate )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppTrialStartDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStartDate )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppTrialStartDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialEndDate )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppTrialEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialEndDate )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppTrialEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialUsed )( 
            ILicenseControllerV7 * This,
            /* [in] */ VARIANT_BOOL pTrialUsed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialUsed )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ VARIANT_BOOL *pTrialUsed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LicenseState )( 
            ILicenseControllerV7 * This,
            /* [in] */ _LicenseStateEnum pLicenseState);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LicenseState )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ _LicenseStateEnum *pLicenseState);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProductCode )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppProductCode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProductCode )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppProductCode);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LastContactDate )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppLastContactDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastContactDate )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppLastContactDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Staging )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppStaging);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Staging )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppStaging);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR EventType,
            /* [in] */ unsigned long EventCounter,
            /* [in] */ BSTR EventTag,
            /* [in] */ BSTR Tags,
            /* [in] */ BSTR OccuredAt);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementFeatures )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppEntitlementFeatures);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementFeatures )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppEntitlementFeatures);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExpirationDate )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppExpirationDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExpirationDate )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppExpirationDate);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ILicenseControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ILicenseControllerV7 * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RenewLink )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppRenewLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RenewLink )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppRenewLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Renew_Link )( 
            ILicenseControllerV7 * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Id )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InProductUpgradeLink )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InProductUpgradeLink )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OfflineUpgradeLink )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OfflineUpgradeLink )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAllowDataCollection )( 
            ILicenseControllerV7 * This,
            /* [in] */ VARIANT_BOOL bAllow);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationCount )( 
            ILicenseControllerV7 * This,
            /* [out] */ long *pNumNotifications);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationIDs )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ SAFEARRAY * *ppNotificationIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationDetails )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR pID,
            /* [out] */ _NotificationTarget *pTarget,
            /* [out] */ _NotificationType *pType,
            /* [out] */ long *pStartingDay,
            /* [out] */ long *pEndingDay,
            /* [out] */ long *pShownOnDay,
            /* [out] */ VARIANT_BOOL *pShowRepeatedly,
            /* [out] */ VARIANT_BOOL *pShowIfUiVisible,
            /* [out] */ _LicenseAlertLevel *pAlertLevel);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationShown )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR pID,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationTypeShown )( 
            ILicenseControllerV7 * This,
            /* [in] */ _NotificationType type,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShown )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShownForType )( 
            ILicenseControllerV7 * This,
            /* [in] */ _NotificationType type);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PowerSuspendNotification )( 
            ILicenseControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PowerResumeNotification )( 
            ILicenseControllerV7 * This,
            /* [in] */ VARIANT_BOOL wasPowerSuspendCalled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ComputerName )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppComputerName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementVolumePurchased )( 
            ILicenseControllerV7 * This,
            /* [in] */ long pEntitlementVolumePurchased);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementVolumePurchased )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ long *pEntitlementVolumePurchased);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementVolumeUsed )( 
            ILicenseControllerV7 * This,
            /* [in] */ long pEntitlementVolumeUsed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementVolumeUsed )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ long *pEntitlementVolumeUsed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AdditionalSeatsLink )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppAdditionalSeatsLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AdditionalSeatsLink )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppAdditionalSeatsLink);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementTermLength )( 
            ILicenseControllerV7 * This,
            /* [in] */ long pEntitlementTermLength);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementTermLength )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ long *pEntitlementTermLength);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementStartDate )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppEntitlementStartDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementStartDate )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppEntitlementStartDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementProductsCode )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppEntitlementProductsCode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementProductsCode )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppEntitlementProductsCode);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementProductsCustomerType )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppEntitlementProductsCustomerType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementProductsCustomerType )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppEntitlementProductsCustomerType);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementProductsName )( 
            ILicenseControllerV7 * This,
            /* [in] */ BSTR ppEntitlementProductsName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementProductsName )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ BSTR *ppEntitlementProductsName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserExtensionTrialGiven )( 
            ILicenseControllerV7 * This,
            /* [retval][out] */ VARIANT_BOOL *pTrialGiven);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *TrialReset )( 
            ILicenseControllerV7 * This);
        
        END_INTERFACE
    } ILicenseControllerV7Vtbl;

    interface ILicenseControllerV7
    {
        CONST_VTBL struct ILicenseControllerV7Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILicenseControllerV7_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILicenseControllerV7_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILicenseControllerV7_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILicenseControllerV7_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ILicenseControllerV7_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ILicenseControllerV7_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ILicenseControllerV7_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ILicenseControllerV7_Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController) ) 

#define ILicenseControllerV7_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define ILicenseControllerV7_GetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> GetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseControllerV7_SetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> SetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseControllerV7_Check(This)	\
    ( (This)->lpVtbl -> Check(This) ) 

#define ILicenseControllerV7_Activate(This,Key,ReturnCodeEnum)	\
    ( (This)->lpVtbl -> Activate(This,Key,ReturnCodeEnum) ) 

#define ILicenseControllerV7_Unactivate(This,Uninstall)	\
    ( (This)->lpVtbl -> Unactivate(This,Uninstall) ) 

#define ILicenseControllerV7_StartTrial(This)	\
    ( (This)->lpVtbl -> StartTrial(This) ) 

#define ILicenseControllerV7_EndTrial(This)	\
    ( (This)->lpVtbl -> EndTrial(This) ) 

#define ILicenseControllerV7_CanIRun(This,ProductCode,Answer)	\
    ( (This)->lpVtbl -> CanIRun(This,ProductCode,Answer) ) 

#define ILicenseControllerV7_put_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> put_MachineId(This,ppMachineId) ) 

#define ILicenseControllerV7_get_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> get_MachineId(This,ppMachineId) ) 

#define ILicenseControllerV7_put_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> put_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseControllerV7_get_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> get_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseControllerV7_put_Key(This,ppKey)	\
    ( (This)->lpVtbl -> put_Key(This,ppKey) ) 

#define ILicenseControllerV7_get_Key(This,ppKey)	\
    ( (This)->lpVtbl -> get_Key(This,ppKey) ) 

#define ILicenseControllerV7_put_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> put_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseControllerV7_get_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> get_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseControllerV7_put_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> put_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseControllerV7_get_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> get_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseControllerV7_put_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> put_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseControllerV7_get_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> get_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseControllerV7_put_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> put_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseControllerV7_get_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> get_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseControllerV7_put_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> put_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseControllerV7_get_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> get_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseControllerV7_put_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> put_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseControllerV7_get_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> get_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseControllerV7_put_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> put_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseControllerV7_get_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> get_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseControllerV7_put_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> put_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseControllerV7_get_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> get_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseControllerV7_put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseControllerV7_get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseControllerV7_put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseControllerV7_get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseControllerV7_put_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> put_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseControllerV7_get_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> get_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseControllerV7_put_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> put_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseControllerV7_get_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> get_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseControllerV7_put_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> put_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseControllerV7_get_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> get_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseControllerV7_put_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> put_TrialUsed(This,pTrialUsed) ) 

#define ILicenseControllerV7_get_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> get_TrialUsed(This,pTrialUsed) ) 

#define ILicenseControllerV7_put_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> put_LicenseState(This,pLicenseState) ) 

#define ILicenseControllerV7_get_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> get_LicenseState(This,pLicenseState) ) 

#define ILicenseControllerV7_put_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> put_ProductCode(This,ppProductCode) ) 

#define ILicenseControllerV7_get_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> get_ProductCode(This,ppProductCode) ) 

#define ILicenseControllerV7_put_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> put_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseControllerV7_get_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> get_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseControllerV7_put_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> put_Staging(This,ppStaging) ) 

#define ILicenseControllerV7_get_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> get_Staging(This,ppStaging) ) 

#define ILicenseControllerV7_SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt)	\
    ( (This)->lpVtbl -> SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt) ) 

#define ILicenseControllerV7_put_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> put_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseControllerV7_get_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> get_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseControllerV7_put_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> put_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseControllerV7_get_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> get_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseControllerV7_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define ILicenseControllerV7_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ILicenseControllerV7_put_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> put_RenewLink(This,ppRenewLink) ) 

#define ILicenseControllerV7_get_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> get_RenewLink(This,ppRenewLink) ) 

#define ILicenseControllerV7_Renew_Link(This)	\
    ( (This)->lpVtbl -> Renew_Link(This) ) 

#define ILicenseControllerV7_put_Id(This,ppId)	\
    ( (This)->lpVtbl -> put_Id(This,ppId) ) 

#define ILicenseControllerV7_get_Id(This,ppId)	\
    ( (This)->lpVtbl -> get_Id(This,ppId) ) 

#define ILicenseControllerV7_put_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV7_get_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV7_put_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV7_get_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV7_SetAllowDataCollection(This,bAllow)	\
    ( (This)->lpVtbl -> SetAllowDataCollection(This,bAllow) ) 

#define ILicenseControllerV7_GetNotificationCount(This,pNumNotifications)	\
    ( (This)->lpVtbl -> GetNotificationCount(This,pNumNotifications) ) 

#define ILicenseControllerV7_GetNotificationIDs(This,ppNotificationIDs)	\
    ( (This)->lpVtbl -> GetNotificationIDs(This,ppNotificationIDs) ) 

#define ILicenseControllerV7_GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel)	\
    ( (This)->lpVtbl -> GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel) ) 

#define ILicenseControllerV7_SetNotificationShown(This,pID,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationShown(This,pID,shownOnDay) ) 

#define ILicenseControllerV7_SetNotificationTypeShown(This,type,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationTypeShown(This,type,shownOnDay) ) 

#define ILicenseControllerV7_ResetNotificationShown(This,pID)	\
    ( (This)->lpVtbl -> ResetNotificationShown(This,pID) ) 

#define ILicenseControllerV7_ResetNotificationShownForType(This,type)	\
    ( (This)->lpVtbl -> ResetNotificationShownForType(This,type) ) 


#define ILicenseControllerV7_PowerSuspendNotification(This)	\
    ( (This)->lpVtbl -> PowerSuspendNotification(This) ) 

#define ILicenseControllerV7_PowerResumeNotification(This,wasPowerSuspendCalled)	\
    ( (This)->lpVtbl -> PowerResumeNotification(This,wasPowerSuspendCalled) ) 


#define ILicenseControllerV7_get_ComputerName(This,ppComputerName)	\
    ( (This)->lpVtbl -> get_ComputerName(This,ppComputerName) ) 


#define ILicenseControllerV7_put_EntitlementVolumePurchased(This,pEntitlementVolumePurchased)	\
    ( (This)->lpVtbl -> put_EntitlementVolumePurchased(This,pEntitlementVolumePurchased) ) 

#define ILicenseControllerV7_get_EntitlementVolumePurchased(This,pEntitlementVolumePurchased)	\
    ( (This)->lpVtbl -> get_EntitlementVolumePurchased(This,pEntitlementVolumePurchased) ) 

#define ILicenseControllerV7_put_EntitlementVolumeUsed(This,pEntitlementVolumeUsed)	\
    ( (This)->lpVtbl -> put_EntitlementVolumeUsed(This,pEntitlementVolumeUsed) ) 

#define ILicenseControllerV7_get_EntitlementVolumeUsed(This,pEntitlementVolumeUsed)	\
    ( (This)->lpVtbl -> get_EntitlementVolumeUsed(This,pEntitlementVolumeUsed) ) 


#define ILicenseControllerV7_put_AdditionalSeatsLink(This,ppAdditionalSeatsLink)	\
    ( (This)->lpVtbl -> put_AdditionalSeatsLink(This,ppAdditionalSeatsLink) ) 

#define ILicenseControllerV7_get_AdditionalSeatsLink(This,ppAdditionalSeatsLink)	\
    ( (This)->lpVtbl -> get_AdditionalSeatsLink(This,ppAdditionalSeatsLink) ) 

#define ILicenseControllerV7_put_EntitlementTermLength(This,pEntitlementTermLength)	\
    ( (This)->lpVtbl -> put_EntitlementTermLength(This,pEntitlementTermLength) ) 

#define ILicenseControllerV7_get_EntitlementTermLength(This,pEntitlementTermLength)	\
    ( (This)->lpVtbl -> get_EntitlementTermLength(This,pEntitlementTermLength) ) 


#define ILicenseControllerV7_put_EntitlementStartDate(This,ppEntitlementStartDate)	\
    ( (This)->lpVtbl -> put_EntitlementStartDate(This,ppEntitlementStartDate) ) 

#define ILicenseControllerV7_get_EntitlementStartDate(This,ppEntitlementStartDate)	\
    ( (This)->lpVtbl -> get_EntitlementStartDate(This,ppEntitlementStartDate) ) 

#define ILicenseControllerV7_put_EntitlementProductsCode(This,ppEntitlementProductsCode)	\
    ( (This)->lpVtbl -> put_EntitlementProductsCode(This,ppEntitlementProductsCode) ) 

#define ILicenseControllerV7_get_EntitlementProductsCode(This,ppEntitlementProductsCode)	\
    ( (This)->lpVtbl -> get_EntitlementProductsCode(This,ppEntitlementProductsCode) ) 

#define ILicenseControllerV7_put_EntitlementProductsCustomerType(This,ppEntitlementProductsCustomerType)	\
    ( (This)->lpVtbl -> put_EntitlementProductsCustomerType(This,ppEntitlementProductsCustomerType) ) 

#define ILicenseControllerV7_get_EntitlementProductsCustomerType(This,ppEntitlementProductsCustomerType)	\
    ( (This)->lpVtbl -> get_EntitlementProductsCustomerType(This,ppEntitlementProductsCustomerType) ) 

#define ILicenseControllerV7_put_EntitlementProductsName(This,ppEntitlementProductsName)	\
    ( (This)->lpVtbl -> put_EntitlementProductsName(This,ppEntitlementProductsName) ) 

#define ILicenseControllerV7_get_EntitlementProductsName(This,ppEntitlementProductsName)	\
    ( (This)->lpVtbl -> get_EntitlementProductsName(This,ppEntitlementProductsName) ) 


#define ILicenseControllerV7_get_BrowserExtensionTrialGiven(This,pTrialGiven)	\
    ( (This)->lpVtbl -> get_BrowserExtensionTrialGiven(This,pTrialGiven) ) 

#define ILicenseControllerV7_TrialReset(This)	\
    ( (This)->lpVtbl -> TrialReset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILicenseControllerV7_INTERFACE_DEFINED__ */


#ifndef __ILicenseControllerV8_INTERFACE_DEFINED__
#define __ILicenseControllerV8_INTERFACE_DEFINED__

/* interface ILicenseControllerV8 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ILicenseControllerV8;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("44ACF635-5275-4730-95E5-03E4D192D8C8")
    ILicenseControllerV8 : public ILicenseControllerV7
    {
    public:
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_LastLicensingError( 
            /* [in] */ long plastLicensingError) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_LastLicensingError( 
            /* [retval][out] */ long *plastLicensingError) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ILicenseControllerV8Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILicenseControllerV8 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILicenseControllerV8 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILicenseControllerV8 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ILicenseControllerV8 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ILicenseControllerV8 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ILicenseControllerV8 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ILicenseControllerV8 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR pImplDLLPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild,
            /* [in] */ BSTR pAffiliateName,
            /* [in] */ BSTR pAffiliateID,
            /* [in] */ /* external definition not present */ IPoliciesController *pPoliciesController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ILicenseControllerV8 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLicenseConfig )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetLicenseConfig )( 
            ILicenseControllerV8 * This,
            /* [in] */ LicenseConfig *pLicenseConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            ILicenseControllerV8 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR Key,
            /* [out] */ _ReturnCode *ReturnCodeEnum);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Unactivate )( 
            ILicenseControllerV8 * This,
            /* [in] */ VARIANT_BOOL Uninstall);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartTrial )( 
            ILicenseControllerV8 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EndTrial )( 
            ILicenseControllerV8 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CanIRun )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ProductCode,
            /* [out] */ VARIANT_BOOL *Answer);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MachineId )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppMachineId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MachineId )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppMachineId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationToken )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppInstallationToken);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationToken )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppInstallationToken);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Key )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Key )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InstallationKey )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppInstallationkey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InstallationKey )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppInstallationkey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementStatus )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppEntitlementStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementStatus )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppEntitlementStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementEndDate )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppEntitlementEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementEndDate )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppEntitlementEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementTermType )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppEntitlementTermType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementTermType )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppEntitlementTermType);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementAutoRenew )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppEntitlementAutoRenew);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementAutoRenew )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppEntitlementAutoRenew);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_GraceTermDays )( 
            ILicenseControllerV8 * This,
            /* [in] */ long pGraceTermDays);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GraceTermDays )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ long *pGraceTermDays);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementKey )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppEntitlementKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementKey )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppEntitlementKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementReferralKey )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppEntitlementReferralKey);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementReferralKey )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppEntitlementReferralKey);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionId )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppEntitlementSubscriptionId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionId )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementSubscriptionSecret )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppEntitlementSubscriptionSecret);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementSubscriptionSecret )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppEntitlementSubscriptionSecret);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStatus )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppTrialStatus);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStatus )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppTrialStatus);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialStartDate )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppTrialStartDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialStartDate )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppTrialStartDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialEndDate )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppTrialEndDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialEndDate )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppTrialEndDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrialUsed )( 
            ILicenseControllerV8 * This,
            /* [in] */ VARIANT_BOOL pTrialUsed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrialUsed )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ VARIANT_BOOL *pTrialUsed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LicenseState )( 
            ILicenseControllerV8 * This,
            /* [in] */ _LicenseStateEnum pLicenseState);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LicenseState )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ _LicenseStateEnum *pLicenseState);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProductCode )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppProductCode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProductCode )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppProductCode);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LastContactDate )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppLastContactDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastContactDate )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppLastContactDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Staging )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppStaging);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Staging )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppStaging);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SendEvent )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR EventType,
            /* [in] */ unsigned long EventCounter,
            /* [in] */ BSTR EventTag,
            /* [in] */ BSTR Tags,
            /* [in] */ BSTR OccuredAt);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementFeatures )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppEntitlementFeatures);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementFeatures )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppEntitlementFeatures);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExpirationDate )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppExpirationDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExpirationDate )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppExpirationDate);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ILicenseControllerV8 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ILicenseControllerV8 * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RenewLink )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppRenewLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RenewLink )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppRenewLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Renew_Link )( 
            ILicenseControllerV8 * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Id )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppId);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Id )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppId);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InProductUpgradeLink )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InProductUpgradeLink )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_OfflineUpgradeLink )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppUpgradeLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OfflineUpgradeLink )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppUpgradeLink);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetAllowDataCollection )( 
            ILicenseControllerV8 * This,
            /* [in] */ VARIANT_BOOL bAllow);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationCount )( 
            ILicenseControllerV8 * This,
            /* [out] */ long *pNumNotifications);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationIDs )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ SAFEARRAY * *ppNotificationIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNotificationDetails )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR pID,
            /* [out] */ _NotificationTarget *pTarget,
            /* [out] */ _NotificationType *pType,
            /* [out] */ long *pStartingDay,
            /* [out] */ long *pEndingDay,
            /* [out] */ long *pShownOnDay,
            /* [out] */ VARIANT_BOOL *pShowRepeatedly,
            /* [out] */ VARIANT_BOOL *pShowIfUiVisible,
            /* [out] */ _LicenseAlertLevel *pAlertLevel);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationShown )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR pID,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetNotificationTypeShown )( 
            ILicenseControllerV8 * This,
            /* [in] */ _NotificationType type,
            /* [in] */ long shownOnDay);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShown )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ResetNotificationShownForType )( 
            ILicenseControllerV8 * This,
            /* [in] */ _NotificationType type);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PowerSuspendNotification )( 
            ILicenseControllerV8 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PowerResumeNotification )( 
            ILicenseControllerV8 * This,
            /* [in] */ VARIANT_BOOL wasPowerSuspendCalled);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ComputerName )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppComputerName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementVolumePurchased )( 
            ILicenseControllerV8 * This,
            /* [in] */ long pEntitlementVolumePurchased);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementVolumePurchased )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ long *pEntitlementVolumePurchased);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementVolumeUsed )( 
            ILicenseControllerV8 * This,
            /* [in] */ long pEntitlementVolumeUsed);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementVolumeUsed )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ long *pEntitlementVolumeUsed);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AdditionalSeatsLink )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppAdditionalSeatsLink);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AdditionalSeatsLink )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppAdditionalSeatsLink);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementTermLength )( 
            ILicenseControllerV8 * This,
            /* [in] */ long pEntitlementTermLength);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementTermLength )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ long *pEntitlementTermLength);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementStartDate )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppEntitlementStartDate);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementStartDate )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppEntitlementStartDate);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementProductsCode )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppEntitlementProductsCode);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementProductsCode )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppEntitlementProductsCode);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementProductsCustomerType )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppEntitlementProductsCustomerType);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementProductsCustomerType )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppEntitlementProductsCustomerType);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EntitlementProductsName )( 
            ILicenseControllerV8 * This,
            /* [in] */ BSTR ppEntitlementProductsName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntitlementProductsName )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ BSTR *ppEntitlementProductsName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_BrowserExtensionTrialGiven )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ VARIANT_BOOL *pTrialGiven);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *TrialReset )( 
            ILicenseControllerV8 * This);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_LastLicensingError )( 
            ILicenseControllerV8 * This,
            /* [in] */ long plastLicensingError);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LastLicensingError )( 
            ILicenseControllerV8 * This,
            /* [retval][out] */ long *plastLicensingError);
        
        END_INTERFACE
    } ILicenseControllerV8Vtbl;

    interface ILicenseControllerV8
    {
        CONST_VTBL struct ILicenseControllerV8Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILicenseControllerV8_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILicenseControllerV8_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILicenseControllerV8_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILicenseControllerV8_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ILicenseControllerV8_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ILicenseControllerV8_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ILicenseControllerV8_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ILicenseControllerV8_Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController)	\
    ( (This)->lpVtbl -> Start(This,pImplDLLPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild,pAffiliateName,pAffiliateID,pPoliciesController) ) 

#define ILicenseControllerV8_Stop(This)	\
    ( (This)->lpVtbl -> Stop(This) ) 

#define ILicenseControllerV8_GetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> GetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseControllerV8_SetLicenseConfig(This,pLicenseConfig)	\
    ( (This)->lpVtbl -> SetLicenseConfig(This,pLicenseConfig) ) 

#define ILicenseControllerV8_Check(This)	\
    ( (This)->lpVtbl -> Check(This) ) 

#define ILicenseControllerV8_Activate(This,Key,ReturnCodeEnum)	\
    ( (This)->lpVtbl -> Activate(This,Key,ReturnCodeEnum) ) 

#define ILicenseControllerV8_Unactivate(This,Uninstall)	\
    ( (This)->lpVtbl -> Unactivate(This,Uninstall) ) 

#define ILicenseControllerV8_StartTrial(This)	\
    ( (This)->lpVtbl -> StartTrial(This) ) 

#define ILicenseControllerV8_EndTrial(This)	\
    ( (This)->lpVtbl -> EndTrial(This) ) 

#define ILicenseControllerV8_CanIRun(This,ProductCode,Answer)	\
    ( (This)->lpVtbl -> CanIRun(This,ProductCode,Answer) ) 

#define ILicenseControllerV8_put_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> put_MachineId(This,ppMachineId) ) 

#define ILicenseControllerV8_get_MachineId(This,ppMachineId)	\
    ( (This)->lpVtbl -> get_MachineId(This,ppMachineId) ) 

#define ILicenseControllerV8_put_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> put_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseControllerV8_get_InstallationToken(This,ppInstallationToken)	\
    ( (This)->lpVtbl -> get_InstallationToken(This,ppInstallationToken) ) 

#define ILicenseControllerV8_put_Key(This,ppKey)	\
    ( (This)->lpVtbl -> put_Key(This,ppKey) ) 

#define ILicenseControllerV8_get_Key(This,ppKey)	\
    ( (This)->lpVtbl -> get_Key(This,ppKey) ) 

#define ILicenseControllerV8_put_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> put_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseControllerV8_get_InstallationKey(This,ppInstallationkey)	\
    ( (This)->lpVtbl -> get_InstallationKey(This,ppInstallationkey) ) 

#define ILicenseControllerV8_put_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> put_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseControllerV8_get_EntitlementStatus(This,ppEntitlementStatus)	\
    ( (This)->lpVtbl -> get_EntitlementStatus(This,ppEntitlementStatus) ) 

#define ILicenseControllerV8_put_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> put_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseControllerV8_get_EntitlementEndDate(This,ppEntitlementEndDate)	\
    ( (This)->lpVtbl -> get_EntitlementEndDate(This,ppEntitlementEndDate) ) 

#define ILicenseControllerV8_put_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> put_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseControllerV8_get_EntitlementTermType(This,ppEntitlementTermType)	\
    ( (This)->lpVtbl -> get_EntitlementTermType(This,ppEntitlementTermType) ) 

#define ILicenseControllerV8_put_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> put_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseControllerV8_get_EntitlementAutoRenew(This,ppEntitlementAutoRenew)	\
    ( (This)->lpVtbl -> get_EntitlementAutoRenew(This,ppEntitlementAutoRenew) ) 

#define ILicenseControllerV8_put_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> put_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseControllerV8_get_GraceTermDays(This,pGraceTermDays)	\
    ( (This)->lpVtbl -> get_GraceTermDays(This,pGraceTermDays) ) 

#define ILicenseControllerV8_put_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> put_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseControllerV8_get_EntitlementKey(This,ppEntitlementKey)	\
    ( (This)->lpVtbl -> get_EntitlementKey(This,ppEntitlementKey) ) 

#define ILicenseControllerV8_put_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> put_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseControllerV8_get_EntitlementReferralKey(This,ppEntitlementReferralKey)	\
    ( (This)->lpVtbl -> get_EntitlementReferralKey(This,ppEntitlementReferralKey) ) 

#define ILicenseControllerV8_put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseControllerV8_get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionId(This,ppEntitlementSubscriptionId) ) 

#define ILicenseControllerV8_put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> put_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseControllerV8_get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret)	\
    ( (This)->lpVtbl -> get_EntitlementSubscriptionSecret(This,ppEntitlementSubscriptionSecret) ) 

#define ILicenseControllerV8_put_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> put_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseControllerV8_get_TrialStatus(This,ppTrialStatus)	\
    ( (This)->lpVtbl -> get_TrialStatus(This,ppTrialStatus) ) 

#define ILicenseControllerV8_put_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> put_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseControllerV8_get_TrialStartDate(This,ppTrialStartDate)	\
    ( (This)->lpVtbl -> get_TrialStartDate(This,ppTrialStartDate) ) 

#define ILicenseControllerV8_put_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> put_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseControllerV8_get_TrialEndDate(This,ppTrialEndDate)	\
    ( (This)->lpVtbl -> get_TrialEndDate(This,ppTrialEndDate) ) 

#define ILicenseControllerV8_put_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> put_TrialUsed(This,pTrialUsed) ) 

#define ILicenseControllerV8_get_TrialUsed(This,pTrialUsed)	\
    ( (This)->lpVtbl -> get_TrialUsed(This,pTrialUsed) ) 

#define ILicenseControllerV8_put_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> put_LicenseState(This,pLicenseState) ) 

#define ILicenseControllerV8_get_LicenseState(This,pLicenseState)	\
    ( (This)->lpVtbl -> get_LicenseState(This,pLicenseState) ) 

#define ILicenseControllerV8_put_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> put_ProductCode(This,ppProductCode) ) 

#define ILicenseControllerV8_get_ProductCode(This,ppProductCode)	\
    ( (This)->lpVtbl -> get_ProductCode(This,ppProductCode) ) 

#define ILicenseControllerV8_put_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> put_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseControllerV8_get_LastContactDate(This,ppLastContactDate)	\
    ( (This)->lpVtbl -> get_LastContactDate(This,ppLastContactDate) ) 

#define ILicenseControllerV8_put_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> put_Staging(This,ppStaging) ) 

#define ILicenseControllerV8_get_Staging(This,ppStaging)	\
    ( (This)->lpVtbl -> get_Staging(This,ppStaging) ) 

#define ILicenseControllerV8_SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt)	\
    ( (This)->lpVtbl -> SendEvent(This,EventType,EventCounter,EventTag,Tags,OccuredAt) ) 

#define ILicenseControllerV8_put_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> put_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseControllerV8_get_EntitlementFeatures(This,ppEntitlementFeatures)	\
    ( (This)->lpVtbl -> get_EntitlementFeatures(This,ppEntitlementFeatures) ) 

#define ILicenseControllerV8_put_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> put_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseControllerV8_get_ExpirationDate(This,ppExpirationDate)	\
    ( (This)->lpVtbl -> get_ExpirationDate(This,ppExpirationDate) ) 

#define ILicenseControllerV8_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define ILicenseControllerV8_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ILicenseControllerV8_put_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> put_RenewLink(This,ppRenewLink) ) 

#define ILicenseControllerV8_get_RenewLink(This,ppRenewLink)	\
    ( (This)->lpVtbl -> get_RenewLink(This,ppRenewLink) ) 

#define ILicenseControllerV8_Renew_Link(This)	\
    ( (This)->lpVtbl -> Renew_Link(This) ) 

#define ILicenseControllerV8_put_Id(This,ppId)	\
    ( (This)->lpVtbl -> put_Id(This,ppId) ) 

#define ILicenseControllerV8_get_Id(This,ppId)	\
    ( (This)->lpVtbl -> get_Id(This,ppId) ) 

#define ILicenseControllerV8_put_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV8_get_InProductUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_InProductUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV8_put_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> put_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV8_get_OfflineUpgradeLink(This,ppUpgradeLink)	\
    ( (This)->lpVtbl -> get_OfflineUpgradeLink(This,ppUpgradeLink) ) 

#define ILicenseControllerV8_SetAllowDataCollection(This,bAllow)	\
    ( (This)->lpVtbl -> SetAllowDataCollection(This,bAllow) ) 

#define ILicenseControllerV8_GetNotificationCount(This,pNumNotifications)	\
    ( (This)->lpVtbl -> GetNotificationCount(This,pNumNotifications) ) 

#define ILicenseControllerV8_GetNotificationIDs(This,ppNotificationIDs)	\
    ( (This)->lpVtbl -> GetNotificationIDs(This,ppNotificationIDs) ) 

#define ILicenseControllerV8_GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel)	\
    ( (This)->lpVtbl -> GetNotificationDetails(This,pID,pTarget,pType,pStartingDay,pEndingDay,pShownOnDay,pShowRepeatedly,pShowIfUiVisible,pAlertLevel) ) 

#define ILicenseControllerV8_SetNotificationShown(This,pID,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationShown(This,pID,shownOnDay) ) 

#define ILicenseControllerV8_SetNotificationTypeShown(This,type,shownOnDay)	\
    ( (This)->lpVtbl -> SetNotificationTypeShown(This,type,shownOnDay) ) 

#define ILicenseControllerV8_ResetNotificationShown(This,pID)	\
    ( (This)->lpVtbl -> ResetNotificationShown(This,pID) ) 

#define ILicenseControllerV8_ResetNotificationShownForType(This,type)	\
    ( (This)->lpVtbl -> ResetNotificationShownForType(This,type) ) 


#define ILicenseControllerV8_PowerSuspendNotification(This)	\
    ( (This)->lpVtbl -> PowerSuspendNotification(This) ) 

#define ILicenseControllerV8_PowerResumeNotification(This,wasPowerSuspendCalled)	\
    ( (This)->lpVtbl -> PowerResumeNotification(This,wasPowerSuspendCalled) ) 


#define ILicenseControllerV8_get_ComputerName(This,ppComputerName)	\
    ( (This)->lpVtbl -> get_ComputerName(This,ppComputerName) ) 


#define ILicenseControllerV8_put_EntitlementVolumePurchased(This,pEntitlementVolumePurchased)	\
    ( (This)->lpVtbl -> put_EntitlementVolumePurchased(This,pEntitlementVolumePurchased) ) 

#define ILicenseControllerV8_get_EntitlementVolumePurchased(This,pEntitlementVolumePurchased)	\
    ( (This)->lpVtbl -> get_EntitlementVolumePurchased(This,pEntitlementVolumePurchased) ) 

#define ILicenseControllerV8_put_EntitlementVolumeUsed(This,pEntitlementVolumeUsed)	\
    ( (This)->lpVtbl -> put_EntitlementVolumeUsed(This,pEntitlementVolumeUsed) ) 

#define ILicenseControllerV8_get_EntitlementVolumeUsed(This,pEntitlementVolumeUsed)	\
    ( (This)->lpVtbl -> get_EntitlementVolumeUsed(This,pEntitlementVolumeUsed) ) 


#define ILicenseControllerV8_put_AdditionalSeatsLink(This,ppAdditionalSeatsLink)	\
    ( (This)->lpVtbl -> put_AdditionalSeatsLink(This,ppAdditionalSeatsLink) ) 

#define ILicenseControllerV8_get_AdditionalSeatsLink(This,ppAdditionalSeatsLink)	\
    ( (This)->lpVtbl -> get_AdditionalSeatsLink(This,ppAdditionalSeatsLink) ) 

#define ILicenseControllerV8_put_EntitlementTermLength(This,pEntitlementTermLength)	\
    ( (This)->lpVtbl -> put_EntitlementTermLength(This,pEntitlementTermLength) ) 

#define ILicenseControllerV8_get_EntitlementTermLength(This,pEntitlementTermLength)	\
    ( (This)->lpVtbl -> get_EntitlementTermLength(This,pEntitlementTermLength) ) 


#define ILicenseControllerV8_put_EntitlementStartDate(This,ppEntitlementStartDate)	\
    ( (This)->lpVtbl -> put_EntitlementStartDate(This,ppEntitlementStartDate) ) 

#define ILicenseControllerV8_get_EntitlementStartDate(This,ppEntitlementStartDate)	\
    ( (This)->lpVtbl -> get_EntitlementStartDate(This,ppEntitlementStartDate) ) 

#define ILicenseControllerV8_put_EntitlementProductsCode(This,ppEntitlementProductsCode)	\
    ( (This)->lpVtbl -> put_EntitlementProductsCode(This,ppEntitlementProductsCode) ) 

#define ILicenseControllerV8_get_EntitlementProductsCode(This,ppEntitlementProductsCode)	\
    ( (This)->lpVtbl -> get_EntitlementProductsCode(This,ppEntitlementProductsCode) ) 

#define ILicenseControllerV8_put_EntitlementProductsCustomerType(This,ppEntitlementProductsCustomerType)	\
    ( (This)->lpVtbl -> put_EntitlementProductsCustomerType(This,ppEntitlementProductsCustomerType) ) 

#define ILicenseControllerV8_get_EntitlementProductsCustomerType(This,ppEntitlementProductsCustomerType)	\
    ( (This)->lpVtbl -> get_EntitlementProductsCustomerType(This,ppEntitlementProductsCustomerType) ) 

#define ILicenseControllerV8_put_EntitlementProductsName(This,ppEntitlementProductsName)	\
    ( (This)->lpVtbl -> put_EntitlementProductsName(This,ppEntitlementProductsName) ) 

#define ILicenseControllerV8_get_EntitlementProductsName(This,ppEntitlementProductsName)	\
    ( (This)->lpVtbl -> get_EntitlementProductsName(This,ppEntitlementProductsName) ) 


#define ILicenseControllerV8_get_BrowserExtensionTrialGiven(This,pTrialGiven)	\
    ( (This)->lpVtbl -> get_BrowserExtensionTrialGiven(This,pTrialGiven) ) 

#define ILicenseControllerV8_TrialReset(This)	\
    ( (This)->lpVtbl -> TrialReset(This) ) 


#define ILicenseControllerV8_put_LastLicensingError(This,plastLicensingError)	\
    ( (This)->lpVtbl -> put_LastLicensingError(This,plastLicensingError) ) 

#define ILicenseControllerV8_get_LastLicensingError(This,plastLicensingError)	\
    ( (This)->lpVtbl -> get_LastLicensingError(This,plastLicensingError) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILicenseControllerV8_INTERFACE_DEFINED__ */


#ifndef __ILicenseControllerEvents_INTERFACE_DEFINED__
#define __ILicenseControllerEvents_INTERFACE_DEFINED__

/* interface ILicenseControllerEvents */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ILicenseControllerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("90F4450A-B7B2-417C-8ABB-BBD1BDFBFC27")
    ILicenseControllerEvents : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE LicenseStateChanged( 
            /* [in] */ _LicenseStateEnum state) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE LicenseConfigChanged( 
            /* [in] */ _LicenseConfigOptionName configOptionName,
            /* [in] */ VARIANT value) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE LicenseProcessingError( 
            /* [in] */ _ReturnCode errCode) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ILicenseControllerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILicenseControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILicenseControllerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILicenseControllerEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ILicenseControllerEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ILicenseControllerEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ILicenseControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ILicenseControllerEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *LicenseStateChanged )( 
            ILicenseControllerEvents * This,
            /* [in] */ _LicenseStateEnum state);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *LicenseConfigChanged )( 
            ILicenseControllerEvents * This,
            /* [in] */ _LicenseConfigOptionName configOptionName,
            /* [in] */ VARIANT value);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *LicenseProcessingError )( 
            ILicenseControllerEvents * This,
            /* [in] */ _ReturnCode errCode);
        
        END_INTERFACE
    } ILicenseControllerEventsVtbl;

    interface ILicenseControllerEvents
    {
        CONST_VTBL struct ILicenseControllerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILicenseControllerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILicenseControllerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILicenseControllerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILicenseControllerEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ILicenseControllerEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ILicenseControllerEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ILicenseControllerEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ILicenseControllerEvents_LicenseStateChanged(This,state)	\
    ( (This)->lpVtbl -> LicenseStateChanged(This,state) ) 

#define ILicenseControllerEvents_LicenseConfigChanged(This,configOptionName,value)	\
    ( (This)->lpVtbl -> LicenseConfigChanged(This,configOptionName,value) ) 

#define ILicenseControllerEvents_LicenseProcessingError(This,errCode)	\
    ( (This)->lpVtbl -> LicenseProcessingError(This,errCode) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILicenseControllerEvents_INTERFACE_DEFINED__ */


#ifndef ___ILicenseControllerEvents_DISPINTERFACE_DEFINED__
#define ___ILicenseControllerEvents_DISPINTERFACE_DEFINED__

/* dispinterface _ILicenseControllerEvents */
/* [uuid] */ 


EXTERN_C const IID DIID__ILicenseControllerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("C5201562-332D-4385-87E7-2BB41B1694AA")
    _ILicenseControllerEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _ILicenseControllerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ILicenseControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ILicenseControllerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ILicenseControllerEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ILicenseControllerEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ILicenseControllerEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ILicenseControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ILicenseControllerEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ILicenseControllerEventsVtbl;

    interface _ILicenseControllerEvents
    {
        CONST_VTBL struct _ILicenseControllerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ILicenseControllerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ILicenseControllerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ILicenseControllerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ILicenseControllerEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ILicenseControllerEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ILicenseControllerEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ILicenseControllerEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___ILicenseControllerEvents_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_LicenseController;

#ifdef __cplusplus

class DECLSPEC_UUID("580243BF-3CEE-4131-A599-C6FED66BEB1B")
LicenseController;
#endif
#endif /* __LicenseControllerCOMLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


