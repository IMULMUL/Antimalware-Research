

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.01.0622 */
/* at Tue Jan 19 14:14:07 2038
 */
/* Compiler settings for C:\Users\User\source\repos\MBAMExploit\Typelibs\PoliciesController.IDL:
    Oicf, W1, Zp8, env=Win64 (32b run), target_arch=AMD64 8.01.0622 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#include "LogController.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */


#ifndef __PoliciesController_h__
#define __PoliciesController_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IPoliciesControllerEvents_FWD_DEFINED__
#define __IPoliciesControllerEvents_FWD_DEFINED__
typedef interface IPoliciesControllerEvents IPoliciesControllerEvents;

#endif 	/* __IPoliciesControllerEvents_FWD_DEFINED__ */


#ifndef ___IPoliciesControllerEvents_FWD_DEFINED__
#define ___IPoliciesControllerEvents_FWD_DEFINED__
typedef interface _IPoliciesControllerEvents _IPoliciesControllerEvents;

#endif 	/* ___IPoliciesControllerEvents_FWD_DEFINED__ */


#ifndef __IPoliciesController_FWD_DEFINED__
#define __IPoliciesController_FWD_DEFINED__
typedef interface IPoliciesController IPoliciesController;

#endif 	/* __IPoliciesController_FWD_DEFINED__ */


#ifndef __IPoliciesControllerV2_FWD_DEFINED__
#define __IPoliciesControllerV2_FWD_DEFINED__
typedef interface IPoliciesControllerV2 IPoliciesControllerV2;

#endif 	/* __IPoliciesControllerV2_FWD_DEFINED__ */


#ifndef __IPoliciesControllerV3_FWD_DEFINED__
#define __IPoliciesControllerV3_FWD_DEFINED__
typedef interface IPoliciesControllerV3 IPoliciesControllerV3;

#endif 	/* __IPoliciesControllerV3_FWD_DEFINED__ */


#ifndef __IPoliciesControllerV4_FWD_DEFINED__
#define __IPoliciesControllerV4_FWD_DEFINED__
typedef interface IPoliciesControllerV4 IPoliciesControllerV4;

#endif 	/* __IPoliciesControllerV4_FWD_DEFINED__ */


#ifndef __IPoliciesControllerV5_FWD_DEFINED__
#define __IPoliciesControllerV5_FWD_DEFINED__
typedef interface IPoliciesControllerV5 IPoliciesControllerV5;

#endif 	/* __IPoliciesControllerV5_FWD_DEFINED__ */


#ifndef __PoliciesController_FWD_DEFINED__
#define __PoliciesController_FWD_DEFINED__

#ifdef __cplusplus
typedef class PoliciesController PoliciesController;
#else
typedef struct PoliciesController PoliciesController;
#endif /* __cplusplus */

#endif 	/* __PoliciesController_FWD_DEFINED__ */


#ifdef __cplusplus
extern "C"{
#endif 



#ifndef __PoliciesControllerCOMLib_LIBRARY_DEFINED__
#define __PoliciesControllerCOMLib_LIBRARY_DEFINED__

/* library PoliciesControllerCOMLib */
/* [custom][custom][custom][version][uuid] */ 








typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_PoliciesController_0000_0000_0001
    {
        WarnWhenDeffsAreOutOfDateEvent	= 0,
        TrayIconVisibilityEvent	= 1,
        CloseNotifyEvent	= 2,
        UserInterfaceVisibilityEvent	= 3,
        PasswordEvent	= 4,
        ShowSystemTrayNotificationEvent	= 5,
        ProxyPortEvent	= 6,
        ProxyServerEvent	= 7,
        UseProxyServerEvent	= 8,
        ProxyNeedAuthEvent	= 9,
        ProxyUserNameEvent	= 10,
        ProxyPasswordEvent	= 11,
        RebootVisibilityEvent	= 12,
        EnableContextMenuEvent	= 13,
        DisplayLanguageEvent	= 14,
        RestrictAccessEvent	= 15,
        NotifyWhenFullUpdatesAvailable	= 16,
        ExportEventLogData	= 17,
        ProtectedAreasEvent	= 18,
        AutoStartService	= 19,
        ShowRealTimeNotificationEvent	= 20,
        ClientConfigUpdated	= 21,
        UseAlternateURLs	= 22
    } 	_PoliciesConfigOptions;

typedef /* [uuid] */  DECLSPEC_UUID("BA10C1B2-9713-452C-8BF5-63660FE43972") struct tagPoliciesConfig
    {
    VARIANT_BOOL WarnWhenDeffsAreOutOfDate;
    VARIANT_BOOL TrayIconVisibility;
    unsigned long CloseNotifyTimeout;
    VARIANT_BOOL UserInterfaceVisibility;
    BSTR Password;
    VARIANT_BOOL ShowSystemTrayNotification;
    unsigned long ProxyPort;
    BSTR ProxyServer;
    VARIANT_BOOL RebootVisibility;
    VARIANT_BOOL EnableContextMenu;
    BSTR DisplayLanguage;
    VARIANT_BOOL RestrictAccess;
    VARIANT_BOOL UseProxyServer;
    VARIANT_BOOL ProxyNeedAuth;
    BSTR ProxyUserName;
    BSTR ProxyPasswd;
    VARIANT_BOOL NotifyWhenFullUpdatesAvailable;
    VARIANT_BOOL ExportEventLogData;
    unsigned long ProtectedAreas;
    VARIANT_BOOL AutoStartService;
    } 	PoliciesConfig;

typedef /* [uuid] */  DECLSPEC_UUID("7B27321B-F214-46B8-9B2A-AF9661941FB3") struct tagPoliciesConfigV2
    {
    VARIANT_BOOL WarnWhenDeffsAreOutOfDate;
    VARIANT_BOOL TrayIconVisibility;
    unsigned long CloseNotifyTimeout;
    VARIANT_BOOL UserInterfaceVisibility;
    BSTR Password;
    VARIANT_BOOL ShowSystemTrayNotification;
    unsigned long ProxyPort;
    BSTR ProxyServer;
    VARIANT_BOOL RebootVisibility;
    VARIANT_BOOL EnableContextMenu;
    BSTR DisplayLanguage;
    VARIANT_BOOL RestrictAccess;
    VARIANT_BOOL UseProxyServer;
    VARIANT_BOOL ProxyNeedAuth;
    BSTR ProxyUserName;
    BSTR ProxyPasswd;
    VARIANT_BOOL NotifyWhenFullUpdatesAvailable;
    VARIANT_BOOL ExportEventLogData;
    unsigned long ProtectedAreas;
    VARIANT_BOOL AutoStartService;
    VARIANT_BOOL ShowRealTimeNotification;
    } 	PoliciesConfigV2;


EXTERN_C const IID LIBID_PoliciesControllerCOMLib;

#ifndef __IPoliciesControllerEvents_INTERFACE_DEFINED__
#define __IPoliciesControllerEvents_INTERFACE_DEFINED__

/* interface IPoliciesControllerEvents */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IPoliciesControllerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FD6673C7-8E52-46EE-80B8-58F3FB6AA036")
    IPoliciesControllerEvents : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ConfigOptionChanged( 
            /* [in] */ _PoliciesConfigOptions option,
            /* [in] */ VARIANT value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IPoliciesControllerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPoliciesControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPoliciesControllerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPoliciesControllerEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IPoliciesControllerEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IPoliciesControllerEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IPoliciesControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IPoliciesControllerEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ConfigOptionChanged )( 
            IPoliciesControllerEvents * This,
            /* [in] */ _PoliciesConfigOptions option,
            /* [in] */ VARIANT value);
        
        END_INTERFACE
    } IPoliciesControllerEventsVtbl;

    interface IPoliciesControllerEvents
    {
        CONST_VTBL struct IPoliciesControllerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPoliciesControllerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPoliciesControllerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPoliciesControllerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPoliciesControllerEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IPoliciesControllerEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IPoliciesControllerEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IPoliciesControllerEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IPoliciesControllerEvents_ConfigOptionChanged(This,option,value)	\
    ( (This)->lpVtbl -> ConfigOptionChanged(This,option,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPoliciesControllerEvents_INTERFACE_DEFINED__ */


#ifndef ___IPoliciesControllerEvents_DISPINTERFACE_DEFINED__
#define ___IPoliciesControllerEvents_DISPINTERFACE_DEFINED__

/* dispinterface _IPoliciesControllerEvents */
/* [uuid] */ 


EXTERN_C const IID DIID__IPoliciesControllerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("CCEFCD43-B934-4168-AE51-6FE07D3D0624")
    _IPoliciesControllerEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IPoliciesControllerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IPoliciesControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IPoliciesControllerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IPoliciesControllerEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IPoliciesControllerEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IPoliciesControllerEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IPoliciesControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IPoliciesControllerEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IPoliciesControllerEventsVtbl;

    interface _IPoliciesControllerEvents
    {
        CONST_VTBL struct _IPoliciesControllerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IPoliciesControllerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IPoliciesControllerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IPoliciesControllerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IPoliciesControllerEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IPoliciesControllerEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IPoliciesControllerEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IPoliciesControllerEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IPoliciesControllerEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IPoliciesController_INTERFACE_DEFINED__
#define __IPoliciesController_INTERFACE_DEFINED__

/* interface IPoliciesController */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IPoliciesController;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3C871BA6-4662-4E17-ABF4-3B2276FC0FF4")
    IPoliciesController : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Start( 
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Stop( 
            /* [in] */ long timeoutMs) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetConfig( 
            /* [retval][out] */ PoliciesConfig *pConfig) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetConfig( 
            /* [in] */ PoliciesConfig *pConfig) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PrepareUpdate( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FinishUpdate( void) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_WarnWhenDefsAreOutOfDate( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_WarnWhenDefsAreOutOfDate( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TrayIconVisibility( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_TrayIconVisibility( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CloseNotifyTimeout( 
            /* [retval][out] */ unsigned long *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_CloseNotifyTimeout( 
            /* [in] */ unsigned long pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_UserInterfaceVisibility( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_UserInterfaceVisibility( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Password( 
            /* [retval][out] */ BSTR *pPassword) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Password( 
            /* [in] */ BSTR pPassword) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowSystemTrayNotification( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowSystemTrayNotification( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ProxyPort( 
            /* [retval][out] */ unsigned long *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ProxyPort( 
            /* [in] */ unsigned long pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ProxyServer( 
            /* [retval][out] */ BSTR *pPassword) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ProxyServer( 
            /* [in] */ BSTR pPassword) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_RebootVisibility( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_RebootVisibility( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableContextMenu( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableContextMenu( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DisplayLanguage( 
            /* [retval][out] */ BSTR *pDisplayLanguage) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_DisplayLanguage( 
            /* [in] */ BSTR pDisplayLanguage) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_RestrictAccess( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_RestrictAccess( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_UseProxyServer( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_UseProxyServer( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ProxyNeedAuth( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ProxyNeedAuth( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ProxyUserName( 
            /* [retval][out] */ BSTR *ProxyUserName) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ProxyUserName( 
            /* [in] */ BSTR ProxyUserName) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ProxyPassword( 
            /* [retval][out] */ BSTR *ProxyPassword) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ProxyPassword( 
            /* [in] */ BSTR ProxyPassword) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_NotifyWhenFullUpdatesAvailable( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_NotifyWhenFullUpdatesAvailable( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CheckPassword( 
            /* [in] */ BSTR Password,
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ProtectedAreas( 
            /* [retval][out] */ unsigned long *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ProtectedAreas( 
            /* [in] */ unsigned long pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ExportEventLogData( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ExportEventLogData( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoStartService( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoStartService( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IPoliciesControllerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPoliciesController * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPoliciesController * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPoliciesController * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IPoliciesController * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IPoliciesController * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IPoliciesController * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IPoliciesController * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IPoliciesController * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IPoliciesController * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfig )( 
            IPoliciesController * This,
            /* [retval][out] */ PoliciesConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfig )( 
            IPoliciesController * This,
            /* [in] */ PoliciesConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IPoliciesController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IPoliciesController * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WarnWhenDefsAreOutOfDate )( 
            IPoliciesController * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WarnWhenDefsAreOutOfDate )( 
            IPoliciesController * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrayIconVisibility )( 
            IPoliciesController * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrayIconVisibility )( 
            IPoliciesController * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CloseNotifyTimeout )( 
            IPoliciesController * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CloseNotifyTimeout )( 
            IPoliciesController * This,
            /* [in] */ unsigned long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserInterfaceVisibility )( 
            IPoliciesController * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UserInterfaceVisibility )( 
            IPoliciesController * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Password )( 
            IPoliciesController * This,
            /* [retval][out] */ BSTR *pPassword);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Password )( 
            IPoliciesController * This,
            /* [in] */ BSTR pPassword);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowSystemTrayNotification )( 
            IPoliciesController * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowSystemTrayNotification )( 
            IPoliciesController * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyPort )( 
            IPoliciesController * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyPort )( 
            IPoliciesController * This,
            /* [in] */ unsigned long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyServer )( 
            IPoliciesController * This,
            /* [retval][out] */ BSTR *pPassword);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyServer )( 
            IPoliciesController * This,
            /* [in] */ BSTR pPassword);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RebootVisibility )( 
            IPoliciesController * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RebootVisibility )( 
            IPoliciesController * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableContextMenu )( 
            IPoliciesController * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableContextMenu )( 
            IPoliciesController * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayLanguage )( 
            IPoliciesController * This,
            /* [retval][out] */ BSTR *pDisplayLanguage);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayLanguage )( 
            IPoliciesController * This,
            /* [in] */ BSTR pDisplayLanguage);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RestrictAccess )( 
            IPoliciesController * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RestrictAccess )( 
            IPoliciesController * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UseProxyServer )( 
            IPoliciesController * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UseProxyServer )( 
            IPoliciesController * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyNeedAuth )( 
            IPoliciesController * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyNeedAuth )( 
            IPoliciesController * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyUserName )( 
            IPoliciesController * This,
            /* [retval][out] */ BSTR *ProxyUserName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyUserName )( 
            IPoliciesController * This,
            /* [in] */ BSTR ProxyUserName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyPassword )( 
            IPoliciesController * This,
            /* [retval][out] */ BSTR *ProxyPassword);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyPassword )( 
            IPoliciesController * This,
            /* [in] */ BSTR ProxyPassword);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NotifyWhenFullUpdatesAvailable )( 
            IPoliciesController * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NotifyWhenFullUpdatesAvailable )( 
            IPoliciesController * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CheckPassword )( 
            IPoliciesController * This,
            /* [in] */ BSTR Password,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectedAreas )( 
            IPoliciesController * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProtectedAreas )( 
            IPoliciesController * This,
            /* [in] */ unsigned long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExportEventLogData )( 
            IPoliciesController * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExportEventLogData )( 
            IPoliciesController * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStartService )( 
            IPoliciesController * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStartService )( 
            IPoliciesController * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        END_INTERFACE
    } IPoliciesControllerVtbl;

    interface IPoliciesController
    {
        CONST_VTBL struct IPoliciesControllerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPoliciesController_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPoliciesController_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPoliciesController_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPoliciesController_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IPoliciesController_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IPoliciesController_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IPoliciesController_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IPoliciesController_Start(This,pImplFolderPath,pDataPath,pLogController)	\
    ( (This)->lpVtbl -> Start(This,pImplFolderPath,pDataPath,pLogController) ) 

#define IPoliciesController_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define IPoliciesController_GetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfig(This,pConfig) ) 

#define IPoliciesController_SetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfig(This,pConfig) ) 

#define IPoliciesController_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IPoliciesController_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IPoliciesController_get_WarnWhenDefsAreOutOfDate(This,pVal)	\
    ( (This)->lpVtbl -> get_WarnWhenDefsAreOutOfDate(This,pVal) ) 

#define IPoliciesController_put_WarnWhenDefsAreOutOfDate(This,pVal)	\
    ( (This)->lpVtbl -> put_WarnWhenDefsAreOutOfDate(This,pVal) ) 

#define IPoliciesController_get_TrayIconVisibility(This,pVal)	\
    ( (This)->lpVtbl -> get_TrayIconVisibility(This,pVal) ) 

#define IPoliciesController_put_TrayIconVisibility(This,pVal)	\
    ( (This)->lpVtbl -> put_TrayIconVisibility(This,pVal) ) 

#define IPoliciesController_get_CloseNotifyTimeout(This,pVal)	\
    ( (This)->lpVtbl -> get_CloseNotifyTimeout(This,pVal) ) 

#define IPoliciesController_put_CloseNotifyTimeout(This,pVal)	\
    ( (This)->lpVtbl -> put_CloseNotifyTimeout(This,pVal) ) 

#define IPoliciesController_get_UserInterfaceVisibility(This,pVal)	\
    ( (This)->lpVtbl -> get_UserInterfaceVisibility(This,pVal) ) 

#define IPoliciesController_put_UserInterfaceVisibility(This,pVal)	\
    ( (This)->lpVtbl -> put_UserInterfaceVisibility(This,pVal) ) 

#define IPoliciesController_get_Password(This,pPassword)	\
    ( (This)->lpVtbl -> get_Password(This,pPassword) ) 

#define IPoliciesController_put_Password(This,pPassword)	\
    ( (This)->lpVtbl -> put_Password(This,pPassword) ) 

#define IPoliciesController_get_ShowSystemTrayNotification(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowSystemTrayNotification(This,pVal) ) 

#define IPoliciesController_put_ShowSystemTrayNotification(This,pVal)	\
    ( (This)->lpVtbl -> put_ShowSystemTrayNotification(This,pVal) ) 

#define IPoliciesController_get_ProxyPort(This,pVal)	\
    ( (This)->lpVtbl -> get_ProxyPort(This,pVal) ) 

#define IPoliciesController_put_ProxyPort(This,pVal)	\
    ( (This)->lpVtbl -> put_ProxyPort(This,pVal) ) 

#define IPoliciesController_get_ProxyServer(This,pPassword)	\
    ( (This)->lpVtbl -> get_ProxyServer(This,pPassword) ) 

#define IPoliciesController_put_ProxyServer(This,pPassword)	\
    ( (This)->lpVtbl -> put_ProxyServer(This,pPassword) ) 

#define IPoliciesController_get_RebootVisibility(This,pVal)	\
    ( (This)->lpVtbl -> get_RebootVisibility(This,pVal) ) 

#define IPoliciesController_put_RebootVisibility(This,pVal)	\
    ( (This)->lpVtbl -> put_RebootVisibility(This,pVal) ) 

#define IPoliciesController_get_EnableContextMenu(This,pVal)	\
    ( (This)->lpVtbl -> get_EnableContextMenu(This,pVal) ) 

#define IPoliciesController_put_EnableContextMenu(This,pVal)	\
    ( (This)->lpVtbl -> put_EnableContextMenu(This,pVal) ) 

#define IPoliciesController_get_DisplayLanguage(This,pDisplayLanguage)	\
    ( (This)->lpVtbl -> get_DisplayLanguage(This,pDisplayLanguage) ) 

#define IPoliciesController_put_DisplayLanguage(This,pDisplayLanguage)	\
    ( (This)->lpVtbl -> put_DisplayLanguage(This,pDisplayLanguage) ) 

#define IPoliciesController_get_RestrictAccess(This,pVal)	\
    ( (This)->lpVtbl -> get_RestrictAccess(This,pVal) ) 

#define IPoliciesController_put_RestrictAccess(This,pVal)	\
    ( (This)->lpVtbl -> put_RestrictAccess(This,pVal) ) 

#define IPoliciesController_get_UseProxyServer(This,pVal)	\
    ( (This)->lpVtbl -> get_UseProxyServer(This,pVal) ) 

#define IPoliciesController_put_UseProxyServer(This,pVal)	\
    ( (This)->lpVtbl -> put_UseProxyServer(This,pVal) ) 

#define IPoliciesController_get_ProxyNeedAuth(This,pVal)	\
    ( (This)->lpVtbl -> get_ProxyNeedAuth(This,pVal) ) 

#define IPoliciesController_put_ProxyNeedAuth(This,pVal)	\
    ( (This)->lpVtbl -> put_ProxyNeedAuth(This,pVal) ) 

#define IPoliciesController_get_ProxyUserName(This,ProxyUserName)	\
    ( (This)->lpVtbl -> get_ProxyUserName(This,ProxyUserName) ) 

#define IPoliciesController_put_ProxyUserName(This,ProxyUserName)	\
    ( (This)->lpVtbl -> put_ProxyUserName(This,ProxyUserName) ) 

#define IPoliciesController_get_ProxyPassword(This,ProxyPassword)	\
    ( (This)->lpVtbl -> get_ProxyPassword(This,ProxyPassword) ) 

#define IPoliciesController_put_ProxyPassword(This,ProxyPassword)	\
    ( (This)->lpVtbl -> put_ProxyPassword(This,ProxyPassword) ) 

#define IPoliciesController_get_NotifyWhenFullUpdatesAvailable(This,pVal)	\
    ( (This)->lpVtbl -> get_NotifyWhenFullUpdatesAvailable(This,pVal) ) 

#define IPoliciesController_put_NotifyWhenFullUpdatesAvailable(This,pVal)	\
    ( (This)->lpVtbl -> put_NotifyWhenFullUpdatesAvailable(This,pVal) ) 

#define IPoliciesController_CheckPassword(This,Password,pVal)	\
    ( (This)->lpVtbl -> CheckPassword(This,Password,pVal) ) 

#define IPoliciesController_get_ProtectedAreas(This,pVal)	\
    ( (This)->lpVtbl -> get_ProtectedAreas(This,pVal) ) 

#define IPoliciesController_put_ProtectedAreas(This,pVal)	\
    ( (This)->lpVtbl -> put_ProtectedAreas(This,pVal) ) 

#define IPoliciesController_get_ExportEventLogData(This,pVal)	\
    ( (This)->lpVtbl -> get_ExportEventLogData(This,pVal) ) 

#define IPoliciesController_put_ExportEventLogData(This,pVal)	\
    ( (This)->lpVtbl -> put_ExportEventLogData(This,pVal) ) 

#define IPoliciesController_get_AutoStartService(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoStartService(This,pVal) ) 

#define IPoliciesController_put_AutoStartService(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoStartService(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPoliciesController_INTERFACE_DEFINED__ */


#ifndef __IPoliciesControllerV2_INTERFACE_DEFINED__
#define __IPoliciesControllerV2_INTERFACE_DEFINED__

/* interface IPoliciesControllerV2 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IPoliciesControllerV2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DC2F8F62-D471-4AD5-B346-9F214FE941A7")
    IPoliciesControllerV2 : public IPoliciesController
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ShowRealTimeNotification( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ShowRealTimeNotification( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_RealTimeNotificationWait( 
            /* [retval][out] */ unsigned long *pVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetConfigV2( 
            /* [retval][out] */ PoliciesConfigV2 *pConfig) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetConfigV2( 
            /* [in] */ PoliciesConfigV2 *pConfig) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IPoliciesControllerV2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPoliciesControllerV2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPoliciesControllerV2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPoliciesControllerV2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IPoliciesControllerV2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IPoliciesControllerV2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IPoliciesControllerV2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IPoliciesControllerV2 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IPoliciesControllerV2 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IPoliciesControllerV2 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfig )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ PoliciesConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfig )( 
            IPoliciesControllerV2 * This,
            /* [in] */ PoliciesConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IPoliciesControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IPoliciesControllerV2 * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WarnWhenDefsAreOutOfDate )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WarnWhenDefsAreOutOfDate )( 
            IPoliciesControllerV2 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrayIconVisibility )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrayIconVisibility )( 
            IPoliciesControllerV2 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CloseNotifyTimeout )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CloseNotifyTimeout )( 
            IPoliciesControllerV2 * This,
            /* [in] */ unsigned long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserInterfaceVisibility )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UserInterfaceVisibility )( 
            IPoliciesControllerV2 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Password )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ BSTR *pPassword);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Password )( 
            IPoliciesControllerV2 * This,
            /* [in] */ BSTR pPassword);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowSystemTrayNotification )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowSystemTrayNotification )( 
            IPoliciesControllerV2 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyPort )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyPort )( 
            IPoliciesControllerV2 * This,
            /* [in] */ unsigned long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyServer )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ BSTR *pPassword);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyServer )( 
            IPoliciesControllerV2 * This,
            /* [in] */ BSTR pPassword);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RebootVisibility )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RebootVisibility )( 
            IPoliciesControllerV2 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableContextMenu )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableContextMenu )( 
            IPoliciesControllerV2 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayLanguage )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ BSTR *pDisplayLanguage);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayLanguage )( 
            IPoliciesControllerV2 * This,
            /* [in] */ BSTR pDisplayLanguage);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RestrictAccess )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RestrictAccess )( 
            IPoliciesControllerV2 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UseProxyServer )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UseProxyServer )( 
            IPoliciesControllerV2 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyNeedAuth )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyNeedAuth )( 
            IPoliciesControllerV2 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyUserName )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ BSTR *ProxyUserName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyUserName )( 
            IPoliciesControllerV2 * This,
            /* [in] */ BSTR ProxyUserName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyPassword )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ BSTR *ProxyPassword);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyPassword )( 
            IPoliciesControllerV2 * This,
            /* [in] */ BSTR ProxyPassword);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NotifyWhenFullUpdatesAvailable )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NotifyWhenFullUpdatesAvailable )( 
            IPoliciesControllerV2 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CheckPassword )( 
            IPoliciesControllerV2 * This,
            /* [in] */ BSTR Password,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectedAreas )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProtectedAreas )( 
            IPoliciesControllerV2 * This,
            /* [in] */ unsigned long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExportEventLogData )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExportEventLogData )( 
            IPoliciesControllerV2 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStartService )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStartService )( 
            IPoliciesControllerV2 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowRealTimeNotification )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowRealTimeNotification )( 
            IPoliciesControllerV2 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RealTimeNotificationWait )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfigV2 )( 
            IPoliciesControllerV2 * This,
            /* [retval][out] */ PoliciesConfigV2 *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfigV2 )( 
            IPoliciesControllerV2 * This,
            /* [in] */ PoliciesConfigV2 *pConfig);
        
        END_INTERFACE
    } IPoliciesControllerV2Vtbl;

    interface IPoliciesControllerV2
    {
        CONST_VTBL struct IPoliciesControllerV2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPoliciesControllerV2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPoliciesControllerV2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPoliciesControllerV2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPoliciesControllerV2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IPoliciesControllerV2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IPoliciesControllerV2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IPoliciesControllerV2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IPoliciesControllerV2_Start(This,pImplFolderPath,pDataPath,pLogController)	\
    ( (This)->lpVtbl -> Start(This,pImplFolderPath,pDataPath,pLogController) ) 

#define IPoliciesControllerV2_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define IPoliciesControllerV2_GetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfig(This,pConfig) ) 

#define IPoliciesControllerV2_SetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfig(This,pConfig) ) 

#define IPoliciesControllerV2_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IPoliciesControllerV2_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IPoliciesControllerV2_get_WarnWhenDefsAreOutOfDate(This,pVal)	\
    ( (This)->lpVtbl -> get_WarnWhenDefsAreOutOfDate(This,pVal) ) 

#define IPoliciesControllerV2_put_WarnWhenDefsAreOutOfDate(This,pVal)	\
    ( (This)->lpVtbl -> put_WarnWhenDefsAreOutOfDate(This,pVal) ) 

#define IPoliciesControllerV2_get_TrayIconVisibility(This,pVal)	\
    ( (This)->lpVtbl -> get_TrayIconVisibility(This,pVal) ) 

#define IPoliciesControllerV2_put_TrayIconVisibility(This,pVal)	\
    ( (This)->lpVtbl -> put_TrayIconVisibility(This,pVal) ) 

#define IPoliciesControllerV2_get_CloseNotifyTimeout(This,pVal)	\
    ( (This)->lpVtbl -> get_CloseNotifyTimeout(This,pVal) ) 

#define IPoliciesControllerV2_put_CloseNotifyTimeout(This,pVal)	\
    ( (This)->lpVtbl -> put_CloseNotifyTimeout(This,pVal) ) 

#define IPoliciesControllerV2_get_UserInterfaceVisibility(This,pVal)	\
    ( (This)->lpVtbl -> get_UserInterfaceVisibility(This,pVal) ) 

#define IPoliciesControllerV2_put_UserInterfaceVisibility(This,pVal)	\
    ( (This)->lpVtbl -> put_UserInterfaceVisibility(This,pVal) ) 

#define IPoliciesControllerV2_get_Password(This,pPassword)	\
    ( (This)->lpVtbl -> get_Password(This,pPassword) ) 

#define IPoliciesControllerV2_put_Password(This,pPassword)	\
    ( (This)->lpVtbl -> put_Password(This,pPassword) ) 

#define IPoliciesControllerV2_get_ShowSystemTrayNotification(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowSystemTrayNotification(This,pVal) ) 

#define IPoliciesControllerV2_put_ShowSystemTrayNotification(This,pVal)	\
    ( (This)->lpVtbl -> put_ShowSystemTrayNotification(This,pVal) ) 

#define IPoliciesControllerV2_get_ProxyPort(This,pVal)	\
    ( (This)->lpVtbl -> get_ProxyPort(This,pVal) ) 

#define IPoliciesControllerV2_put_ProxyPort(This,pVal)	\
    ( (This)->lpVtbl -> put_ProxyPort(This,pVal) ) 

#define IPoliciesControllerV2_get_ProxyServer(This,pPassword)	\
    ( (This)->lpVtbl -> get_ProxyServer(This,pPassword) ) 

#define IPoliciesControllerV2_put_ProxyServer(This,pPassword)	\
    ( (This)->lpVtbl -> put_ProxyServer(This,pPassword) ) 

#define IPoliciesControllerV2_get_RebootVisibility(This,pVal)	\
    ( (This)->lpVtbl -> get_RebootVisibility(This,pVal) ) 

#define IPoliciesControllerV2_put_RebootVisibility(This,pVal)	\
    ( (This)->lpVtbl -> put_RebootVisibility(This,pVal) ) 

#define IPoliciesControllerV2_get_EnableContextMenu(This,pVal)	\
    ( (This)->lpVtbl -> get_EnableContextMenu(This,pVal) ) 

#define IPoliciesControllerV2_put_EnableContextMenu(This,pVal)	\
    ( (This)->lpVtbl -> put_EnableContextMenu(This,pVal) ) 

#define IPoliciesControllerV2_get_DisplayLanguage(This,pDisplayLanguage)	\
    ( (This)->lpVtbl -> get_DisplayLanguage(This,pDisplayLanguage) ) 

#define IPoliciesControllerV2_put_DisplayLanguage(This,pDisplayLanguage)	\
    ( (This)->lpVtbl -> put_DisplayLanguage(This,pDisplayLanguage) ) 

#define IPoliciesControllerV2_get_RestrictAccess(This,pVal)	\
    ( (This)->lpVtbl -> get_RestrictAccess(This,pVal) ) 

#define IPoliciesControllerV2_put_RestrictAccess(This,pVal)	\
    ( (This)->lpVtbl -> put_RestrictAccess(This,pVal) ) 

#define IPoliciesControllerV2_get_UseProxyServer(This,pVal)	\
    ( (This)->lpVtbl -> get_UseProxyServer(This,pVal) ) 

#define IPoliciesControllerV2_put_UseProxyServer(This,pVal)	\
    ( (This)->lpVtbl -> put_UseProxyServer(This,pVal) ) 

#define IPoliciesControllerV2_get_ProxyNeedAuth(This,pVal)	\
    ( (This)->lpVtbl -> get_ProxyNeedAuth(This,pVal) ) 

#define IPoliciesControllerV2_put_ProxyNeedAuth(This,pVal)	\
    ( (This)->lpVtbl -> put_ProxyNeedAuth(This,pVal) ) 

#define IPoliciesControllerV2_get_ProxyUserName(This,ProxyUserName)	\
    ( (This)->lpVtbl -> get_ProxyUserName(This,ProxyUserName) ) 

#define IPoliciesControllerV2_put_ProxyUserName(This,ProxyUserName)	\
    ( (This)->lpVtbl -> put_ProxyUserName(This,ProxyUserName) ) 

#define IPoliciesControllerV2_get_ProxyPassword(This,ProxyPassword)	\
    ( (This)->lpVtbl -> get_ProxyPassword(This,ProxyPassword) ) 

#define IPoliciesControllerV2_put_ProxyPassword(This,ProxyPassword)	\
    ( (This)->lpVtbl -> put_ProxyPassword(This,ProxyPassword) ) 

#define IPoliciesControllerV2_get_NotifyWhenFullUpdatesAvailable(This,pVal)	\
    ( (This)->lpVtbl -> get_NotifyWhenFullUpdatesAvailable(This,pVal) ) 

#define IPoliciesControllerV2_put_NotifyWhenFullUpdatesAvailable(This,pVal)	\
    ( (This)->lpVtbl -> put_NotifyWhenFullUpdatesAvailable(This,pVal) ) 

#define IPoliciesControllerV2_CheckPassword(This,Password,pVal)	\
    ( (This)->lpVtbl -> CheckPassword(This,Password,pVal) ) 

#define IPoliciesControllerV2_get_ProtectedAreas(This,pVal)	\
    ( (This)->lpVtbl -> get_ProtectedAreas(This,pVal) ) 

#define IPoliciesControllerV2_put_ProtectedAreas(This,pVal)	\
    ( (This)->lpVtbl -> put_ProtectedAreas(This,pVal) ) 

#define IPoliciesControllerV2_get_ExportEventLogData(This,pVal)	\
    ( (This)->lpVtbl -> get_ExportEventLogData(This,pVal) ) 

#define IPoliciesControllerV2_put_ExportEventLogData(This,pVal)	\
    ( (This)->lpVtbl -> put_ExportEventLogData(This,pVal) ) 

#define IPoliciesControllerV2_get_AutoStartService(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoStartService(This,pVal) ) 

#define IPoliciesControllerV2_put_AutoStartService(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoStartService(This,pVal) ) 


#define IPoliciesControllerV2_get_ShowRealTimeNotification(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowRealTimeNotification(This,pVal) ) 

#define IPoliciesControllerV2_put_ShowRealTimeNotification(This,pVal)	\
    ( (This)->lpVtbl -> put_ShowRealTimeNotification(This,pVal) ) 

#define IPoliciesControllerV2_get_RealTimeNotificationWait(This,pVal)	\
    ( (This)->lpVtbl -> get_RealTimeNotificationWait(This,pVal) ) 

#define IPoliciesControllerV2_GetConfigV2(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfigV2(This,pConfig) ) 

#define IPoliciesControllerV2_SetConfigV2(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfigV2(This,pConfig) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPoliciesControllerV2_INTERFACE_DEFINED__ */


#ifndef __IPoliciesControllerV3_INTERFACE_DEFINED__
#define __IPoliciesControllerV3_INTERFACE_DEFINED__

/* interface IPoliciesControllerV3 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IPoliciesControllerV3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("31BF2366-C6DB-49F1-96A5-8026B9DF4152")
    IPoliciesControllerV3 : public IPoliciesControllerV2
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoStartServiceOverride( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoStartServiceOverride( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StartV2( 
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IPoliciesControllerV3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPoliciesControllerV3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPoliciesControllerV3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPoliciesControllerV3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IPoliciesControllerV3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IPoliciesControllerV3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IPoliciesControllerV3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IPoliciesControllerV3 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IPoliciesControllerV3 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IPoliciesControllerV3 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfig )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ PoliciesConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfig )( 
            IPoliciesControllerV3 * This,
            /* [in] */ PoliciesConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IPoliciesControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IPoliciesControllerV3 * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WarnWhenDefsAreOutOfDate )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WarnWhenDefsAreOutOfDate )( 
            IPoliciesControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrayIconVisibility )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrayIconVisibility )( 
            IPoliciesControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CloseNotifyTimeout )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CloseNotifyTimeout )( 
            IPoliciesControllerV3 * This,
            /* [in] */ unsigned long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserInterfaceVisibility )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UserInterfaceVisibility )( 
            IPoliciesControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Password )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ BSTR *pPassword);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Password )( 
            IPoliciesControllerV3 * This,
            /* [in] */ BSTR pPassword);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowSystemTrayNotification )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowSystemTrayNotification )( 
            IPoliciesControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyPort )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyPort )( 
            IPoliciesControllerV3 * This,
            /* [in] */ unsigned long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyServer )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ BSTR *pPassword);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyServer )( 
            IPoliciesControllerV3 * This,
            /* [in] */ BSTR pPassword);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RebootVisibility )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RebootVisibility )( 
            IPoliciesControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableContextMenu )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableContextMenu )( 
            IPoliciesControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayLanguage )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ BSTR *pDisplayLanguage);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayLanguage )( 
            IPoliciesControllerV3 * This,
            /* [in] */ BSTR pDisplayLanguage);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RestrictAccess )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RestrictAccess )( 
            IPoliciesControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UseProxyServer )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UseProxyServer )( 
            IPoliciesControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyNeedAuth )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyNeedAuth )( 
            IPoliciesControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyUserName )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ BSTR *ProxyUserName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyUserName )( 
            IPoliciesControllerV3 * This,
            /* [in] */ BSTR ProxyUserName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyPassword )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ BSTR *ProxyPassword);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyPassword )( 
            IPoliciesControllerV3 * This,
            /* [in] */ BSTR ProxyPassword);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NotifyWhenFullUpdatesAvailable )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NotifyWhenFullUpdatesAvailable )( 
            IPoliciesControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CheckPassword )( 
            IPoliciesControllerV3 * This,
            /* [in] */ BSTR Password,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectedAreas )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProtectedAreas )( 
            IPoliciesControllerV3 * This,
            /* [in] */ unsigned long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExportEventLogData )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExportEventLogData )( 
            IPoliciesControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStartService )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStartService )( 
            IPoliciesControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowRealTimeNotification )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowRealTimeNotification )( 
            IPoliciesControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RealTimeNotificationWait )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfigV2 )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ PoliciesConfigV2 *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfigV2 )( 
            IPoliciesControllerV3 * This,
            /* [in] */ PoliciesConfigV2 *pConfig);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStartServiceOverride )( 
            IPoliciesControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStartServiceOverride )( 
            IPoliciesControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            IPoliciesControllerV3 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        END_INTERFACE
    } IPoliciesControllerV3Vtbl;

    interface IPoliciesControllerV3
    {
        CONST_VTBL struct IPoliciesControllerV3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPoliciesControllerV3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPoliciesControllerV3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPoliciesControllerV3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPoliciesControllerV3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IPoliciesControllerV3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IPoliciesControllerV3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IPoliciesControllerV3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IPoliciesControllerV3_Start(This,pImplFolderPath,pDataPath,pLogController)	\
    ( (This)->lpVtbl -> Start(This,pImplFolderPath,pDataPath,pLogController) ) 

#define IPoliciesControllerV3_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define IPoliciesControllerV3_GetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfig(This,pConfig) ) 

#define IPoliciesControllerV3_SetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfig(This,pConfig) ) 

#define IPoliciesControllerV3_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IPoliciesControllerV3_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IPoliciesControllerV3_get_WarnWhenDefsAreOutOfDate(This,pVal)	\
    ( (This)->lpVtbl -> get_WarnWhenDefsAreOutOfDate(This,pVal) ) 

#define IPoliciesControllerV3_put_WarnWhenDefsAreOutOfDate(This,pVal)	\
    ( (This)->lpVtbl -> put_WarnWhenDefsAreOutOfDate(This,pVal) ) 

#define IPoliciesControllerV3_get_TrayIconVisibility(This,pVal)	\
    ( (This)->lpVtbl -> get_TrayIconVisibility(This,pVal) ) 

#define IPoliciesControllerV3_put_TrayIconVisibility(This,pVal)	\
    ( (This)->lpVtbl -> put_TrayIconVisibility(This,pVal) ) 

#define IPoliciesControllerV3_get_CloseNotifyTimeout(This,pVal)	\
    ( (This)->lpVtbl -> get_CloseNotifyTimeout(This,pVal) ) 

#define IPoliciesControllerV3_put_CloseNotifyTimeout(This,pVal)	\
    ( (This)->lpVtbl -> put_CloseNotifyTimeout(This,pVal) ) 

#define IPoliciesControllerV3_get_UserInterfaceVisibility(This,pVal)	\
    ( (This)->lpVtbl -> get_UserInterfaceVisibility(This,pVal) ) 

#define IPoliciesControllerV3_put_UserInterfaceVisibility(This,pVal)	\
    ( (This)->lpVtbl -> put_UserInterfaceVisibility(This,pVal) ) 

#define IPoliciesControllerV3_get_Password(This,pPassword)	\
    ( (This)->lpVtbl -> get_Password(This,pPassword) ) 

#define IPoliciesControllerV3_put_Password(This,pPassword)	\
    ( (This)->lpVtbl -> put_Password(This,pPassword) ) 

#define IPoliciesControllerV3_get_ShowSystemTrayNotification(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowSystemTrayNotification(This,pVal) ) 

#define IPoliciesControllerV3_put_ShowSystemTrayNotification(This,pVal)	\
    ( (This)->lpVtbl -> put_ShowSystemTrayNotification(This,pVal) ) 

#define IPoliciesControllerV3_get_ProxyPort(This,pVal)	\
    ( (This)->lpVtbl -> get_ProxyPort(This,pVal) ) 

#define IPoliciesControllerV3_put_ProxyPort(This,pVal)	\
    ( (This)->lpVtbl -> put_ProxyPort(This,pVal) ) 

#define IPoliciesControllerV3_get_ProxyServer(This,pPassword)	\
    ( (This)->lpVtbl -> get_ProxyServer(This,pPassword) ) 

#define IPoliciesControllerV3_put_ProxyServer(This,pPassword)	\
    ( (This)->lpVtbl -> put_ProxyServer(This,pPassword) ) 

#define IPoliciesControllerV3_get_RebootVisibility(This,pVal)	\
    ( (This)->lpVtbl -> get_RebootVisibility(This,pVal) ) 

#define IPoliciesControllerV3_put_RebootVisibility(This,pVal)	\
    ( (This)->lpVtbl -> put_RebootVisibility(This,pVal) ) 

#define IPoliciesControllerV3_get_EnableContextMenu(This,pVal)	\
    ( (This)->lpVtbl -> get_EnableContextMenu(This,pVal) ) 

#define IPoliciesControllerV3_put_EnableContextMenu(This,pVal)	\
    ( (This)->lpVtbl -> put_EnableContextMenu(This,pVal) ) 

#define IPoliciesControllerV3_get_DisplayLanguage(This,pDisplayLanguage)	\
    ( (This)->lpVtbl -> get_DisplayLanguage(This,pDisplayLanguage) ) 

#define IPoliciesControllerV3_put_DisplayLanguage(This,pDisplayLanguage)	\
    ( (This)->lpVtbl -> put_DisplayLanguage(This,pDisplayLanguage) ) 

#define IPoliciesControllerV3_get_RestrictAccess(This,pVal)	\
    ( (This)->lpVtbl -> get_RestrictAccess(This,pVal) ) 

#define IPoliciesControllerV3_put_RestrictAccess(This,pVal)	\
    ( (This)->lpVtbl -> put_RestrictAccess(This,pVal) ) 

#define IPoliciesControllerV3_get_UseProxyServer(This,pVal)	\
    ( (This)->lpVtbl -> get_UseProxyServer(This,pVal) ) 

#define IPoliciesControllerV3_put_UseProxyServer(This,pVal)	\
    ( (This)->lpVtbl -> put_UseProxyServer(This,pVal) ) 

#define IPoliciesControllerV3_get_ProxyNeedAuth(This,pVal)	\
    ( (This)->lpVtbl -> get_ProxyNeedAuth(This,pVal) ) 

#define IPoliciesControllerV3_put_ProxyNeedAuth(This,pVal)	\
    ( (This)->lpVtbl -> put_ProxyNeedAuth(This,pVal) ) 

#define IPoliciesControllerV3_get_ProxyUserName(This,ProxyUserName)	\
    ( (This)->lpVtbl -> get_ProxyUserName(This,ProxyUserName) ) 

#define IPoliciesControllerV3_put_ProxyUserName(This,ProxyUserName)	\
    ( (This)->lpVtbl -> put_ProxyUserName(This,ProxyUserName) ) 

#define IPoliciesControllerV3_get_ProxyPassword(This,ProxyPassword)	\
    ( (This)->lpVtbl -> get_ProxyPassword(This,ProxyPassword) ) 

#define IPoliciesControllerV3_put_ProxyPassword(This,ProxyPassword)	\
    ( (This)->lpVtbl -> put_ProxyPassword(This,ProxyPassword) ) 

#define IPoliciesControllerV3_get_NotifyWhenFullUpdatesAvailable(This,pVal)	\
    ( (This)->lpVtbl -> get_NotifyWhenFullUpdatesAvailable(This,pVal) ) 

#define IPoliciesControllerV3_put_NotifyWhenFullUpdatesAvailable(This,pVal)	\
    ( (This)->lpVtbl -> put_NotifyWhenFullUpdatesAvailable(This,pVal) ) 

#define IPoliciesControllerV3_CheckPassword(This,Password,pVal)	\
    ( (This)->lpVtbl -> CheckPassword(This,Password,pVal) ) 

#define IPoliciesControllerV3_get_ProtectedAreas(This,pVal)	\
    ( (This)->lpVtbl -> get_ProtectedAreas(This,pVal) ) 

#define IPoliciesControllerV3_put_ProtectedAreas(This,pVal)	\
    ( (This)->lpVtbl -> put_ProtectedAreas(This,pVal) ) 

#define IPoliciesControllerV3_get_ExportEventLogData(This,pVal)	\
    ( (This)->lpVtbl -> get_ExportEventLogData(This,pVal) ) 

#define IPoliciesControllerV3_put_ExportEventLogData(This,pVal)	\
    ( (This)->lpVtbl -> put_ExportEventLogData(This,pVal) ) 

#define IPoliciesControllerV3_get_AutoStartService(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoStartService(This,pVal) ) 

#define IPoliciesControllerV3_put_AutoStartService(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoStartService(This,pVal) ) 


#define IPoliciesControllerV3_get_ShowRealTimeNotification(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowRealTimeNotification(This,pVal) ) 

#define IPoliciesControllerV3_put_ShowRealTimeNotification(This,pVal)	\
    ( (This)->lpVtbl -> put_ShowRealTimeNotification(This,pVal) ) 

#define IPoliciesControllerV3_get_RealTimeNotificationWait(This,pVal)	\
    ( (This)->lpVtbl -> get_RealTimeNotificationWait(This,pVal) ) 

#define IPoliciesControllerV3_GetConfigV2(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfigV2(This,pConfig) ) 

#define IPoliciesControllerV3_SetConfigV2(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfigV2(This,pConfig) ) 


#define IPoliciesControllerV3_get_AutoStartServiceOverride(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoStartServiceOverride(This,pVal) ) 

#define IPoliciesControllerV3_put_AutoStartServiceOverride(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoStartServiceOverride(This,pVal) ) 

#define IPoliciesControllerV3_StartV2(This,pImplFolderPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV2(This,pImplFolderPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPoliciesControllerV3_INTERFACE_DEFINED__ */


#ifndef __IPoliciesControllerV4_INTERFACE_DEFINED__
#define __IPoliciesControllerV4_INTERFACE_DEFINED__

/* interface IPoliciesControllerV4 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IPoliciesControllerV4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A583D5DD-F005-4D17-B564-5B594BB58339")
    IPoliciesControllerV4 : public IPoliciesControllerV3
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SaveClientData( 
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pClientData) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE LoadClientData( 
            /* [in] */ BSTR pClientID,
            /* [retval][out] */ BSTR *pClientData) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IPoliciesControllerV4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPoliciesControllerV4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPoliciesControllerV4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPoliciesControllerV4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IPoliciesControllerV4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IPoliciesControllerV4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IPoliciesControllerV4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IPoliciesControllerV4 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IPoliciesControllerV4 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IPoliciesControllerV4 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfig )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ PoliciesConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfig )( 
            IPoliciesControllerV4 * This,
            /* [in] */ PoliciesConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IPoliciesControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IPoliciesControllerV4 * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WarnWhenDefsAreOutOfDate )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WarnWhenDefsAreOutOfDate )( 
            IPoliciesControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrayIconVisibility )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrayIconVisibility )( 
            IPoliciesControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CloseNotifyTimeout )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CloseNotifyTimeout )( 
            IPoliciesControllerV4 * This,
            /* [in] */ unsigned long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserInterfaceVisibility )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UserInterfaceVisibility )( 
            IPoliciesControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Password )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ BSTR *pPassword);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Password )( 
            IPoliciesControllerV4 * This,
            /* [in] */ BSTR pPassword);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowSystemTrayNotification )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowSystemTrayNotification )( 
            IPoliciesControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyPort )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyPort )( 
            IPoliciesControllerV4 * This,
            /* [in] */ unsigned long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyServer )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ BSTR *pPassword);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyServer )( 
            IPoliciesControllerV4 * This,
            /* [in] */ BSTR pPassword);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RebootVisibility )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RebootVisibility )( 
            IPoliciesControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableContextMenu )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableContextMenu )( 
            IPoliciesControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayLanguage )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ BSTR *pDisplayLanguage);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayLanguage )( 
            IPoliciesControllerV4 * This,
            /* [in] */ BSTR pDisplayLanguage);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RestrictAccess )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RestrictAccess )( 
            IPoliciesControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UseProxyServer )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UseProxyServer )( 
            IPoliciesControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyNeedAuth )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyNeedAuth )( 
            IPoliciesControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyUserName )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ BSTR *ProxyUserName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyUserName )( 
            IPoliciesControllerV4 * This,
            /* [in] */ BSTR ProxyUserName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyPassword )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ BSTR *ProxyPassword);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyPassword )( 
            IPoliciesControllerV4 * This,
            /* [in] */ BSTR ProxyPassword);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NotifyWhenFullUpdatesAvailable )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NotifyWhenFullUpdatesAvailable )( 
            IPoliciesControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CheckPassword )( 
            IPoliciesControllerV4 * This,
            /* [in] */ BSTR Password,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectedAreas )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProtectedAreas )( 
            IPoliciesControllerV4 * This,
            /* [in] */ unsigned long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExportEventLogData )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExportEventLogData )( 
            IPoliciesControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStartService )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStartService )( 
            IPoliciesControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowRealTimeNotification )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowRealTimeNotification )( 
            IPoliciesControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RealTimeNotificationWait )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfigV2 )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ PoliciesConfigV2 *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfigV2 )( 
            IPoliciesControllerV4 * This,
            /* [in] */ PoliciesConfigV2 *pConfig);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStartServiceOverride )( 
            IPoliciesControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStartServiceOverride )( 
            IPoliciesControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            IPoliciesControllerV4 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SaveClientData )( 
            IPoliciesControllerV4 * This,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pClientData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *LoadClientData )( 
            IPoliciesControllerV4 * This,
            /* [in] */ BSTR pClientID,
            /* [retval][out] */ BSTR *pClientData);
        
        END_INTERFACE
    } IPoliciesControllerV4Vtbl;

    interface IPoliciesControllerV4
    {
        CONST_VTBL struct IPoliciesControllerV4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPoliciesControllerV4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPoliciesControllerV4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPoliciesControllerV4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPoliciesControllerV4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IPoliciesControllerV4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IPoliciesControllerV4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IPoliciesControllerV4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IPoliciesControllerV4_Start(This,pImplFolderPath,pDataPath,pLogController)	\
    ( (This)->lpVtbl -> Start(This,pImplFolderPath,pDataPath,pLogController) ) 

#define IPoliciesControllerV4_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define IPoliciesControllerV4_GetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfig(This,pConfig) ) 

#define IPoliciesControllerV4_SetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfig(This,pConfig) ) 

#define IPoliciesControllerV4_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IPoliciesControllerV4_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IPoliciesControllerV4_get_WarnWhenDefsAreOutOfDate(This,pVal)	\
    ( (This)->lpVtbl -> get_WarnWhenDefsAreOutOfDate(This,pVal) ) 

#define IPoliciesControllerV4_put_WarnWhenDefsAreOutOfDate(This,pVal)	\
    ( (This)->lpVtbl -> put_WarnWhenDefsAreOutOfDate(This,pVal) ) 

#define IPoliciesControllerV4_get_TrayIconVisibility(This,pVal)	\
    ( (This)->lpVtbl -> get_TrayIconVisibility(This,pVal) ) 

#define IPoliciesControllerV4_put_TrayIconVisibility(This,pVal)	\
    ( (This)->lpVtbl -> put_TrayIconVisibility(This,pVal) ) 

#define IPoliciesControllerV4_get_CloseNotifyTimeout(This,pVal)	\
    ( (This)->lpVtbl -> get_CloseNotifyTimeout(This,pVal) ) 

#define IPoliciesControllerV4_put_CloseNotifyTimeout(This,pVal)	\
    ( (This)->lpVtbl -> put_CloseNotifyTimeout(This,pVal) ) 

#define IPoliciesControllerV4_get_UserInterfaceVisibility(This,pVal)	\
    ( (This)->lpVtbl -> get_UserInterfaceVisibility(This,pVal) ) 

#define IPoliciesControllerV4_put_UserInterfaceVisibility(This,pVal)	\
    ( (This)->lpVtbl -> put_UserInterfaceVisibility(This,pVal) ) 

#define IPoliciesControllerV4_get_Password(This,pPassword)	\
    ( (This)->lpVtbl -> get_Password(This,pPassword) ) 

#define IPoliciesControllerV4_put_Password(This,pPassword)	\
    ( (This)->lpVtbl -> put_Password(This,pPassword) ) 

#define IPoliciesControllerV4_get_ShowSystemTrayNotification(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowSystemTrayNotification(This,pVal) ) 

#define IPoliciesControllerV4_put_ShowSystemTrayNotification(This,pVal)	\
    ( (This)->lpVtbl -> put_ShowSystemTrayNotification(This,pVal) ) 

#define IPoliciesControllerV4_get_ProxyPort(This,pVal)	\
    ( (This)->lpVtbl -> get_ProxyPort(This,pVal) ) 

#define IPoliciesControllerV4_put_ProxyPort(This,pVal)	\
    ( (This)->lpVtbl -> put_ProxyPort(This,pVal) ) 

#define IPoliciesControllerV4_get_ProxyServer(This,pPassword)	\
    ( (This)->lpVtbl -> get_ProxyServer(This,pPassword) ) 

#define IPoliciesControllerV4_put_ProxyServer(This,pPassword)	\
    ( (This)->lpVtbl -> put_ProxyServer(This,pPassword) ) 

#define IPoliciesControllerV4_get_RebootVisibility(This,pVal)	\
    ( (This)->lpVtbl -> get_RebootVisibility(This,pVal) ) 

#define IPoliciesControllerV4_put_RebootVisibility(This,pVal)	\
    ( (This)->lpVtbl -> put_RebootVisibility(This,pVal) ) 

#define IPoliciesControllerV4_get_EnableContextMenu(This,pVal)	\
    ( (This)->lpVtbl -> get_EnableContextMenu(This,pVal) ) 

#define IPoliciesControllerV4_put_EnableContextMenu(This,pVal)	\
    ( (This)->lpVtbl -> put_EnableContextMenu(This,pVal) ) 

#define IPoliciesControllerV4_get_DisplayLanguage(This,pDisplayLanguage)	\
    ( (This)->lpVtbl -> get_DisplayLanguage(This,pDisplayLanguage) ) 

#define IPoliciesControllerV4_put_DisplayLanguage(This,pDisplayLanguage)	\
    ( (This)->lpVtbl -> put_DisplayLanguage(This,pDisplayLanguage) ) 

#define IPoliciesControllerV4_get_RestrictAccess(This,pVal)	\
    ( (This)->lpVtbl -> get_RestrictAccess(This,pVal) ) 

#define IPoliciesControllerV4_put_RestrictAccess(This,pVal)	\
    ( (This)->lpVtbl -> put_RestrictAccess(This,pVal) ) 

#define IPoliciesControllerV4_get_UseProxyServer(This,pVal)	\
    ( (This)->lpVtbl -> get_UseProxyServer(This,pVal) ) 

#define IPoliciesControllerV4_put_UseProxyServer(This,pVal)	\
    ( (This)->lpVtbl -> put_UseProxyServer(This,pVal) ) 

#define IPoliciesControllerV4_get_ProxyNeedAuth(This,pVal)	\
    ( (This)->lpVtbl -> get_ProxyNeedAuth(This,pVal) ) 

#define IPoliciesControllerV4_put_ProxyNeedAuth(This,pVal)	\
    ( (This)->lpVtbl -> put_ProxyNeedAuth(This,pVal) ) 

#define IPoliciesControllerV4_get_ProxyUserName(This,ProxyUserName)	\
    ( (This)->lpVtbl -> get_ProxyUserName(This,ProxyUserName) ) 

#define IPoliciesControllerV4_put_ProxyUserName(This,ProxyUserName)	\
    ( (This)->lpVtbl -> put_ProxyUserName(This,ProxyUserName) ) 

#define IPoliciesControllerV4_get_ProxyPassword(This,ProxyPassword)	\
    ( (This)->lpVtbl -> get_ProxyPassword(This,ProxyPassword) ) 

#define IPoliciesControllerV4_put_ProxyPassword(This,ProxyPassword)	\
    ( (This)->lpVtbl -> put_ProxyPassword(This,ProxyPassword) ) 

#define IPoliciesControllerV4_get_NotifyWhenFullUpdatesAvailable(This,pVal)	\
    ( (This)->lpVtbl -> get_NotifyWhenFullUpdatesAvailable(This,pVal) ) 

#define IPoliciesControllerV4_put_NotifyWhenFullUpdatesAvailable(This,pVal)	\
    ( (This)->lpVtbl -> put_NotifyWhenFullUpdatesAvailable(This,pVal) ) 

#define IPoliciesControllerV4_CheckPassword(This,Password,pVal)	\
    ( (This)->lpVtbl -> CheckPassword(This,Password,pVal) ) 

#define IPoliciesControllerV4_get_ProtectedAreas(This,pVal)	\
    ( (This)->lpVtbl -> get_ProtectedAreas(This,pVal) ) 

#define IPoliciesControllerV4_put_ProtectedAreas(This,pVal)	\
    ( (This)->lpVtbl -> put_ProtectedAreas(This,pVal) ) 

#define IPoliciesControllerV4_get_ExportEventLogData(This,pVal)	\
    ( (This)->lpVtbl -> get_ExportEventLogData(This,pVal) ) 

#define IPoliciesControllerV4_put_ExportEventLogData(This,pVal)	\
    ( (This)->lpVtbl -> put_ExportEventLogData(This,pVal) ) 

#define IPoliciesControllerV4_get_AutoStartService(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoStartService(This,pVal) ) 

#define IPoliciesControllerV4_put_AutoStartService(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoStartService(This,pVal) ) 


#define IPoliciesControllerV4_get_ShowRealTimeNotification(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowRealTimeNotification(This,pVal) ) 

#define IPoliciesControllerV4_put_ShowRealTimeNotification(This,pVal)	\
    ( (This)->lpVtbl -> put_ShowRealTimeNotification(This,pVal) ) 

#define IPoliciesControllerV4_get_RealTimeNotificationWait(This,pVal)	\
    ( (This)->lpVtbl -> get_RealTimeNotificationWait(This,pVal) ) 

#define IPoliciesControllerV4_GetConfigV2(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfigV2(This,pConfig) ) 

#define IPoliciesControllerV4_SetConfigV2(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfigV2(This,pConfig) ) 


#define IPoliciesControllerV4_get_AutoStartServiceOverride(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoStartServiceOverride(This,pVal) ) 

#define IPoliciesControllerV4_put_AutoStartServiceOverride(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoStartServiceOverride(This,pVal) ) 

#define IPoliciesControllerV4_StartV2(This,pImplFolderPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV2(This,pImplFolderPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild) ) 


#define IPoliciesControllerV4_SaveClientData(This,pClientID,pClientData)	\
    ( (This)->lpVtbl -> SaveClientData(This,pClientID,pClientData) ) 

#define IPoliciesControllerV4_LoadClientData(This,pClientID,pClientData)	\
    ( (This)->lpVtbl -> LoadClientData(This,pClientID,pClientData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPoliciesControllerV4_INTERFACE_DEFINED__ */


#ifndef __IPoliciesControllerV5_INTERFACE_DEFINED__
#define __IPoliciesControllerV5_INTERFACE_DEFINED__

/* interface IPoliciesControllerV5 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IPoliciesControllerV5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ADCD8BEB-8924-4876-AE14-2438FF14FA17")
    IPoliciesControllerV5 : public IPoliciesControllerV4
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_UseAlternateURLs( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_UseAlternateURLs( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IPoliciesControllerV5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPoliciesControllerV5 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPoliciesControllerV5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPoliciesControllerV5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IPoliciesControllerV5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IPoliciesControllerV5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IPoliciesControllerV5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IPoliciesControllerV5 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IPoliciesControllerV5 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IPoliciesControllerV5 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfig )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ PoliciesConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfig )( 
            IPoliciesControllerV5 * This,
            /* [in] */ PoliciesConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IPoliciesControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IPoliciesControllerV5 * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WarnWhenDefsAreOutOfDate )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WarnWhenDefsAreOutOfDate )( 
            IPoliciesControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TrayIconVisibility )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_TrayIconVisibility )( 
            IPoliciesControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CloseNotifyTimeout )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CloseNotifyTimeout )( 
            IPoliciesControllerV5 * This,
            /* [in] */ unsigned long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserInterfaceVisibility )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UserInterfaceVisibility )( 
            IPoliciesControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Password )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ BSTR *pPassword);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Password )( 
            IPoliciesControllerV5 * This,
            /* [in] */ BSTR pPassword);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowSystemTrayNotification )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowSystemTrayNotification )( 
            IPoliciesControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyPort )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyPort )( 
            IPoliciesControllerV5 * This,
            /* [in] */ unsigned long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyServer )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ BSTR *pPassword);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyServer )( 
            IPoliciesControllerV5 * This,
            /* [in] */ BSTR pPassword);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RebootVisibility )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RebootVisibility )( 
            IPoliciesControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableContextMenu )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableContextMenu )( 
            IPoliciesControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DisplayLanguage )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ BSTR *pDisplayLanguage);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_DisplayLanguage )( 
            IPoliciesControllerV5 * This,
            /* [in] */ BSTR pDisplayLanguage);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RestrictAccess )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RestrictAccess )( 
            IPoliciesControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UseProxyServer )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UseProxyServer )( 
            IPoliciesControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyNeedAuth )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyNeedAuth )( 
            IPoliciesControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyUserName )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ BSTR *ProxyUserName);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyUserName )( 
            IPoliciesControllerV5 * This,
            /* [in] */ BSTR ProxyUserName);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProxyPassword )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ BSTR *ProxyPassword);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProxyPassword )( 
            IPoliciesControllerV5 * This,
            /* [in] */ BSTR ProxyPassword);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NotifyWhenFullUpdatesAvailable )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_NotifyWhenFullUpdatesAvailable )( 
            IPoliciesControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CheckPassword )( 
            IPoliciesControllerV5 * This,
            /* [in] */ BSTR Password,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectedAreas )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ProtectedAreas )( 
            IPoliciesControllerV5 * This,
            /* [in] */ unsigned long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ExportEventLogData )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ExportEventLogData )( 
            IPoliciesControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStartService )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStartService )( 
            IPoliciesControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ShowRealTimeNotification )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ShowRealTimeNotification )( 
            IPoliciesControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RealTimeNotificationWait )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ unsigned long *pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfigV2 )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ PoliciesConfigV2 *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfigV2 )( 
            IPoliciesControllerV5 * This,
            /* [in] */ PoliciesConfigV2 *pConfig);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoStartServiceOverride )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoStartServiceOverride )( 
            IPoliciesControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            IPoliciesControllerV5 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SaveClientData )( 
            IPoliciesControllerV5 * This,
            /* [in] */ BSTR pClientID,
            /* [in] */ BSTR pClientData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *LoadClientData )( 
            IPoliciesControllerV5 * This,
            /* [in] */ BSTR pClientID,
            /* [retval][out] */ BSTR *pClientData);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UseAlternateURLs )( 
            IPoliciesControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_UseAlternateURLs )( 
            IPoliciesControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        END_INTERFACE
    } IPoliciesControllerV5Vtbl;

    interface IPoliciesControllerV5
    {
        CONST_VTBL struct IPoliciesControllerV5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPoliciesControllerV5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPoliciesControllerV5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPoliciesControllerV5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPoliciesControllerV5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IPoliciesControllerV5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IPoliciesControllerV5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IPoliciesControllerV5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IPoliciesControllerV5_Start(This,pImplFolderPath,pDataPath,pLogController)	\
    ( (This)->lpVtbl -> Start(This,pImplFolderPath,pDataPath,pLogController) ) 

#define IPoliciesControllerV5_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define IPoliciesControllerV5_GetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfig(This,pConfig) ) 

#define IPoliciesControllerV5_SetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfig(This,pConfig) ) 

#define IPoliciesControllerV5_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IPoliciesControllerV5_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IPoliciesControllerV5_get_WarnWhenDefsAreOutOfDate(This,pVal)	\
    ( (This)->lpVtbl -> get_WarnWhenDefsAreOutOfDate(This,pVal) ) 

#define IPoliciesControllerV5_put_WarnWhenDefsAreOutOfDate(This,pVal)	\
    ( (This)->lpVtbl -> put_WarnWhenDefsAreOutOfDate(This,pVal) ) 

#define IPoliciesControllerV5_get_TrayIconVisibility(This,pVal)	\
    ( (This)->lpVtbl -> get_TrayIconVisibility(This,pVal) ) 

#define IPoliciesControllerV5_put_TrayIconVisibility(This,pVal)	\
    ( (This)->lpVtbl -> put_TrayIconVisibility(This,pVal) ) 

#define IPoliciesControllerV5_get_CloseNotifyTimeout(This,pVal)	\
    ( (This)->lpVtbl -> get_CloseNotifyTimeout(This,pVal) ) 

#define IPoliciesControllerV5_put_CloseNotifyTimeout(This,pVal)	\
    ( (This)->lpVtbl -> put_CloseNotifyTimeout(This,pVal) ) 

#define IPoliciesControllerV5_get_UserInterfaceVisibility(This,pVal)	\
    ( (This)->lpVtbl -> get_UserInterfaceVisibility(This,pVal) ) 

#define IPoliciesControllerV5_put_UserInterfaceVisibility(This,pVal)	\
    ( (This)->lpVtbl -> put_UserInterfaceVisibility(This,pVal) ) 

#define IPoliciesControllerV5_get_Password(This,pPassword)	\
    ( (This)->lpVtbl -> get_Password(This,pPassword) ) 

#define IPoliciesControllerV5_put_Password(This,pPassword)	\
    ( (This)->lpVtbl -> put_Password(This,pPassword) ) 

#define IPoliciesControllerV5_get_ShowSystemTrayNotification(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowSystemTrayNotification(This,pVal) ) 

#define IPoliciesControllerV5_put_ShowSystemTrayNotification(This,pVal)	\
    ( (This)->lpVtbl -> put_ShowSystemTrayNotification(This,pVal) ) 

#define IPoliciesControllerV5_get_ProxyPort(This,pVal)	\
    ( (This)->lpVtbl -> get_ProxyPort(This,pVal) ) 

#define IPoliciesControllerV5_put_ProxyPort(This,pVal)	\
    ( (This)->lpVtbl -> put_ProxyPort(This,pVal) ) 

#define IPoliciesControllerV5_get_ProxyServer(This,pPassword)	\
    ( (This)->lpVtbl -> get_ProxyServer(This,pPassword) ) 

#define IPoliciesControllerV5_put_ProxyServer(This,pPassword)	\
    ( (This)->lpVtbl -> put_ProxyServer(This,pPassword) ) 

#define IPoliciesControllerV5_get_RebootVisibility(This,pVal)	\
    ( (This)->lpVtbl -> get_RebootVisibility(This,pVal) ) 

#define IPoliciesControllerV5_put_RebootVisibility(This,pVal)	\
    ( (This)->lpVtbl -> put_RebootVisibility(This,pVal) ) 

#define IPoliciesControllerV5_get_EnableContextMenu(This,pVal)	\
    ( (This)->lpVtbl -> get_EnableContextMenu(This,pVal) ) 

#define IPoliciesControllerV5_put_EnableContextMenu(This,pVal)	\
    ( (This)->lpVtbl -> put_EnableContextMenu(This,pVal) ) 

#define IPoliciesControllerV5_get_DisplayLanguage(This,pDisplayLanguage)	\
    ( (This)->lpVtbl -> get_DisplayLanguage(This,pDisplayLanguage) ) 

#define IPoliciesControllerV5_put_DisplayLanguage(This,pDisplayLanguage)	\
    ( (This)->lpVtbl -> put_DisplayLanguage(This,pDisplayLanguage) ) 

#define IPoliciesControllerV5_get_RestrictAccess(This,pVal)	\
    ( (This)->lpVtbl -> get_RestrictAccess(This,pVal) ) 

#define IPoliciesControllerV5_put_RestrictAccess(This,pVal)	\
    ( (This)->lpVtbl -> put_RestrictAccess(This,pVal) ) 

#define IPoliciesControllerV5_get_UseProxyServer(This,pVal)	\
    ( (This)->lpVtbl -> get_UseProxyServer(This,pVal) ) 

#define IPoliciesControllerV5_put_UseProxyServer(This,pVal)	\
    ( (This)->lpVtbl -> put_UseProxyServer(This,pVal) ) 

#define IPoliciesControllerV5_get_ProxyNeedAuth(This,pVal)	\
    ( (This)->lpVtbl -> get_ProxyNeedAuth(This,pVal) ) 

#define IPoliciesControllerV5_put_ProxyNeedAuth(This,pVal)	\
    ( (This)->lpVtbl -> put_ProxyNeedAuth(This,pVal) ) 

#define IPoliciesControllerV5_get_ProxyUserName(This,ProxyUserName)	\
    ( (This)->lpVtbl -> get_ProxyUserName(This,ProxyUserName) ) 

#define IPoliciesControllerV5_put_ProxyUserName(This,ProxyUserName)	\
    ( (This)->lpVtbl -> put_ProxyUserName(This,ProxyUserName) ) 

#define IPoliciesControllerV5_get_ProxyPassword(This,ProxyPassword)	\
    ( (This)->lpVtbl -> get_ProxyPassword(This,ProxyPassword) ) 

#define IPoliciesControllerV5_put_ProxyPassword(This,ProxyPassword)	\
    ( (This)->lpVtbl -> put_ProxyPassword(This,ProxyPassword) ) 

#define IPoliciesControllerV5_get_NotifyWhenFullUpdatesAvailable(This,pVal)	\
    ( (This)->lpVtbl -> get_NotifyWhenFullUpdatesAvailable(This,pVal) ) 

#define IPoliciesControllerV5_put_NotifyWhenFullUpdatesAvailable(This,pVal)	\
    ( (This)->lpVtbl -> put_NotifyWhenFullUpdatesAvailable(This,pVal) ) 

#define IPoliciesControllerV5_CheckPassword(This,Password,pVal)	\
    ( (This)->lpVtbl -> CheckPassword(This,Password,pVal) ) 

#define IPoliciesControllerV5_get_ProtectedAreas(This,pVal)	\
    ( (This)->lpVtbl -> get_ProtectedAreas(This,pVal) ) 

#define IPoliciesControllerV5_put_ProtectedAreas(This,pVal)	\
    ( (This)->lpVtbl -> put_ProtectedAreas(This,pVal) ) 

#define IPoliciesControllerV5_get_ExportEventLogData(This,pVal)	\
    ( (This)->lpVtbl -> get_ExportEventLogData(This,pVal) ) 

#define IPoliciesControllerV5_put_ExportEventLogData(This,pVal)	\
    ( (This)->lpVtbl -> put_ExportEventLogData(This,pVal) ) 

#define IPoliciesControllerV5_get_AutoStartService(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoStartService(This,pVal) ) 

#define IPoliciesControllerV5_put_AutoStartService(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoStartService(This,pVal) ) 


#define IPoliciesControllerV5_get_ShowRealTimeNotification(This,pVal)	\
    ( (This)->lpVtbl -> get_ShowRealTimeNotification(This,pVal) ) 

#define IPoliciesControllerV5_put_ShowRealTimeNotification(This,pVal)	\
    ( (This)->lpVtbl -> put_ShowRealTimeNotification(This,pVal) ) 

#define IPoliciesControllerV5_get_RealTimeNotificationWait(This,pVal)	\
    ( (This)->lpVtbl -> get_RealTimeNotificationWait(This,pVal) ) 

#define IPoliciesControllerV5_GetConfigV2(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfigV2(This,pConfig) ) 

#define IPoliciesControllerV5_SetConfigV2(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfigV2(This,pConfig) ) 


#define IPoliciesControllerV5_get_AutoStartServiceOverride(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoStartServiceOverride(This,pVal) ) 

#define IPoliciesControllerV5_put_AutoStartServiceOverride(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoStartServiceOverride(This,pVal) ) 

#define IPoliciesControllerV5_StartV2(This,pImplFolderPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV2(This,pImplFolderPath,pDataPath,pLogController,pProductCode,pProductVersion,pProductBuild) ) 


#define IPoliciesControllerV5_SaveClientData(This,pClientID,pClientData)	\
    ( (This)->lpVtbl -> SaveClientData(This,pClientID,pClientData) ) 

#define IPoliciesControllerV5_LoadClientData(This,pClientID,pClientData)	\
    ( (This)->lpVtbl -> LoadClientData(This,pClientID,pClientData) ) 


#define IPoliciesControllerV5_get_UseAlternateURLs(This,pVal)	\
    ( (This)->lpVtbl -> get_UseAlternateURLs(This,pVal) ) 

#define IPoliciesControllerV5_put_UseAlternateURLs(This,pVal)	\
    ( (This)->lpVtbl -> put_UseAlternateURLs(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPoliciesControllerV5_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_PoliciesController;

#ifdef __cplusplus

class DECLSPEC_UUID("9D372F21-E6DA-4B82-881A-79F6CA6B6AE1")
PoliciesController;
#endif
#endif /* __PoliciesControllerCOMLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


