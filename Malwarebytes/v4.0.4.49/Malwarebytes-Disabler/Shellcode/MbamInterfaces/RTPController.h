

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.01.0622 */
/* at Tue Jan 19 14:14:07 2038
 */
/* Compiler settings for C:\Users\User\source\repos\MBAMExploit\Typelibs\RTPController.IDL:
    Oicf, W1, Zp8, env=Win64 (32b run), target_arch=AMD64 8.01.0622 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#include "CleanController.h"
#include "CloudController.h"
#include "LicenseController.h"
#include "LogController.h"
#include "ScanController.h"
#include "TelemetryController.h"
#include "UpdateController.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */


#ifndef __RTPController_h__
#define __RTPController_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IRTPControllerEvents_FWD_DEFINED__
#define __IRTPControllerEvents_FWD_DEFINED__
typedef interface IRTPControllerEvents IRTPControllerEvents;

#endif 	/* __IRTPControllerEvents_FWD_DEFINED__ */


#ifndef ___IRTPControllerEvents_FWD_DEFINED__
#define ___IRTPControllerEvents_FWD_DEFINED__
typedef interface _IRTPControllerEvents _IRTPControllerEvents;

#endif 	/* ___IRTPControllerEvents_FWD_DEFINED__ */


#ifndef __IRTPController_FWD_DEFINED__
#define __IRTPController_FWD_DEFINED__
typedef interface IRTPController IRTPController;

#endif 	/* __IRTPController_FWD_DEFINED__ */


#ifndef __IRTPControllerV2_FWD_DEFINED__
#define __IRTPControllerV2_FWD_DEFINED__
typedef interface IRTPControllerV2 IRTPControllerV2;

#endif 	/* __IRTPControllerV2_FWD_DEFINED__ */


#ifndef __IRTPControllerV3_FWD_DEFINED__
#define __IRTPControllerV3_FWD_DEFINED__
typedef interface IRTPControllerV3 IRTPControllerV3;

#endif 	/* __IRTPControllerV3_FWD_DEFINED__ */


#ifndef __IRTPControllerV4_FWD_DEFINED__
#define __IRTPControllerV4_FWD_DEFINED__
typedef interface IRTPControllerV4 IRTPControllerV4;

#endif 	/* __IRTPControllerV4_FWD_DEFINED__ */


#ifndef __IRTPControllerV5_FWD_DEFINED__
#define __IRTPControllerV5_FWD_DEFINED__
typedef interface IRTPControllerV5 IRTPControllerV5;

#endif 	/* __IRTPControllerV5_FWD_DEFINED__ */


#ifndef __IRTPControllerV6_FWD_DEFINED__
#define __IRTPControllerV6_FWD_DEFINED__
typedef interface IRTPControllerV6 IRTPControllerV6;

#endif 	/* __IRTPControllerV6_FWD_DEFINED__ */


#ifndef __IRTPControllerV7_FWD_DEFINED__
#define __IRTPControllerV7_FWD_DEFINED__
typedef interface IRTPControllerV7 IRTPControllerV7;

#endif 	/* __IRTPControllerV7_FWD_DEFINED__ */


#ifndef __IRTPControllerEventsV2_FWD_DEFINED__
#define __IRTPControllerEventsV2_FWD_DEFINED__
typedef interface IRTPControllerEventsV2 IRTPControllerEventsV2;

#endif 	/* __IRTPControllerEventsV2_FWD_DEFINED__ */


#ifndef ___IRTPControllerEventsV2_FWD_DEFINED__
#define ___IRTPControllerEventsV2_FWD_DEFINED__
typedef interface _IRTPControllerEventsV2 _IRTPControllerEventsV2;

#endif 	/* ___IRTPControllerEventsV2_FWD_DEFINED__ */


#ifndef __IRTPControllerEventsV3_FWD_DEFINED__
#define __IRTPControllerEventsV3_FWD_DEFINED__
typedef interface IRTPControllerEventsV3 IRTPControllerEventsV3;

#endif 	/* __IRTPControllerEventsV3_FWD_DEFINED__ */


#ifndef ___IRTPControllerEventsV3_FWD_DEFINED__
#define ___IRTPControllerEventsV3_FWD_DEFINED__
typedef interface _IRTPControllerEventsV3 _IRTPControllerEventsV3;

#endif 	/* ___IRTPControllerEventsV3_FWD_DEFINED__ */


#ifndef __IRTPControllerEventsV4_FWD_DEFINED__
#define __IRTPControllerEventsV4_FWD_DEFINED__
typedef interface IRTPControllerEventsV4 IRTPControllerEventsV4;

#endif 	/* __IRTPControllerEventsV4_FWD_DEFINED__ */


#ifndef ___IRTPControllerEventsV4_FWD_DEFINED__
#define ___IRTPControllerEventsV4_FWD_DEFINED__
typedef interface _IRTPControllerEventsV4 _IRTPControllerEventsV4;

#endif 	/* ___IRTPControllerEventsV4_FWD_DEFINED__ */


#ifndef __IRTPControllerEventsV5_FWD_DEFINED__
#define __IRTPControllerEventsV5_FWD_DEFINED__
typedef interface IRTPControllerEventsV5 IRTPControllerEventsV5;

#endif 	/* __IRTPControllerEventsV5_FWD_DEFINED__ */


#ifndef ___IRTPControllerEventsV5_FWD_DEFINED__
#define ___IRTPControllerEventsV5_FWD_DEFINED__
typedef interface _IRTPControllerEventsV5 _IRTPControllerEventsV5;

#endif 	/* ___IRTPControllerEventsV5_FWD_DEFINED__ */


#ifndef __RTPController_FWD_DEFINED__
#define __RTPController_FWD_DEFINED__

#ifdef __cplusplus
typedef class RTPController RTPController;
#else
typedef struct RTPController RTPController;
#endif /* __cplusplus */

#endif 	/* __RTPController_FWD_DEFINED__ */


#ifdef __cplusplus
extern "C"{
#endif 



#ifndef __RTPControllerCOMLib_LIBRARY_DEFINED__
#define __RTPControllerCOMLib_LIBRARY_DEFINED__

/* library RTPControllerCOMLib */
/* [custom][custom][custom][version][uuid] */ 


















typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_RTPController_0000_0000_0001
    {
        RTPStateIdle	= 0,
        RTPStateEnabled	= 1,
        RTPStateDisabled	= 2,
        RTPStateError	= 3,
        RTPStateNotAvailable	= 4,
        RTPStateNotSupported	= 5
    } 	_RTPState;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_RTPController_0000_0000_0002
    {
        RTPActionAllow	= 0,
        RTPActionAllowAlways	= 1,
        RTPActionQuarantine	= 2
    } 	_RTPAction;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_RTPController_0000_0000_0003
    {
        RTPConfigOptionAutoClean	= 0,
        RTPConfigOptionCacheTime	= 1,
        RTPConfigOptionPUMHandling	= 2,
        RTPConfigOptionPUPHandling	= 3,
        RTPConfigOptionWACSetting	= 4
    } 	_RTPConfigOptions;

typedef /* [public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_RTPController_0000_0000_0004
    {
        RtpExclusionType_File	= 0,
        RtpExclusionType_Folder	= 1,
        RtpExclusionType_RegKey	= 2,
        RtpExclusionType_RegValue	= 3,
        RtpExclusionType_Extension	= 4,
        RtpExclusionType_Pattern	= 5,
        RtpExclusionType_DetectionName	= 6
    } 	_RtpExclusionType;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_RTPController_0000_0000_0005
    {
        RtpExclusionAdded	= 0,
        RtpExclusionRemoved	= 1,
        RtpExclusionUpdated	= 2,
        RtpExclusionsCleared	= 3
    } 	_RtpExclusionEventType;

typedef /* [public][public][public][public][public][public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_RTPController_0000_0000_0006
    {
        RtpPupPumHandling_Ignore	= 0,
        RtpPupPumHandling_Warn	= 1,
        RtpPupPumHandling_Detect	= 2
    } 	_RtpPupPumHandling;

typedef /* [public][public][public][public][public][public] */ 
enum __MIDL___MIDL_itf_RTPController_0000_0000_0007
    {
        RtpWACIntegrationSetting_Primary	= 0,
        RtpWACIntegrationSetting_Standard	= 1,
        RtpWACIntegrationSetting_Complimentary	= 2
    } 	_WACIntegrationSetting;

typedef /* [uuid] */  DECLSPEC_UUID("50CD3676-6810-44F4-8896-96C0430DBFC1") struct tagRTPConfig
    {
    VARIANT_BOOL AutoClean;
    long CacheTime;
    _RtpPupPumHandling PUMHandling;
    _RtpPupPumHandling PUPHandling;
    _WACIntegrationSetting WACSetting;
    } 	RTPConfig;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_RTPController_0001_0004_0001
    {
        RtpManualStop	= 0,
        RtpSystemStop	= 1
    } 	_RtpStopType;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_RTPController_0001_0006_0001
    {
        RTPStatusInactive	= 0,
        RTPStatusInitializing	= 1,
        RTPStatusStarting	= 2,
        RTPStatusStarted	= 3,
        RTPStatusStopping	= 4,
        RTPStatusStopped	= 5,
        RTPStatusError	= 6,
        RTPStatusNeedsReboot	= 7
    } 	_RTPStatus;


EXTERN_C const IID LIBID_RTPControllerCOMLib;

#ifndef __IRTPControllerEvents_INTERFACE_DEFINED__
#define __IRTPControllerEvents_INTERFACE_DEFINED__

/* interface IRTPControllerEvents */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IRTPControllerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7C710FA9-862A-40CF-9F54-063EF8FC8438")
    IRTPControllerEvents : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ThreatDetectedCallback( 
            /* [in] */ long ThreatId,
            /* [in] */ BSTR ThreatName,
            /* [in] */ long RuleId,
            /* [in] */ BSTR ObjectName) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StateChangedCallback( 
            /* [in] */ _RTPState rtpState) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ConfigOptionChanged( 
            /* [in] */ _RTPConfigOptions option,
            /* [in] */ VARIANT value) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PromptForActionCallback( 
            /* [in] */ unsigned long MessageId,
            /* [in] */ long ThreatId,
            /* [in] */ BSTR ThreatName,
            /* [in] */ long RuleId,
            /* [in] */ BSTR ObjectName) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ThreatCountChanged( 
            /* [in] */ UINT64 totalThreatsBlocked) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ExclusionNotification( 
            /* [in] */ _RtpExclusionEventType eventType,
            /* [in] */ BSTR pID,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR pPath) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IRTPControllerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRTPControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRTPControllerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRTPControllerEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRTPControllerEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRTPControllerEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRTPControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRTPControllerEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ThreatDetectedCallback )( 
            IRTPControllerEvents * This,
            /* [in] */ long ThreatId,
            /* [in] */ BSTR ThreatName,
            /* [in] */ long RuleId,
            /* [in] */ BSTR ObjectName);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StateChangedCallback )( 
            IRTPControllerEvents * This,
            /* [in] */ _RTPState rtpState);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ConfigOptionChanged )( 
            IRTPControllerEvents * This,
            /* [in] */ _RTPConfigOptions option,
            /* [in] */ VARIANT value);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PromptForActionCallback )( 
            IRTPControllerEvents * This,
            /* [in] */ unsigned long MessageId,
            /* [in] */ long ThreatId,
            /* [in] */ BSTR ThreatName,
            /* [in] */ long RuleId,
            /* [in] */ BSTR ObjectName);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ThreatCountChanged )( 
            IRTPControllerEvents * This,
            /* [in] */ UINT64 totalThreatsBlocked);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ExclusionNotification )( 
            IRTPControllerEvents * This,
            /* [in] */ _RtpExclusionEventType eventType,
            /* [in] */ BSTR pID,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR pPath);
        
        END_INTERFACE
    } IRTPControllerEventsVtbl;

    interface IRTPControllerEvents
    {
        CONST_VTBL struct IRTPControllerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRTPControllerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRTPControllerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRTPControllerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRTPControllerEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRTPControllerEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRTPControllerEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRTPControllerEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRTPControllerEvents_ThreatDetectedCallback(This,ThreatId,ThreatName,RuleId,ObjectName)	\
    ( (This)->lpVtbl -> ThreatDetectedCallback(This,ThreatId,ThreatName,RuleId,ObjectName) ) 

#define IRTPControllerEvents_StateChangedCallback(This,rtpState)	\
    ( (This)->lpVtbl -> StateChangedCallback(This,rtpState) ) 

#define IRTPControllerEvents_ConfigOptionChanged(This,option,value)	\
    ( (This)->lpVtbl -> ConfigOptionChanged(This,option,value) ) 

#define IRTPControllerEvents_PromptForActionCallback(This,MessageId,ThreatId,ThreatName,RuleId,ObjectName)	\
    ( (This)->lpVtbl -> PromptForActionCallback(This,MessageId,ThreatId,ThreatName,RuleId,ObjectName) ) 

#define IRTPControllerEvents_ThreatCountChanged(This,totalThreatsBlocked)	\
    ( (This)->lpVtbl -> ThreatCountChanged(This,totalThreatsBlocked) ) 

#define IRTPControllerEvents_ExclusionNotification(This,eventType,pID,type,pPath)	\
    ( (This)->lpVtbl -> ExclusionNotification(This,eventType,pID,type,pPath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRTPControllerEvents_INTERFACE_DEFINED__ */


#ifndef ___IRTPControllerEvents_DISPINTERFACE_DEFINED__
#define ___IRTPControllerEvents_DISPINTERFACE_DEFINED__

/* dispinterface _IRTPControllerEvents */
/* [uuid] */ 


EXTERN_C const IID DIID__IRTPControllerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("834906DC-FA0F-4F61-BC62-24B0BEB3769C")
    _IRTPControllerEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IRTPControllerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IRTPControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IRTPControllerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IRTPControllerEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IRTPControllerEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IRTPControllerEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IRTPControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IRTPControllerEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IRTPControllerEventsVtbl;

    interface _IRTPControllerEvents
    {
        CONST_VTBL struct _IRTPControllerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IRTPControllerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IRTPControllerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IRTPControllerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IRTPControllerEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IRTPControllerEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IRTPControllerEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IRTPControllerEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IRTPControllerEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IRTPController_INTERFACE_DEFINED__
#define __IRTPController_INTERFACE_DEFINED__

/* interface IRTPController */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IRTPController;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("18C5830A-FF78-4172-9DFB-E4016D1C1F31")
    IRTPController : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Start( 
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ BSTR pProductVersion) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Stop( 
            /* [in] */ long timeoutMs) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StartProtection( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StopProtection( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE EnableProtection( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DisableProtection( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetState( 
            /* [retval][out] */ _RTPState *pState) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SendReply( 
            /* [in] */ unsigned long MessageId,
            /* [in] */ _RTPAction reply) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetConfig( 
            /* [retval][out] */ RTPConfig *pConfig) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetConfig( 
            /* [in] */ RTPConfig *pConfig) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoClean( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoClean( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CacheTime( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_CacheTime( 
            /* [in] */ long pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PUMHandling( 
            /* [retval][out] */ _RtpPupPumHandling *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_PUMHandling( 
            /* [in] */ _RtpPupPumHandling pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_PUPHandling( 
            /* [retval][out] */ _RtpPupPumHandling *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_PUPHandling( 
            /* [in] */ _RtpPupPumHandling pVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddExclusion( 
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddExclusionEx( 
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path,
            /* [out] */ BSTR *ppID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RemoveExclusion( 
            /* [in] */ BSTR pID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE UpdateExclusion( 
            /* [in] */ BSTR pID,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNumExclusions( 
            /* [out] */ long *pNumExclusions) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetExclusionIDs( 
            /* [retval][out] */ SAFEARRAY * *ppExclusionIDs) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetExclusion( 
            /* [in] */ BSTR pID,
            /* [out] */ _RtpExclusionType *pType,
            /* [out] */ BSTR *ppPath) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ClearExclusions( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PrepareUpdate( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FinishUpdate( void) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_totalThreatsBlocked( 
            /* [retval][out] */ UINT64 *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_totalThreatsBlocked( 
            /* [in] */ UINT64 pVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_WACIntegrationSetting( 
            /* [retval][out] */ _WACIntegrationSetting *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_WACIntegrationSetting( 
            /* [in] */ _WACIntegrationSetting pVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IRTPControllerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRTPController * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRTPController * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRTPController * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRTPController * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRTPController * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRTPController * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRTPController * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IRTPController * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IRTPController * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartProtection )( 
            IRTPController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopProtection )( 
            IRTPController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EnableProtection )( 
            IRTPController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DisableProtection )( 
            IRTPController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IRTPController * This,
            /* [retval][out] */ _RTPState *pState);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SendReply )( 
            IRTPController * This,
            /* [in] */ unsigned long MessageId,
            /* [in] */ _RTPAction reply);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfig )( 
            IRTPController * This,
            /* [retval][out] */ RTPConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfig )( 
            IRTPController * This,
            /* [in] */ RTPConfig *pConfig);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoClean )( 
            IRTPController * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoClean )( 
            IRTPController * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CacheTime )( 
            IRTPController * This,
            /* [retval][out] */ long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CacheTime )( 
            IRTPController * This,
            /* [in] */ long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PUMHandling )( 
            IRTPController * This,
            /* [retval][out] */ _RtpPupPumHandling *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PUMHandling )( 
            IRTPController * This,
            /* [in] */ _RtpPupPumHandling pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PUPHandling )( 
            IRTPController * This,
            /* [retval][out] */ _RtpPupPumHandling *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PUPHandling )( 
            IRTPController * This,
            /* [in] */ _RtpPupPumHandling pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusion )( 
            IRTPController * This,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusionEx )( 
            IRTPController * This,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path,
            /* [out] */ BSTR *ppID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveExclusion )( 
            IRTPController * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *UpdateExclusion )( 
            IRTPController * This,
            /* [in] */ BSTR pID,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExclusions )( 
            IRTPController * This,
            /* [out] */ long *pNumExclusions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusionIDs )( 
            IRTPController * This,
            /* [retval][out] */ SAFEARRAY * *ppExclusionIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusion )( 
            IRTPController * This,
            /* [in] */ BSTR pID,
            /* [out] */ _RtpExclusionType *pType,
            /* [out] */ BSTR *ppPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearExclusions )( 
            IRTPController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IRTPController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IRTPController * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_totalThreatsBlocked )( 
            IRTPController * This,
            /* [retval][out] */ UINT64 *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_totalThreatsBlocked )( 
            IRTPController * This,
            /* [in] */ UINT64 pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WACIntegrationSetting )( 
            IRTPController * This,
            /* [retval][out] */ _WACIntegrationSetting *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WACIntegrationSetting )( 
            IRTPController * This,
            /* [in] */ _WACIntegrationSetting pVal);
        
        END_INTERFACE
    } IRTPControllerVtbl;

    interface IRTPController
    {
        CONST_VTBL struct IRTPControllerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRTPController_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRTPController_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRTPController_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRTPController_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRTPController_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRTPController_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRTPController_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRTPController_Start(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pProductVersion)	\
    ( (This)->lpVtbl -> Start(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pProductVersion) ) 

#define IRTPController_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define IRTPController_StartProtection(This)	\
    ( (This)->lpVtbl -> StartProtection(This) ) 

#define IRTPController_StopProtection(This)	\
    ( (This)->lpVtbl -> StopProtection(This) ) 

#define IRTPController_EnableProtection(This)	\
    ( (This)->lpVtbl -> EnableProtection(This) ) 

#define IRTPController_DisableProtection(This)	\
    ( (This)->lpVtbl -> DisableProtection(This) ) 

#define IRTPController_GetState(This,pState)	\
    ( (This)->lpVtbl -> GetState(This,pState) ) 

#define IRTPController_SendReply(This,MessageId,reply)	\
    ( (This)->lpVtbl -> SendReply(This,MessageId,reply) ) 

#define IRTPController_GetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfig(This,pConfig) ) 

#define IRTPController_SetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfig(This,pConfig) ) 

#define IRTPController_get_AutoClean(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoClean(This,pVal) ) 

#define IRTPController_put_AutoClean(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoClean(This,pVal) ) 

#define IRTPController_get_CacheTime(This,pVal)	\
    ( (This)->lpVtbl -> get_CacheTime(This,pVal) ) 

#define IRTPController_put_CacheTime(This,pVal)	\
    ( (This)->lpVtbl -> put_CacheTime(This,pVal) ) 

#define IRTPController_get_PUMHandling(This,pVal)	\
    ( (This)->lpVtbl -> get_PUMHandling(This,pVal) ) 

#define IRTPController_put_PUMHandling(This,pVal)	\
    ( (This)->lpVtbl -> put_PUMHandling(This,pVal) ) 

#define IRTPController_get_PUPHandling(This,pVal)	\
    ( (This)->lpVtbl -> get_PUPHandling(This,pVal) ) 

#define IRTPController_put_PUPHandling(This,pVal)	\
    ( (This)->lpVtbl -> put_PUPHandling(This,pVal) ) 

#define IRTPController_AddExclusion(This,type,path)	\
    ( (This)->lpVtbl -> AddExclusion(This,type,path) ) 

#define IRTPController_AddExclusionEx(This,type,path,ppID)	\
    ( (This)->lpVtbl -> AddExclusionEx(This,type,path,ppID) ) 

#define IRTPController_RemoveExclusion(This,pID)	\
    ( (This)->lpVtbl -> RemoveExclusion(This,pID) ) 

#define IRTPController_UpdateExclusion(This,pID,type,path)	\
    ( (This)->lpVtbl -> UpdateExclusion(This,pID,type,path) ) 

#define IRTPController_GetNumExclusions(This,pNumExclusions)	\
    ( (This)->lpVtbl -> GetNumExclusions(This,pNumExclusions) ) 

#define IRTPController_GetExclusionIDs(This,ppExclusionIDs)	\
    ( (This)->lpVtbl -> GetExclusionIDs(This,ppExclusionIDs) ) 

#define IRTPController_GetExclusion(This,pID,pType,ppPath)	\
    ( (This)->lpVtbl -> GetExclusion(This,pID,pType,ppPath) ) 

#define IRTPController_ClearExclusions(This)	\
    ( (This)->lpVtbl -> ClearExclusions(This) ) 

#define IRTPController_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IRTPController_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IRTPController_get_totalThreatsBlocked(This,pVal)	\
    ( (This)->lpVtbl -> get_totalThreatsBlocked(This,pVal) ) 

#define IRTPController_put_totalThreatsBlocked(This,pVal)	\
    ( (This)->lpVtbl -> put_totalThreatsBlocked(This,pVal) ) 

#define IRTPController_get_WACIntegrationSetting(This,pVal)	\
    ( (This)->lpVtbl -> get_WACIntegrationSetting(This,pVal) ) 

#define IRTPController_put_WACIntegrationSetting(This,pVal)	\
    ( (This)->lpVtbl -> put_WACIntegrationSetting(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRTPController_INTERFACE_DEFINED__ */


#ifndef __IRTPControllerV2_INTERFACE_DEFINED__
#define __IRTPControllerV2_INTERFACE_DEFINED__

/* interface IRTPControllerV2 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IRTPControllerV2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A10434E2-CAA7-48C4-9770-E9F215C51ECC")
    IRTPControllerV2 : public IRTPController
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EnableShuriken( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_EnableShuriken( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StartV2( 
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductVersion) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IRTPControllerV2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRTPControllerV2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRTPControllerV2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRTPControllerV2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRTPControllerV2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRTPControllerV2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRTPControllerV2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRTPControllerV2 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IRTPControllerV2 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IRTPControllerV2 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartProtection )( 
            IRTPControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopProtection )( 
            IRTPControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EnableProtection )( 
            IRTPControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DisableProtection )( 
            IRTPControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IRTPControllerV2 * This,
            /* [retval][out] */ _RTPState *pState);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SendReply )( 
            IRTPControllerV2 * This,
            /* [in] */ unsigned long MessageId,
            /* [in] */ _RTPAction reply);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfig )( 
            IRTPControllerV2 * This,
            /* [retval][out] */ RTPConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfig )( 
            IRTPControllerV2 * This,
            /* [in] */ RTPConfig *pConfig);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoClean )( 
            IRTPControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoClean )( 
            IRTPControllerV2 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CacheTime )( 
            IRTPControllerV2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CacheTime )( 
            IRTPControllerV2 * This,
            /* [in] */ long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PUMHandling )( 
            IRTPControllerV2 * This,
            /* [retval][out] */ _RtpPupPumHandling *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PUMHandling )( 
            IRTPControllerV2 * This,
            /* [in] */ _RtpPupPumHandling pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PUPHandling )( 
            IRTPControllerV2 * This,
            /* [retval][out] */ _RtpPupPumHandling *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PUPHandling )( 
            IRTPControllerV2 * This,
            /* [in] */ _RtpPupPumHandling pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusion )( 
            IRTPControllerV2 * This,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusionEx )( 
            IRTPControllerV2 * This,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path,
            /* [out] */ BSTR *ppID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveExclusion )( 
            IRTPControllerV2 * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *UpdateExclusion )( 
            IRTPControllerV2 * This,
            /* [in] */ BSTR pID,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExclusions )( 
            IRTPControllerV2 * This,
            /* [out] */ long *pNumExclusions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusionIDs )( 
            IRTPControllerV2 * This,
            /* [retval][out] */ SAFEARRAY * *ppExclusionIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusion )( 
            IRTPControllerV2 * This,
            /* [in] */ BSTR pID,
            /* [out] */ _RtpExclusionType *pType,
            /* [out] */ BSTR *ppPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearExclusions )( 
            IRTPControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IRTPControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IRTPControllerV2 * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_totalThreatsBlocked )( 
            IRTPControllerV2 * This,
            /* [retval][out] */ UINT64 *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_totalThreatsBlocked )( 
            IRTPControllerV2 * This,
            /* [in] */ UINT64 pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WACIntegrationSetting )( 
            IRTPControllerV2 * This,
            /* [retval][out] */ _WACIntegrationSetting *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WACIntegrationSetting )( 
            IRTPControllerV2 * This,
            /* [in] */ _WACIntegrationSetting pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableShuriken )( 
            IRTPControllerV2 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableShuriken )( 
            IRTPControllerV2 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            IRTPControllerV2 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductVersion);
        
        END_INTERFACE
    } IRTPControllerV2Vtbl;

    interface IRTPControllerV2
    {
        CONST_VTBL struct IRTPControllerV2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRTPControllerV2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRTPControllerV2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRTPControllerV2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRTPControllerV2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRTPControllerV2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRTPControllerV2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRTPControllerV2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRTPControllerV2_Start(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pProductVersion)	\
    ( (This)->lpVtbl -> Start(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pProductVersion) ) 

#define IRTPControllerV2_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define IRTPControllerV2_StartProtection(This)	\
    ( (This)->lpVtbl -> StartProtection(This) ) 

#define IRTPControllerV2_StopProtection(This)	\
    ( (This)->lpVtbl -> StopProtection(This) ) 

#define IRTPControllerV2_EnableProtection(This)	\
    ( (This)->lpVtbl -> EnableProtection(This) ) 

#define IRTPControllerV2_DisableProtection(This)	\
    ( (This)->lpVtbl -> DisableProtection(This) ) 

#define IRTPControllerV2_GetState(This,pState)	\
    ( (This)->lpVtbl -> GetState(This,pState) ) 

#define IRTPControllerV2_SendReply(This,MessageId,reply)	\
    ( (This)->lpVtbl -> SendReply(This,MessageId,reply) ) 

#define IRTPControllerV2_GetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfig(This,pConfig) ) 

#define IRTPControllerV2_SetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfig(This,pConfig) ) 

#define IRTPControllerV2_get_AutoClean(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoClean(This,pVal) ) 

#define IRTPControllerV2_put_AutoClean(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoClean(This,pVal) ) 

#define IRTPControllerV2_get_CacheTime(This,pVal)	\
    ( (This)->lpVtbl -> get_CacheTime(This,pVal) ) 

#define IRTPControllerV2_put_CacheTime(This,pVal)	\
    ( (This)->lpVtbl -> put_CacheTime(This,pVal) ) 

#define IRTPControllerV2_get_PUMHandling(This,pVal)	\
    ( (This)->lpVtbl -> get_PUMHandling(This,pVal) ) 

#define IRTPControllerV2_put_PUMHandling(This,pVal)	\
    ( (This)->lpVtbl -> put_PUMHandling(This,pVal) ) 

#define IRTPControllerV2_get_PUPHandling(This,pVal)	\
    ( (This)->lpVtbl -> get_PUPHandling(This,pVal) ) 

#define IRTPControllerV2_put_PUPHandling(This,pVal)	\
    ( (This)->lpVtbl -> put_PUPHandling(This,pVal) ) 

#define IRTPControllerV2_AddExclusion(This,type,path)	\
    ( (This)->lpVtbl -> AddExclusion(This,type,path) ) 

#define IRTPControllerV2_AddExclusionEx(This,type,path,ppID)	\
    ( (This)->lpVtbl -> AddExclusionEx(This,type,path,ppID) ) 

#define IRTPControllerV2_RemoveExclusion(This,pID)	\
    ( (This)->lpVtbl -> RemoveExclusion(This,pID) ) 

#define IRTPControllerV2_UpdateExclusion(This,pID,type,path)	\
    ( (This)->lpVtbl -> UpdateExclusion(This,pID,type,path) ) 

#define IRTPControllerV2_GetNumExclusions(This,pNumExclusions)	\
    ( (This)->lpVtbl -> GetNumExclusions(This,pNumExclusions) ) 

#define IRTPControllerV2_GetExclusionIDs(This,ppExclusionIDs)	\
    ( (This)->lpVtbl -> GetExclusionIDs(This,ppExclusionIDs) ) 

#define IRTPControllerV2_GetExclusion(This,pID,pType,ppPath)	\
    ( (This)->lpVtbl -> GetExclusion(This,pID,pType,ppPath) ) 

#define IRTPControllerV2_ClearExclusions(This)	\
    ( (This)->lpVtbl -> ClearExclusions(This) ) 

#define IRTPControllerV2_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IRTPControllerV2_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IRTPControllerV2_get_totalThreatsBlocked(This,pVal)	\
    ( (This)->lpVtbl -> get_totalThreatsBlocked(This,pVal) ) 

#define IRTPControllerV2_put_totalThreatsBlocked(This,pVal)	\
    ( (This)->lpVtbl -> put_totalThreatsBlocked(This,pVal) ) 

#define IRTPControllerV2_get_WACIntegrationSetting(This,pVal)	\
    ( (This)->lpVtbl -> get_WACIntegrationSetting(This,pVal) ) 

#define IRTPControllerV2_put_WACIntegrationSetting(This,pVal)	\
    ( (This)->lpVtbl -> put_WACIntegrationSetting(This,pVal) ) 


#define IRTPControllerV2_get_EnableShuriken(This,pVal)	\
    ( (This)->lpVtbl -> get_EnableShuriken(This,pVal) ) 

#define IRTPControllerV2_put_EnableShuriken(This,pVal)	\
    ( (This)->lpVtbl -> put_EnableShuriken(This,pVal) ) 

#define IRTPControllerV2_StartV2(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductVersion)	\
    ( (This)->lpVtbl -> StartV2(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductVersion) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRTPControllerV2_INTERFACE_DEFINED__ */


#ifndef __IRTPControllerV3_INTERFACE_DEFINED__
#define __IRTPControllerV3_INTERFACE_DEFINED__

/* interface IRTPControllerV3 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IRTPControllerV3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("83D0C30B-ECF4-40C5-80EC-21BB47F898A9")
    IRTPControllerV3 : public IRTPControllerV2
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StartV3( 
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IRTPControllerV3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRTPControllerV3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRTPControllerV3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRTPControllerV3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRTPControllerV3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRTPControllerV3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRTPControllerV3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRTPControllerV3 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IRTPControllerV3 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IRTPControllerV3 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartProtection )( 
            IRTPControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopProtection )( 
            IRTPControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EnableProtection )( 
            IRTPControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DisableProtection )( 
            IRTPControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IRTPControllerV3 * This,
            /* [retval][out] */ _RTPState *pState);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SendReply )( 
            IRTPControllerV3 * This,
            /* [in] */ unsigned long MessageId,
            /* [in] */ _RTPAction reply);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfig )( 
            IRTPControllerV3 * This,
            /* [retval][out] */ RTPConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfig )( 
            IRTPControllerV3 * This,
            /* [in] */ RTPConfig *pConfig);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoClean )( 
            IRTPControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoClean )( 
            IRTPControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CacheTime )( 
            IRTPControllerV3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CacheTime )( 
            IRTPControllerV3 * This,
            /* [in] */ long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PUMHandling )( 
            IRTPControllerV3 * This,
            /* [retval][out] */ _RtpPupPumHandling *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PUMHandling )( 
            IRTPControllerV3 * This,
            /* [in] */ _RtpPupPumHandling pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PUPHandling )( 
            IRTPControllerV3 * This,
            /* [retval][out] */ _RtpPupPumHandling *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PUPHandling )( 
            IRTPControllerV3 * This,
            /* [in] */ _RtpPupPumHandling pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusion )( 
            IRTPControllerV3 * This,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusionEx )( 
            IRTPControllerV3 * This,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path,
            /* [out] */ BSTR *ppID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveExclusion )( 
            IRTPControllerV3 * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *UpdateExclusion )( 
            IRTPControllerV3 * This,
            /* [in] */ BSTR pID,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExclusions )( 
            IRTPControllerV3 * This,
            /* [out] */ long *pNumExclusions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusionIDs )( 
            IRTPControllerV3 * This,
            /* [retval][out] */ SAFEARRAY * *ppExclusionIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusion )( 
            IRTPControllerV3 * This,
            /* [in] */ BSTR pID,
            /* [out] */ _RtpExclusionType *pType,
            /* [out] */ BSTR *ppPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearExclusions )( 
            IRTPControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IRTPControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IRTPControllerV3 * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_totalThreatsBlocked )( 
            IRTPControllerV3 * This,
            /* [retval][out] */ UINT64 *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_totalThreatsBlocked )( 
            IRTPControllerV3 * This,
            /* [in] */ UINT64 pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WACIntegrationSetting )( 
            IRTPControllerV3 * This,
            /* [retval][out] */ _WACIntegrationSetting *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WACIntegrationSetting )( 
            IRTPControllerV3 * This,
            /* [in] */ _WACIntegrationSetting pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableShuriken )( 
            IRTPControllerV3 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableShuriken )( 
            IRTPControllerV3 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            IRTPControllerV3 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV3 )( 
            IRTPControllerV3 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        END_INTERFACE
    } IRTPControllerV3Vtbl;

    interface IRTPControllerV3
    {
        CONST_VTBL struct IRTPControllerV3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRTPControllerV3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRTPControllerV3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRTPControllerV3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRTPControllerV3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRTPControllerV3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRTPControllerV3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRTPControllerV3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRTPControllerV3_Start(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pProductVersion)	\
    ( (This)->lpVtbl -> Start(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pProductVersion) ) 

#define IRTPControllerV3_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define IRTPControllerV3_StartProtection(This)	\
    ( (This)->lpVtbl -> StartProtection(This) ) 

#define IRTPControllerV3_StopProtection(This)	\
    ( (This)->lpVtbl -> StopProtection(This) ) 

#define IRTPControllerV3_EnableProtection(This)	\
    ( (This)->lpVtbl -> EnableProtection(This) ) 

#define IRTPControllerV3_DisableProtection(This)	\
    ( (This)->lpVtbl -> DisableProtection(This) ) 

#define IRTPControllerV3_GetState(This,pState)	\
    ( (This)->lpVtbl -> GetState(This,pState) ) 

#define IRTPControllerV3_SendReply(This,MessageId,reply)	\
    ( (This)->lpVtbl -> SendReply(This,MessageId,reply) ) 

#define IRTPControllerV3_GetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfig(This,pConfig) ) 

#define IRTPControllerV3_SetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfig(This,pConfig) ) 

#define IRTPControllerV3_get_AutoClean(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoClean(This,pVal) ) 

#define IRTPControllerV3_put_AutoClean(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoClean(This,pVal) ) 

#define IRTPControllerV3_get_CacheTime(This,pVal)	\
    ( (This)->lpVtbl -> get_CacheTime(This,pVal) ) 

#define IRTPControllerV3_put_CacheTime(This,pVal)	\
    ( (This)->lpVtbl -> put_CacheTime(This,pVal) ) 

#define IRTPControllerV3_get_PUMHandling(This,pVal)	\
    ( (This)->lpVtbl -> get_PUMHandling(This,pVal) ) 

#define IRTPControllerV3_put_PUMHandling(This,pVal)	\
    ( (This)->lpVtbl -> put_PUMHandling(This,pVal) ) 

#define IRTPControllerV3_get_PUPHandling(This,pVal)	\
    ( (This)->lpVtbl -> get_PUPHandling(This,pVal) ) 

#define IRTPControllerV3_put_PUPHandling(This,pVal)	\
    ( (This)->lpVtbl -> put_PUPHandling(This,pVal) ) 

#define IRTPControllerV3_AddExclusion(This,type,path)	\
    ( (This)->lpVtbl -> AddExclusion(This,type,path) ) 

#define IRTPControllerV3_AddExclusionEx(This,type,path,ppID)	\
    ( (This)->lpVtbl -> AddExclusionEx(This,type,path,ppID) ) 

#define IRTPControllerV3_RemoveExclusion(This,pID)	\
    ( (This)->lpVtbl -> RemoveExclusion(This,pID) ) 

#define IRTPControllerV3_UpdateExclusion(This,pID,type,path)	\
    ( (This)->lpVtbl -> UpdateExclusion(This,pID,type,path) ) 

#define IRTPControllerV3_GetNumExclusions(This,pNumExclusions)	\
    ( (This)->lpVtbl -> GetNumExclusions(This,pNumExclusions) ) 

#define IRTPControllerV3_GetExclusionIDs(This,ppExclusionIDs)	\
    ( (This)->lpVtbl -> GetExclusionIDs(This,ppExclusionIDs) ) 

#define IRTPControllerV3_GetExclusion(This,pID,pType,ppPath)	\
    ( (This)->lpVtbl -> GetExclusion(This,pID,pType,ppPath) ) 

#define IRTPControllerV3_ClearExclusions(This)	\
    ( (This)->lpVtbl -> ClearExclusions(This) ) 

#define IRTPControllerV3_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IRTPControllerV3_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IRTPControllerV3_get_totalThreatsBlocked(This,pVal)	\
    ( (This)->lpVtbl -> get_totalThreatsBlocked(This,pVal) ) 

#define IRTPControllerV3_put_totalThreatsBlocked(This,pVal)	\
    ( (This)->lpVtbl -> put_totalThreatsBlocked(This,pVal) ) 

#define IRTPControllerV3_get_WACIntegrationSetting(This,pVal)	\
    ( (This)->lpVtbl -> get_WACIntegrationSetting(This,pVal) ) 

#define IRTPControllerV3_put_WACIntegrationSetting(This,pVal)	\
    ( (This)->lpVtbl -> put_WACIntegrationSetting(This,pVal) ) 


#define IRTPControllerV3_get_EnableShuriken(This,pVal)	\
    ( (This)->lpVtbl -> get_EnableShuriken(This,pVal) ) 

#define IRTPControllerV3_put_EnableShuriken(This,pVal)	\
    ( (This)->lpVtbl -> put_EnableShuriken(This,pVal) ) 

#define IRTPControllerV3_StartV2(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductVersion)	\
    ( (This)->lpVtbl -> StartV2(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductVersion) ) 


#define IRTPControllerV3_StartV3(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV3(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductCode,pProductVersion,pProductBuild) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRTPControllerV3_INTERFACE_DEFINED__ */


#ifndef __IRTPControllerV4_INTERFACE_DEFINED__
#define __IRTPControllerV4_INTERFACE_DEFINED__

/* interface IRTPControllerV4 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IRTPControllerV4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A993F934-6341-4D52-AB17-F93184A624E4")
    IRTPControllerV4 : public IRTPControllerV3
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StopV2( 
            /* [in] */ long timeoutMs,
            /* [in] */ _RtpStopType stopType) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IRTPControllerV4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRTPControllerV4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRTPControllerV4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRTPControllerV4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRTPControllerV4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRTPControllerV4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRTPControllerV4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRTPControllerV4 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IRTPControllerV4 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IRTPControllerV4 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartProtection )( 
            IRTPControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopProtection )( 
            IRTPControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EnableProtection )( 
            IRTPControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DisableProtection )( 
            IRTPControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IRTPControllerV4 * This,
            /* [retval][out] */ _RTPState *pState);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SendReply )( 
            IRTPControllerV4 * This,
            /* [in] */ unsigned long MessageId,
            /* [in] */ _RTPAction reply);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfig )( 
            IRTPControllerV4 * This,
            /* [retval][out] */ RTPConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfig )( 
            IRTPControllerV4 * This,
            /* [in] */ RTPConfig *pConfig);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoClean )( 
            IRTPControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoClean )( 
            IRTPControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CacheTime )( 
            IRTPControllerV4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CacheTime )( 
            IRTPControllerV4 * This,
            /* [in] */ long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PUMHandling )( 
            IRTPControllerV4 * This,
            /* [retval][out] */ _RtpPupPumHandling *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PUMHandling )( 
            IRTPControllerV4 * This,
            /* [in] */ _RtpPupPumHandling pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PUPHandling )( 
            IRTPControllerV4 * This,
            /* [retval][out] */ _RtpPupPumHandling *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PUPHandling )( 
            IRTPControllerV4 * This,
            /* [in] */ _RtpPupPumHandling pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusion )( 
            IRTPControllerV4 * This,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusionEx )( 
            IRTPControllerV4 * This,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path,
            /* [out] */ BSTR *ppID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveExclusion )( 
            IRTPControllerV4 * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *UpdateExclusion )( 
            IRTPControllerV4 * This,
            /* [in] */ BSTR pID,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExclusions )( 
            IRTPControllerV4 * This,
            /* [out] */ long *pNumExclusions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusionIDs )( 
            IRTPControllerV4 * This,
            /* [retval][out] */ SAFEARRAY * *ppExclusionIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusion )( 
            IRTPControllerV4 * This,
            /* [in] */ BSTR pID,
            /* [out] */ _RtpExclusionType *pType,
            /* [out] */ BSTR *ppPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearExclusions )( 
            IRTPControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IRTPControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IRTPControllerV4 * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_totalThreatsBlocked )( 
            IRTPControllerV4 * This,
            /* [retval][out] */ UINT64 *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_totalThreatsBlocked )( 
            IRTPControllerV4 * This,
            /* [in] */ UINT64 pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WACIntegrationSetting )( 
            IRTPControllerV4 * This,
            /* [retval][out] */ _WACIntegrationSetting *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WACIntegrationSetting )( 
            IRTPControllerV4 * This,
            /* [in] */ _WACIntegrationSetting pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableShuriken )( 
            IRTPControllerV4 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableShuriken )( 
            IRTPControllerV4 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            IRTPControllerV4 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV3 )( 
            IRTPControllerV4 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopV2 )( 
            IRTPControllerV4 * This,
            /* [in] */ long timeoutMs,
            /* [in] */ _RtpStopType stopType);
        
        END_INTERFACE
    } IRTPControllerV4Vtbl;

    interface IRTPControllerV4
    {
        CONST_VTBL struct IRTPControllerV4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRTPControllerV4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRTPControllerV4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRTPControllerV4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRTPControllerV4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRTPControllerV4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRTPControllerV4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRTPControllerV4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRTPControllerV4_Start(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pProductVersion)	\
    ( (This)->lpVtbl -> Start(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pProductVersion) ) 

#define IRTPControllerV4_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define IRTPControllerV4_StartProtection(This)	\
    ( (This)->lpVtbl -> StartProtection(This) ) 

#define IRTPControllerV4_StopProtection(This)	\
    ( (This)->lpVtbl -> StopProtection(This) ) 

#define IRTPControllerV4_EnableProtection(This)	\
    ( (This)->lpVtbl -> EnableProtection(This) ) 

#define IRTPControllerV4_DisableProtection(This)	\
    ( (This)->lpVtbl -> DisableProtection(This) ) 

#define IRTPControllerV4_GetState(This,pState)	\
    ( (This)->lpVtbl -> GetState(This,pState) ) 

#define IRTPControllerV4_SendReply(This,MessageId,reply)	\
    ( (This)->lpVtbl -> SendReply(This,MessageId,reply) ) 

#define IRTPControllerV4_GetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfig(This,pConfig) ) 

#define IRTPControllerV4_SetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfig(This,pConfig) ) 

#define IRTPControllerV4_get_AutoClean(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoClean(This,pVal) ) 

#define IRTPControllerV4_put_AutoClean(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoClean(This,pVal) ) 

#define IRTPControllerV4_get_CacheTime(This,pVal)	\
    ( (This)->lpVtbl -> get_CacheTime(This,pVal) ) 

#define IRTPControllerV4_put_CacheTime(This,pVal)	\
    ( (This)->lpVtbl -> put_CacheTime(This,pVal) ) 

#define IRTPControllerV4_get_PUMHandling(This,pVal)	\
    ( (This)->lpVtbl -> get_PUMHandling(This,pVal) ) 

#define IRTPControllerV4_put_PUMHandling(This,pVal)	\
    ( (This)->lpVtbl -> put_PUMHandling(This,pVal) ) 

#define IRTPControllerV4_get_PUPHandling(This,pVal)	\
    ( (This)->lpVtbl -> get_PUPHandling(This,pVal) ) 

#define IRTPControllerV4_put_PUPHandling(This,pVal)	\
    ( (This)->lpVtbl -> put_PUPHandling(This,pVal) ) 

#define IRTPControllerV4_AddExclusion(This,type,path)	\
    ( (This)->lpVtbl -> AddExclusion(This,type,path) ) 

#define IRTPControllerV4_AddExclusionEx(This,type,path,ppID)	\
    ( (This)->lpVtbl -> AddExclusionEx(This,type,path,ppID) ) 

#define IRTPControllerV4_RemoveExclusion(This,pID)	\
    ( (This)->lpVtbl -> RemoveExclusion(This,pID) ) 

#define IRTPControllerV4_UpdateExclusion(This,pID,type,path)	\
    ( (This)->lpVtbl -> UpdateExclusion(This,pID,type,path) ) 

#define IRTPControllerV4_GetNumExclusions(This,pNumExclusions)	\
    ( (This)->lpVtbl -> GetNumExclusions(This,pNumExclusions) ) 

#define IRTPControllerV4_GetExclusionIDs(This,ppExclusionIDs)	\
    ( (This)->lpVtbl -> GetExclusionIDs(This,ppExclusionIDs) ) 

#define IRTPControllerV4_GetExclusion(This,pID,pType,ppPath)	\
    ( (This)->lpVtbl -> GetExclusion(This,pID,pType,ppPath) ) 

#define IRTPControllerV4_ClearExclusions(This)	\
    ( (This)->lpVtbl -> ClearExclusions(This) ) 

#define IRTPControllerV4_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IRTPControllerV4_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IRTPControllerV4_get_totalThreatsBlocked(This,pVal)	\
    ( (This)->lpVtbl -> get_totalThreatsBlocked(This,pVal) ) 

#define IRTPControllerV4_put_totalThreatsBlocked(This,pVal)	\
    ( (This)->lpVtbl -> put_totalThreatsBlocked(This,pVal) ) 

#define IRTPControllerV4_get_WACIntegrationSetting(This,pVal)	\
    ( (This)->lpVtbl -> get_WACIntegrationSetting(This,pVal) ) 

#define IRTPControllerV4_put_WACIntegrationSetting(This,pVal)	\
    ( (This)->lpVtbl -> put_WACIntegrationSetting(This,pVal) ) 


#define IRTPControllerV4_get_EnableShuriken(This,pVal)	\
    ( (This)->lpVtbl -> get_EnableShuriken(This,pVal) ) 

#define IRTPControllerV4_put_EnableShuriken(This,pVal)	\
    ( (This)->lpVtbl -> put_EnableShuriken(This,pVal) ) 

#define IRTPControllerV4_StartV2(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductVersion)	\
    ( (This)->lpVtbl -> StartV2(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductVersion) ) 


#define IRTPControllerV4_StartV3(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV3(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductCode,pProductVersion,pProductBuild) ) 


#define IRTPControllerV4_StopV2(This,timeoutMs,stopType)	\
    ( (This)->lpVtbl -> StopV2(This,timeoutMs,stopType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRTPControllerV4_INTERFACE_DEFINED__ */


#ifndef __IRTPControllerV5_INTERFACE_DEFINED__
#define __IRTPControllerV5_INTERFACE_DEFINED__

/* interface IRTPControllerV5 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IRTPControllerV5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8A574BA8-3535-41F9-AB73-FA93F8A7DC3B")
    IRTPControllerV5 : public IRTPControllerV4
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetWacIntegrationActive( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IRTPControllerV5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRTPControllerV5 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRTPControllerV5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRTPControllerV5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRTPControllerV5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRTPControllerV5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRTPControllerV5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRTPControllerV5 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IRTPControllerV5 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IRTPControllerV5 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartProtection )( 
            IRTPControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopProtection )( 
            IRTPControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EnableProtection )( 
            IRTPControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DisableProtection )( 
            IRTPControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IRTPControllerV5 * This,
            /* [retval][out] */ _RTPState *pState);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SendReply )( 
            IRTPControllerV5 * This,
            /* [in] */ unsigned long MessageId,
            /* [in] */ _RTPAction reply);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfig )( 
            IRTPControllerV5 * This,
            /* [retval][out] */ RTPConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfig )( 
            IRTPControllerV5 * This,
            /* [in] */ RTPConfig *pConfig);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoClean )( 
            IRTPControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoClean )( 
            IRTPControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CacheTime )( 
            IRTPControllerV5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CacheTime )( 
            IRTPControllerV5 * This,
            /* [in] */ long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PUMHandling )( 
            IRTPControllerV5 * This,
            /* [retval][out] */ _RtpPupPumHandling *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PUMHandling )( 
            IRTPControllerV5 * This,
            /* [in] */ _RtpPupPumHandling pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PUPHandling )( 
            IRTPControllerV5 * This,
            /* [retval][out] */ _RtpPupPumHandling *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PUPHandling )( 
            IRTPControllerV5 * This,
            /* [in] */ _RtpPupPumHandling pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusion )( 
            IRTPControllerV5 * This,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusionEx )( 
            IRTPControllerV5 * This,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path,
            /* [out] */ BSTR *ppID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveExclusion )( 
            IRTPControllerV5 * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *UpdateExclusion )( 
            IRTPControllerV5 * This,
            /* [in] */ BSTR pID,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExclusions )( 
            IRTPControllerV5 * This,
            /* [out] */ long *pNumExclusions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusionIDs )( 
            IRTPControllerV5 * This,
            /* [retval][out] */ SAFEARRAY * *ppExclusionIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusion )( 
            IRTPControllerV5 * This,
            /* [in] */ BSTR pID,
            /* [out] */ _RtpExclusionType *pType,
            /* [out] */ BSTR *ppPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearExclusions )( 
            IRTPControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IRTPControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IRTPControllerV5 * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_totalThreatsBlocked )( 
            IRTPControllerV5 * This,
            /* [retval][out] */ UINT64 *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_totalThreatsBlocked )( 
            IRTPControllerV5 * This,
            /* [in] */ UINT64 pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WACIntegrationSetting )( 
            IRTPControllerV5 * This,
            /* [retval][out] */ _WACIntegrationSetting *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WACIntegrationSetting )( 
            IRTPControllerV5 * This,
            /* [in] */ _WACIntegrationSetting pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableShuriken )( 
            IRTPControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableShuriken )( 
            IRTPControllerV5 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            IRTPControllerV5 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV3 )( 
            IRTPControllerV5 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopV2 )( 
            IRTPControllerV5 * This,
            /* [in] */ long timeoutMs,
            /* [in] */ _RtpStopType stopType);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetWacIntegrationActive )( 
            IRTPControllerV5 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        END_INTERFACE
    } IRTPControllerV5Vtbl;

    interface IRTPControllerV5
    {
        CONST_VTBL struct IRTPControllerV5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRTPControllerV5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRTPControllerV5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRTPControllerV5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRTPControllerV5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRTPControllerV5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRTPControllerV5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRTPControllerV5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRTPControllerV5_Start(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pProductVersion)	\
    ( (This)->lpVtbl -> Start(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pProductVersion) ) 

#define IRTPControllerV5_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define IRTPControllerV5_StartProtection(This)	\
    ( (This)->lpVtbl -> StartProtection(This) ) 

#define IRTPControllerV5_StopProtection(This)	\
    ( (This)->lpVtbl -> StopProtection(This) ) 

#define IRTPControllerV5_EnableProtection(This)	\
    ( (This)->lpVtbl -> EnableProtection(This) ) 

#define IRTPControllerV5_DisableProtection(This)	\
    ( (This)->lpVtbl -> DisableProtection(This) ) 

#define IRTPControllerV5_GetState(This,pState)	\
    ( (This)->lpVtbl -> GetState(This,pState) ) 

#define IRTPControllerV5_SendReply(This,MessageId,reply)	\
    ( (This)->lpVtbl -> SendReply(This,MessageId,reply) ) 

#define IRTPControllerV5_GetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfig(This,pConfig) ) 

#define IRTPControllerV5_SetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfig(This,pConfig) ) 

#define IRTPControllerV5_get_AutoClean(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoClean(This,pVal) ) 

#define IRTPControllerV5_put_AutoClean(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoClean(This,pVal) ) 

#define IRTPControllerV5_get_CacheTime(This,pVal)	\
    ( (This)->lpVtbl -> get_CacheTime(This,pVal) ) 

#define IRTPControllerV5_put_CacheTime(This,pVal)	\
    ( (This)->lpVtbl -> put_CacheTime(This,pVal) ) 

#define IRTPControllerV5_get_PUMHandling(This,pVal)	\
    ( (This)->lpVtbl -> get_PUMHandling(This,pVal) ) 

#define IRTPControllerV5_put_PUMHandling(This,pVal)	\
    ( (This)->lpVtbl -> put_PUMHandling(This,pVal) ) 

#define IRTPControllerV5_get_PUPHandling(This,pVal)	\
    ( (This)->lpVtbl -> get_PUPHandling(This,pVal) ) 

#define IRTPControllerV5_put_PUPHandling(This,pVal)	\
    ( (This)->lpVtbl -> put_PUPHandling(This,pVal) ) 

#define IRTPControllerV5_AddExclusion(This,type,path)	\
    ( (This)->lpVtbl -> AddExclusion(This,type,path) ) 

#define IRTPControllerV5_AddExclusionEx(This,type,path,ppID)	\
    ( (This)->lpVtbl -> AddExclusionEx(This,type,path,ppID) ) 

#define IRTPControllerV5_RemoveExclusion(This,pID)	\
    ( (This)->lpVtbl -> RemoveExclusion(This,pID) ) 

#define IRTPControllerV5_UpdateExclusion(This,pID,type,path)	\
    ( (This)->lpVtbl -> UpdateExclusion(This,pID,type,path) ) 

#define IRTPControllerV5_GetNumExclusions(This,pNumExclusions)	\
    ( (This)->lpVtbl -> GetNumExclusions(This,pNumExclusions) ) 

#define IRTPControllerV5_GetExclusionIDs(This,ppExclusionIDs)	\
    ( (This)->lpVtbl -> GetExclusionIDs(This,ppExclusionIDs) ) 

#define IRTPControllerV5_GetExclusion(This,pID,pType,ppPath)	\
    ( (This)->lpVtbl -> GetExclusion(This,pID,pType,ppPath) ) 

#define IRTPControllerV5_ClearExclusions(This)	\
    ( (This)->lpVtbl -> ClearExclusions(This) ) 

#define IRTPControllerV5_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IRTPControllerV5_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IRTPControllerV5_get_totalThreatsBlocked(This,pVal)	\
    ( (This)->lpVtbl -> get_totalThreatsBlocked(This,pVal) ) 

#define IRTPControllerV5_put_totalThreatsBlocked(This,pVal)	\
    ( (This)->lpVtbl -> put_totalThreatsBlocked(This,pVal) ) 

#define IRTPControllerV5_get_WACIntegrationSetting(This,pVal)	\
    ( (This)->lpVtbl -> get_WACIntegrationSetting(This,pVal) ) 

#define IRTPControllerV5_put_WACIntegrationSetting(This,pVal)	\
    ( (This)->lpVtbl -> put_WACIntegrationSetting(This,pVal) ) 


#define IRTPControllerV5_get_EnableShuriken(This,pVal)	\
    ( (This)->lpVtbl -> get_EnableShuriken(This,pVal) ) 

#define IRTPControllerV5_put_EnableShuriken(This,pVal)	\
    ( (This)->lpVtbl -> put_EnableShuriken(This,pVal) ) 

#define IRTPControllerV5_StartV2(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductVersion)	\
    ( (This)->lpVtbl -> StartV2(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductVersion) ) 


#define IRTPControllerV5_StartV3(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV3(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductCode,pProductVersion,pProductBuild) ) 


#define IRTPControllerV5_StopV2(This,timeoutMs,stopType)	\
    ( (This)->lpVtbl -> StopV2(This,timeoutMs,stopType) ) 


#define IRTPControllerV5_GetWacIntegrationActive(This,pVal)	\
    ( (This)->lpVtbl -> GetWacIntegrationActive(This,pVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRTPControllerV5_INTERFACE_DEFINED__ */


#ifndef __IRTPControllerV6_INTERFACE_DEFINED__
#define __IRTPControllerV6_INTERFACE_DEFINED__

/* interface IRTPControllerV6 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IRTPControllerV6;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A3D482C3-B037-469B-9C35-2EF7F81C5BED")
    IRTPControllerV6 : public IRTPControllerV5
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetStatus( 
            /* [retval][out] */ _RTPStatus *pStatus) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StartV4( 
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ IScanController *pScanController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IRTPControllerV6Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRTPControllerV6 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRTPControllerV6 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRTPControllerV6 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRTPControllerV6 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRTPControllerV6 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRTPControllerV6 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRTPControllerV6 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IRTPControllerV6 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IRTPControllerV6 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartProtection )( 
            IRTPControllerV6 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopProtection )( 
            IRTPControllerV6 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EnableProtection )( 
            IRTPControllerV6 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DisableProtection )( 
            IRTPControllerV6 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IRTPControllerV6 * This,
            /* [retval][out] */ _RTPState *pState);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SendReply )( 
            IRTPControllerV6 * This,
            /* [in] */ unsigned long MessageId,
            /* [in] */ _RTPAction reply);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfig )( 
            IRTPControllerV6 * This,
            /* [retval][out] */ RTPConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfig )( 
            IRTPControllerV6 * This,
            /* [in] */ RTPConfig *pConfig);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoClean )( 
            IRTPControllerV6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoClean )( 
            IRTPControllerV6 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CacheTime )( 
            IRTPControllerV6 * This,
            /* [retval][out] */ long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CacheTime )( 
            IRTPControllerV6 * This,
            /* [in] */ long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PUMHandling )( 
            IRTPControllerV6 * This,
            /* [retval][out] */ _RtpPupPumHandling *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PUMHandling )( 
            IRTPControllerV6 * This,
            /* [in] */ _RtpPupPumHandling pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PUPHandling )( 
            IRTPControllerV6 * This,
            /* [retval][out] */ _RtpPupPumHandling *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PUPHandling )( 
            IRTPControllerV6 * This,
            /* [in] */ _RtpPupPumHandling pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusion )( 
            IRTPControllerV6 * This,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusionEx )( 
            IRTPControllerV6 * This,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path,
            /* [out] */ BSTR *ppID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveExclusion )( 
            IRTPControllerV6 * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *UpdateExclusion )( 
            IRTPControllerV6 * This,
            /* [in] */ BSTR pID,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExclusions )( 
            IRTPControllerV6 * This,
            /* [out] */ long *pNumExclusions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusionIDs )( 
            IRTPControllerV6 * This,
            /* [retval][out] */ SAFEARRAY * *ppExclusionIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusion )( 
            IRTPControllerV6 * This,
            /* [in] */ BSTR pID,
            /* [out] */ _RtpExclusionType *pType,
            /* [out] */ BSTR *ppPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearExclusions )( 
            IRTPControllerV6 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IRTPControllerV6 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IRTPControllerV6 * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_totalThreatsBlocked )( 
            IRTPControllerV6 * This,
            /* [retval][out] */ UINT64 *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_totalThreatsBlocked )( 
            IRTPControllerV6 * This,
            /* [in] */ UINT64 pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WACIntegrationSetting )( 
            IRTPControllerV6 * This,
            /* [retval][out] */ _WACIntegrationSetting *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WACIntegrationSetting )( 
            IRTPControllerV6 * This,
            /* [in] */ _WACIntegrationSetting pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableShuriken )( 
            IRTPControllerV6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableShuriken )( 
            IRTPControllerV6 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            IRTPControllerV6 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV3 )( 
            IRTPControllerV6 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopV2 )( 
            IRTPControllerV6 * This,
            /* [in] */ long timeoutMs,
            /* [in] */ _RtpStopType stopType);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetWacIntegrationActive )( 
            IRTPControllerV6 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetStatus )( 
            IRTPControllerV6 * This,
            /* [retval][out] */ _RTPStatus *pStatus);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV4 )( 
            IRTPControllerV6 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ IScanController *pScanController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        END_INTERFACE
    } IRTPControllerV6Vtbl;

    interface IRTPControllerV6
    {
        CONST_VTBL struct IRTPControllerV6Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRTPControllerV6_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRTPControllerV6_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRTPControllerV6_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRTPControllerV6_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRTPControllerV6_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRTPControllerV6_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRTPControllerV6_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRTPControllerV6_Start(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pProductVersion)	\
    ( (This)->lpVtbl -> Start(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pProductVersion) ) 

#define IRTPControllerV6_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define IRTPControllerV6_StartProtection(This)	\
    ( (This)->lpVtbl -> StartProtection(This) ) 

#define IRTPControllerV6_StopProtection(This)	\
    ( (This)->lpVtbl -> StopProtection(This) ) 

#define IRTPControllerV6_EnableProtection(This)	\
    ( (This)->lpVtbl -> EnableProtection(This) ) 

#define IRTPControllerV6_DisableProtection(This)	\
    ( (This)->lpVtbl -> DisableProtection(This) ) 

#define IRTPControllerV6_GetState(This,pState)	\
    ( (This)->lpVtbl -> GetState(This,pState) ) 

#define IRTPControllerV6_SendReply(This,MessageId,reply)	\
    ( (This)->lpVtbl -> SendReply(This,MessageId,reply) ) 

#define IRTPControllerV6_GetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfig(This,pConfig) ) 

#define IRTPControllerV6_SetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfig(This,pConfig) ) 

#define IRTPControllerV6_get_AutoClean(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoClean(This,pVal) ) 

#define IRTPControllerV6_put_AutoClean(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoClean(This,pVal) ) 

#define IRTPControllerV6_get_CacheTime(This,pVal)	\
    ( (This)->lpVtbl -> get_CacheTime(This,pVal) ) 

#define IRTPControllerV6_put_CacheTime(This,pVal)	\
    ( (This)->lpVtbl -> put_CacheTime(This,pVal) ) 

#define IRTPControllerV6_get_PUMHandling(This,pVal)	\
    ( (This)->lpVtbl -> get_PUMHandling(This,pVal) ) 

#define IRTPControllerV6_put_PUMHandling(This,pVal)	\
    ( (This)->lpVtbl -> put_PUMHandling(This,pVal) ) 

#define IRTPControllerV6_get_PUPHandling(This,pVal)	\
    ( (This)->lpVtbl -> get_PUPHandling(This,pVal) ) 

#define IRTPControllerV6_put_PUPHandling(This,pVal)	\
    ( (This)->lpVtbl -> put_PUPHandling(This,pVal) ) 

#define IRTPControllerV6_AddExclusion(This,type,path)	\
    ( (This)->lpVtbl -> AddExclusion(This,type,path) ) 

#define IRTPControllerV6_AddExclusionEx(This,type,path,ppID)	\
    ( (This)->lpVtbl -> AddExclusionEx(This,type,path,ppID) ) 

#define IRTPControllerV6_RemoveExclusion(This,pID)	\
    ( (This)->lpVtbl -> RemoveExclusion(This,pID) ) 

#define IRTPControllerV6_UpdateExclusion(This,pID,type,path)	\
    ( (This)->lpVtbl -> UpdateExclusion(This,pID,type,path) ) 

#define IRTPControllerV6_GetNumExclusions(This,pNumExclusions)	\
    ( (This)->lpVtbl -> GetNumExclusions(This,pNumExclusions) ) 

#define IRTPControllerV6_GetExclusionIDs(This,ppExclusionIDs)	\
    ( (This)->lpVtbl -> GetExclusionIDs(This,ppExclusionIDs) ) 

#define IRTPControllerV6_GetExclusion(This,pID,pType,ppPath)	\
    ( (This)->lpVtbl -> GetExclusion(This,pID,pType,ppPath) ) 

#define IRTPControllerV6_ClearExclusions(This)	\
    ( (This)->lpVtbl -> ClearExclusions(This) ) 

#define IRTPControllerV6_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IRTPControllerV6_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IRTPControllerV6_get_totalThreatsBlocked(This,pVal)	\
    ( (This)->lpVtbl -> get_totalThreatsBlocked(This,pVal) ) 

#define IRTPControllerV6_put_totalThreatsBlocked(This,pVal)	\
    ( (This)->lpVtbl -> put_totalThreatsBlocked(This,pVal) ) 

#define IRTPControllerV6_get_WACIntegrationSetting(This,pVal)	\
    ( (This)->lpVtbl -> get_WACIntegrationSetting(This,pVal) ) 

#define IRTPControllerV6_put_WACIntegrationSetting(This,pVal)	\
    ( (This)->lpVtbl -> put_WACIntegrationSetting(This,pVal) ) 


#define IRTPControllerV6_get_EnableShuriken(This,pVal)	\
    ( (This)->lpVtbl -> get_EnableShuriken(This,pVal) ) 

#define IRTPControllerV6_put_EnableShuriken(This,pVal)	\
    ( (This)->lpVtbl -> put_EnableShuriken(This,pVal) ) 

#define IRTPControllerV6_StartV2(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductVersion)	\
    ( (This)->lpVtbl -> StartV2(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductVersion) ) 


#define IRTPControllerV6_StartV3(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV3(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductCode,pProductVersion,pProductBuild) ) 


#define IRTPControllerV6_StopV2(This,timeoutMs,stopType)	\
    ( (This)->lpVtbl -> StopV2(This,timeoutMs,stopType) ) 


#define IRTPControllerV6_GetWacIntegrationActive(This,pVal)	\
    ( (This)->lpVtbl -> GetWacIntegrationActive(This,pVal) ) 


#define IRTPControllerV6_GetStatus(This,pStatus)	\
    ( (This)->lpVtbl -> GetStatus(This,pStatus) ) 

#define IRTPControllerV6_StartV4(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pScanController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV4(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pScanController,pProductCode,pProductVersion,pProductBuild) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRTPControllerV6_INTERFACE_DEFINED__ */


#ifndef __IRTPControllerV7_INTERFACE_DEFINED__
#define __IRTPControllerV7_INTERFACE_DEFINED__

/* interface IRTPControllerV7 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IRTPControllerV7;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("090D2E82-C71B-414E-AF6A-6681A92FF2B3")
    IRTPControllerV7 : public IRTPControllerV6
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AutoGameModeSwitching( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_AutoGameModeSwitching( 
            /* [in] */ VARIANT_BOOL pVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddGameModeApp( 
            /* [in] */ BSTR pAppDisplayName,
            /* [in] */ BSTR pAppFilePath,
            /* [out] */ BSTR *ppID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RemoveGameModeApp( 
            /* [in] */ BSTR pID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNumGameModeApps( 
            /* [out] */ long *pNumGameModeApps) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetGameModeAppIDs( 
            /* [retval][out] */ SAFEARRAY * *ppGameModeAppIDs) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetGameModeApp( 
            /* [in] */ BSTR pID,
            /* [out] */ BSTR *ppAppDisplayName,
            /* [out] */ BSTR *ppAppFilePath) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ClearGameModeApps( void) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_InGameMode( 
            /* [retval][out] */ VARIANT_BOOL *pVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE UpdateGameModeApp( 
            /* [in] */ BSTR pID,
            /* [in] */ BSTR pAppDisplayName,
            /* [in] */ BSTR pAppFilePath) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IRTPControllerV7Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRTPControllerV7 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRTPControllerV7 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRTPControllerV7 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRTPControllerV7 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRTPControllerV7 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRTPControllerV7 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRTPControllerV7 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            IRTPControllerV7 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            IRTPControllerV7 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartProtection )( 
            IRTPControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopProtection )( 
            IRTPControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EnableProtection )( 
            IRTPControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DisableProtection )( 
            IRTPControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetState )( 
            IRTPControllerV7 * This,
            /* [retval][out] */ _RTPState *pState);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SendReply )( 
            IRTPControllerV7 * This,
            /* [in] */ unsigned long MessageId,
            /* [in] */ _RTPAction reply);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetConfig )( 
            IRTPControllerV7 * This,
            /* [retval][out] */ RTPConfig *pConfig);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetConfig )( 
            IRTPControllerV7 * This,
            /* [in] */ RTPConfig *pConfig);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoClean )( 
            IRTPControllerV7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoClean )( 
            IRTPControllerV7 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CacheTime )( 
            IRTPControllerV7 * This,
            /* [retval][out] */ long *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_CacheTime )( 
            IRTPControllerV7 * This,
            /* [in] */ long pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PUMHandling )( 
            IRTPControllerV7 * This,
            /* [retval][out] */ _RtpPupPumHandling *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PUMHandling )( 
            IRTPControllerV7 * This,
            /* [in] */ _RtpPupPumHandling pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_PUPHandling )( 
            IRTPControllerV7 * This,
            /* [retval][out] */ _RtpPupPumHandling *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_PUPHandling )( 
            IRTPControllerV7 * This,
            /* [in] */ _RtpPupPumHandling pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusion )( 
            IRTPControllerV7 * This,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddExclusionEx )( 
            IRTPControllerV7 * This,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path,
            /* [out] */ BSTR *ppID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveExclusion )( 
            IRTPControllerV7 * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *UpdateExclusion )( 
            IRTPControllerV7 * This,
            /* [in] */ BSTR pID,
            /* [in] */ _RtpExclusionType type,
            /* [in] */ BSTR path);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumExclusions )( 
            IRTPControllerV7 * This,
            /* [out] */ long *pNumExclusions);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusionIDs )( 
            IRTPControllerV7 * This,
            /* [retval][out] */ SAFEARRAY * *ppExclusionIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExclusion )( 
            IRTPControllerV7 * This,
            /* [in] */ BSTR pID,
            /* [out] */ _RtpExclusionType *pType,
            /* [out] */ BSTR *ppPath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearExclusions )( 
            IRTPControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            IRTPControllerV7 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            IRTPControllerV7 * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_totalThreatsBlocked )( 
            IRTPControllerV7 * This,
            /* [retval][out] */ UINT64 *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_totalThreatsBlocked )( 
            IRTPControllerV7 * This,
            /* [in] */ UINT64 pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WACIntegrationSetting )( 
            IRTPControllerV7 * This,
            /* [retval][out] */ _WACIntegrationSetting *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_WACIntegrationSetting )( 
            IRTPControllerV7 * This,
            /* [in] */ _WACIntegrationSetting pVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnableShuriken )( 
            IRTPControllerV7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_EnableShuriken )( 
            IRTPControllerV7 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            IRTPControllerV7 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductVersion);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV3 )( 
            IRTPControllerV7 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopV2 )( 
            IRTPControllerV7 * This,
            /* [in] */ long timeoutMs,
            /* [in] */ _RtpStopType stopType);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetWacIntegrationActive )( 
            IRTPControllerV7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetStatus )( 
            IRTPControllerV7 * This,
            /* [retval][out] */ _RTPStatus *pStatus);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV4 )( 
            IRTPControllerV7 * This,
            /* [in] */ BSTR pImplFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ int delayInterval,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ICleanController *pCleanController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ /* external definition not present */ IUpdateController *pUpdateController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ICloudController *pCloudController,
            /* [in] */ /* external definition not present */ IScanController *pScanController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AutoGameModeSwitching )( 
            IRTPControllerV7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_AutoGameModeSwitching )( 
            IRTPControllerV7 * This,
            /* [in] */ VARIANT_BOOL pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddGameModeApp )( 
            IRTPControllerV7 * This,
            /* [in] */ BSTR pAppDisplayName,
            /* [in] */ BSTR pAppFilePath,
            /* [out] */ BSTR *ppID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveGameModeApp )( 
            IRTPControllerV7 * This,
            /* [in] */ BSTR pID);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNumGameModeApps )( 
            IRTPControllerV7 * This,
            /* [out] */ long *pNumGameModeApps);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetGameModeAppIDs )( 
            IRTPControllerV7 * This,
            /* [retval][out] */ SAFEARRAY * *ppGameModeAppIDs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetGameModeApp )( 
            IRTPControllerV7 * This,
            /* [in] */ BSTR pID,
            /* [out] */ BSTR *ppAppDisplayName,
            /* [out] */ BSTR *ppAppFilePath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ClearGameModeApps )( 
            IRTPControllerV7 * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InGameMode )( 
            IRTPControllerV7 * This,
            /* [retval][out] */ VARIANT_BOOL *pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *UpdateGameModeApp )( 
            IRTPControllerV7 * This,
            /* [in] */ BSTR pID,
            /* [in] */ BSTR pAppDisplayName,
            /* [in] */ BSTR pAppFilePath);
        
        END_INTERFACE
    } IRTPControllerV7Vtbl;

    interface IRTPControllerV7
    {
        CONST_VTBL struct IRTPControllerV7Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRTPControllerV7_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRTPControllerV7_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRTPControllerV7_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRTPControllerV7_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRTPControllerV7_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRTPControllerV7_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRTPControllerV7_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRTPControllerV7_Start(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pProductVersion)	\
    ( (This)->lpVtbl -> Start(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pProductVersion) ) 

#define IRTPControllerV7_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define IRTPControllerV7_StartProtection(This)	\
    ( (This)->lpVtbl -> StartProtection(This) ) 

#define IRTPControllerV7_StopProtection(This)	\
    ( (This)->lpVtbl -> StopProtection(This) ) 

#define IRTPControllerV7_EnableProtection(This)	\
    ( (This)->lpVtbl -> EnableProtection(This) ) 

#define IRTPControllerV7_DisableProtection(This)	\
    ( (This)->lpVtbl -> DisableProtection(This) ) 

#define IRTPControllerV7_GetState(This,pState)	\
    ( (This)->lpVtbl -> GetState(This,pState) ) 

#define IRTPControllerV7_SendReply(This,MessageId,reply)	\
    ( (This)->lpVtbl -> SendReply(This,MessageId,reply) ) 

#define IRTPControllerV7_GetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> GetConfig(This,pConfig) ) 

#define IRTPControllerV7_SetConfig(This,pConfig)	\
    ( (This)->lpVtbl -> SetConfig(This,pConfig) ) 

#define IRTPControllerV7_get_AutoClean(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoClean(This,pVal) ) 

#define IRTPControllerV7_put_AutoClean(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoClean(This,pVal) ) 

#define IRTPControllerV7_get_CacheTime(This,pVal)	\
    ( (This)->lpVtbl -> get_CacheTime(This,pVal) ) 

#define IRTPControllerV7_put_CacheTime(This,pVal)	\
    ( (This)->lpVtbl -> put_CacheTime(This,pVal) ) 

#define IRTPControllerV7_get_PUMHandling(This,pVal)	\
    ( (This)->lpVtbl -> get_PUMHandling(This,pVal) ) 

#define IRTPControllerV7_put_PUMHandling(This,pVal)	\
    ( (This)->lpVtbl -> put_PUMHandling(This,pVal) ) 

#define IRTPControllerV7_get_PUPHandling(This,pVal)	\
    ( (This)->lpVtbl -> get_PUPHandling(This,pVal) ) 

#define IRTPControllerV7_put_PUPHandling(This,pVal)	\
    ( (This)->lpVtbl -> put_PUPHandling(This,pVal) ) 

#define IRTPControllerV7_AddExclusion(This,type,path)	\
    ( (This)->lpVtbl -> AddExclusion(This,type,path) ) 

#define IRTPControllerV7_AddExclusionEx(This,type,path,ppID)	\
    ( (This)->lpVtbl -> AddExclusionEx(This,type,path,ppID) ) 

#define IRTPControllerV7_RemoveExclusion(This,pID)	\
    ( (This)->lpVtbl -> RemoveExclusion(This,pID) ) 

#define IRTPControllerV7_UpdateExclusion(This,pID,type,path)	\
    ( (This)->lpVtbl -> UpdateExclusion(This,pID,type,path) ) 

#define IRTPControllerV7_GetNumExclusions(This,pNumExclusions)	\
    ( (This)->lpVtbl -> GetNumExclusions(This,pNumExclusions) ) 

#define IRTPControllerV7_GetExclusionIDs(This,ppExclusionIDs)	\
    ( (This)->lpVtbl -> GetExclusionIDs(This,ppExclusionIDs) ) 

#define IRTPControllerV7_GetExclusion(This,pID,pType,ppPath)	\
    ( (This)->lpVtbl -> GetExclusion(This,pID,pType,ppPath) ) 

#define IRTPControllerV7_ClearExclusions(This)	\
    ( (This)->lpVtbl -> ClearExclusions(This) ) 

#define IRTPControllerV7_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define IRTPControllerV7_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define IRTPControllerV7_get_totalThreatsBlocked(This,pVal)	\
    ( (This)->lpVtbl -> get_totalThreatsBlocked(This,pVal) ) 

#define IRTPControllerV7_put_totalThreatsBlocked(This,pVal)	\
    ( (This)->lpVtbl -> put_totalThreatsBlocked(This,pVal) ) 

#define IRTPControllerV7_get_WACIntegrationSetting(This,pVal)	\
    ( (This)->lpVtbl -> get_WACIntegrationSetting(This,pVal) ) 

#define IRTPControllerV7_put_WACIntegrationSetting(This,pVal)	\
    ( (This)->lpVtbl -> put_WACIntegrationSetting(This,pVal) ) 


#define IRTPControllerV7_get_EnableShuriken(This,pVal)	\
    ( (This)->lpVtbl -> get_EnableShuriken(This,pVal) ) 

#define IRTPControllerV7_put_EnableShuriken(This,pVal)	\
    ( (This)->lpVtbl -> put_EnableShuriken(This,pVal) ) 

#define IRTPControllerV7_StartV2(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductVersion)	\
    ( (This)->lpVtbl -> StartV2(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductVersion) ) 


#define IRTPControllerV7_StartV3(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV3(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pProductCode,pProductVersion,pProductBuild) ) 


#define IRTPControllerV7_StopV2(This,timeoutMs,stopType)	\
    ( (This)->lpVtbl -> StopV2(This,timeoutMs,stopType) ) 


#define IRTPControllerV7_GetWacIntegrationActive(This,pVal)	\
    ( (This)->lpVtbl -> GetWacIntegrationActive(This,pVal) ) 


#define IRTPControllerV7_GetStatus(This,pStatus)	\
    ( (This)->lpVtbl -> GetStatus(This,pStatus) ) 

#define IRTPControllerV7_StartV4(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pScanController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV4(This,pImplFolderPath,pDataPath,delayInterval,pLogController,pCleanController,pTelemetryController,pUpdateController,pLicenseController,pCloudController,pScanController,pProductCode,pProductVersion,pProductBuild) ) 


#define IRTPControllerV7_get_AutoGameModeSwitching(This,pVal)	\
    ( (This)->lpVtbl -> get_AutoGameModeSwitching(This,pVal) ) 

#define IRTPControllerV7_put_AutoGameModeSwitching(This,pVal)	\
    ( (This)->lpVtbl -> put_AutoGameModeSwitching(This,pVal) ) 

#define IRTPControllerV7_AddGameModeApp(This,pAppDisplayName,pAppFilePath,ppID)	\
    ( (This)->lpVtbl -> AddGameModeApp(This,pAppDisplayName,pAppFilePath,ppID) ) 

#define IRTPControllerV7_RemoveGameModeApp(This,pID)	\
    ( (This)->lpVtbl -> RemoveGameModeApp(This,pID) ) 

#define IRTPControllerV7_GetNumGameModeApps(This,pNumGameModeApps)	\
    ( (This)->lpVtbl -> GetNumGameModeApps(This,pNumGameModeApps) ) 

#define IRTPControllerV7_GetGameModeAppIDs(This,ppGameModeAppIDs)	\
    ( (This)->lpVtbl -> GetGameModeAppIDs(This,ppGameModeAppIDs) ) 

#define IRTPControllerV7_GetGameModeApp(This,pID,ppAppDisplayName,ppAppFilePath)	\
    ( (This)->lpVtbl -> GetGameModeApp(This,pID,ppAppDisplayName,ppAppFilePath) ) 

#define IRTPControllerV7_ClearGameModeApps(This)	\
    ( (This)->lpVtbl -> ClearGameModeApps(This) ) 

#define IRTPControllerV7_get_InGameMode(This,pVal)	\
    ( (This)->lpVtbl -> get_InGameMode(This,pVal) ) 

#define IRTPControllerV7_UpdateGameModeApp(This,pID,pAppDisplayName,pAppFilePath)	\
    ( (This)->lpVtbl -> UpdateGameModeApp(This,pID,pAppDisplayName,pAppFilePath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRTPControllerV7_INTERFACE_DEFINED__ */


#ifndef __IRTPControllerEventsV2_INTERFACE_DEFINED__
#define __IRTPControllerEventsV2_INTERFACE_DEFINED__

/* interface IRTPControllerEventsV2 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IRTPControllerEventsV2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FC34538A-37CB-44B4-9264-533E9347BB40")
    IRTPControllerEventsV2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE EnableShurikenOptionChanged( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IRTPControllerEventsV2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRTPControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRTPControllerEventsV2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRTPControllerEventsV2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRTPControllerEventsV2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRTPControllerEventsV2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRTPControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRTPControllerEventsV2 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EnableShurikenOptionChanged )( 
            IRTPControllerEventsV2 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        END_INTERFACE
    } IRTPControllerEventsV2Vtbl;

    interface IRTPControllerEventsV2
    {
        CONST_VTBL struct IRTPControllerEventsV2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRTPControllerEventsV2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRTPControllerEventsV2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRTPControllerEventsV2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRTPControllerEventsV2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRTPControllerEventsV2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRTPControllerEventsV2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRTPControllerEventsV2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRTPControllerEventsV2_EnableShurikenOptionChanged(This,newVal)	\
    ( (This)->lpVtbl -> EnableShurikenOptionChanged(This,newVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRTPControllerEventsV2_INTERFACE_DEFINED__ */


#ifndef ___IRTPControllerEventsV2_DISPINTERFACE_DEFINED__
#define ___IRTPControllerEventsV2_DISPINTERFACE_DEFINED__

/* dispinterface _IRTPControllerEventsV2 */
/* [uuid] */ 


EXTERN_C const IID DIID__IRTPControllerEventsV2;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("1A173904-D20F-4872-93D5-CBC1336AE0D6")
    _IRTPControllerEventsV2 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IRTPControllerEventsV2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IRTPControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IRTPControllerEventsV2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IRTPControllerEventsV2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IRTPControllerEventsV2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IRTPControllerEventsV2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IRTPControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IRTPControllerEventsV2 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IRTPControllerEventsV2Vtbl;

    interface _IRTPControllerEventsV2
    {
        CONST_VTBL struct _IRTPControllerEventsV2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IRTPControllerEventsV2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IRTPControllerEventsV2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IRTPControllerEventsV2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IRTPControllerEventsV2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IRTPControllerEventsV2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IRTPControllerEventsV2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IRTPControllerEventsV2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IRTPControllerEventsV2_DISPINTERFACE_DEFINED__ */


#ifndef __IRTPControllerEventsV3_INTERFACE_DEFINED__
#define __IRTPControllerEventsV3_INTERFACE_DEFINED__

/* interface IRTPControllerEventsV3 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IRTPControllerEventsV3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2846D47E-9B85-4836-B883-6A7B493E2D6A")
    IRTPControllerEventsV3 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StatusChangedCallback( 
            /* [in] */ _RTPStatus rtpStatus) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IRTPControllerEventsV3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRTPControllerEventsV3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRTPControllerEventsV3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRTPControllerEventsV3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRTPControllerEventsV3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRTPControllerEventsV3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRTPControllerEventsV3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRTPControllerEventsV3 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StatusChangedCallback )( 
            IRTPControllerEventsV3 * This,
            /* [in] */ _RTPStatus rtpStatus);
        
        END_INTERFACE
    } IRTPControllerEventsV3Vtbl;

    interface IRTPControllerEventsV3
    {
        CONST_VTBL struct IRTPControllerEventsV3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRTPControllerEventsV3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRTPControllerEventsV3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRTPControllerEventsV3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRTPControllerEventsV3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRTPControllerEventsV3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRTPControllerEventsV3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRTPControllerEventsV3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRTPControllerEventsV3_StatusChangedCallback(This,rtpStatus)	\
    ( (This)->lpVtbl -> StatusChangedCallback(This,rtpStatus) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRTPControllerEventsV3_INTERFACE_DEFINED__ */


#ifndef ___IRTPControllerEventsV3_DISPINTERFACE_DEFINED__
#define ___IRTPControllerEventsV3_DISPINTERFACE_DEFINED__

/* dispinterface _IRTPControllerEventsV3 */
/* [uuid] */ 


EXTERN_C const IID DIID__IRTPControllerEventsV3;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("7E96FEF0-48F7-4ECB-B010-501044575477")
    _IRTPControllerEventsV3 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IRTPControllerEventsV3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IRTPControllerEventsV3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IRTPControllerEventsV3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IRTPControllerEventsV3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IRTPControllerEventsV3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IRTPControllerEventsV3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IRTPControllerEventsV3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IRTPControllerEventsV3 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IRTPControllerEventsV3Vtbl;

    interface _IRTPControllerEventsV3
    {
        CONST_VTBL struct _IRTPControllerEventsV3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IRTPControllerEventsV3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IRTPControllerEventsV3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IRTPControllerEventsV3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IRTPControllerEventsV3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IRTPControllerEventsV3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IRTPControllerEventsV3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IRTPControllerEventsV3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IRTPControllerEventsV3_DISPINTERFACE_DEFINED__ */


#ifndef __IRTPControllerEventsV4_INTERFACE_DEFINED__
#define __IRTPControllerEventsV4_INTERFACE_DEFINED__

/* interface IRTPControllerEventsV4 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IRTPControllerEventsV4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("76AD4430-9C5C-4FC2-A15F-4E16ACD735AC")
    IRTPControllerEventsV4 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ThreatDetectedCallbackV2( 
            /* [in] */ BSTR DetectionID,
            /* [in] */ long ThreatId,
            /* [in] */ BSTR ThreatName,
            /* [in] */ long RuleId,
            /* [in] */ BSTR ObjectName) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IRTPControllerEventsV4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRTPControllerEventsV4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRTPControllerEventsV4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRTPControllerEventsV4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRTPControllerEventsV4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRTPControllerEventsV4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRTPControllerEventsV4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRTPControllerEventsV4 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ThreatDetectedCallbackV2 )( 
            IRTPControllerEventsV4 * This,
            /* [in] */ BSTR DetectionID,
            /* [in] */ long ThreatId,
            /* [in] */ BSTR ThreatName,
            /* [in] */ long RuleId,
            /* [in] */ BSTR ObjectName);
        
        END_INTERFACE
    } IRTPControllerEventsV4Vtbl;

    interface IRTPControllerEventsV4
    {
        CONST_VTBL struct IRTPControllerEventsV4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRTPControllerEventsV4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRTPControllerEventsV4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRTPControllerEventsV4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRTPControllerEventsV4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRTPControllerEventsV4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRTPControllerEventsV4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRTPControllerEventsV4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRTPControllerEventsV4_ThreatDetectedCallbackV2(This,DetectionID,ThreatId,ThreatName,RuleId,ObjectName)	\
    ( (This)->lpVtbl -> ThreatDetectedCallbackV2(This,DetectionID,ThreatId,ThreatName,RuleId,ObjectName) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRTPControllerEventsV4_INTERFACE_DEFINED__ */


#ifndef ___IRTPControllerEventsV4_DISPINTERFACE_DEFINED__
#define ___IRTPControllerEventsV4_DISPINTERFACE_DEFINED__

/* dispinterface _IRTPControllerEventsV4 */
/* [uuid] */ 


EXTERN_C const IID DIID__IRTPControllerEventsV4;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("E2870643-0645-41F9-BCCB-F5969386162C")
    _IRTPControllerEventsV4 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IRTPControllerEventsV4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IRTPControllerEventsV4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IRTPControllerEventsV4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IRTPControllerEventsV4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IRTPControllerEventsV4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IRTPControllerEventsV4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IRTPControllerEventsV4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IRTPControllerEventsV4 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IRTPControllerEventsV4Vtbl;

    interface _IRTPControllerEventsV4
    {
        CONST_VTBL struct _IRTPControllerEventsV4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IRTPControllerEventsV4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IRTPControllerEventsV4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IRTPControllerEventsV4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IRTPControllerEventsV4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IRTPControllerEventsV4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IRTPControllerEventsV4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IRTPControllerEventsV4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IRTPControllerEventsV4_DISPINTERFACE_DEFINED__ */


#ifndef __IRTPControllerEventsV5_INTERFACE_DEFINED__
#define __IRTPControllerEventsV5_INTERFACE_DEFINED__

/* interface IRTPControllerEventsV5 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_IRTPControllerEventsV5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("46AEAC9A-C091-4B63-926C-37CFBD9D244F")
    IRTPControllerEventsV5 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GameModeEntered( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GameModeExited( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AutoGameModeSwitchingChanged( 
            /* [in] */ VARIANT_BOOL newVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GameModeAppAdded( 
            /* [in] */ BSTR pID,
            /* [in] */ BSTR pAppDisplayName,
            /* [in] */ BSTR pAppFilePath) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GameModeAppRemoved( 
            /* [in] */ BSTR pID,
            /* [in] */ BSTR pAppDisplayName,
            /* [in] */ BSTR pAppFilePath) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GameModeAppsCleared( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GameModeAppUpdated( 
            /* [in] */ BSTR pID,
            /* [in] */ BSTR pAppDisplayName,
            /* [in] */ BSTR pAppFilePath) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IRTPControllerEventsV5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRTPControllerEventsV5 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRTPControllerEventsV5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRTPControllerEventsV5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRTPControllerEventsV5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRTPControllerEventsV5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRTPControllerEventsV5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRTPControllerEventsV5 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GameModeEntered )( 
            IRTPControllerEventsV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GameModeExited )( 
            IRTPControllerEventsV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AutoGameModeSwitchingChanged )( 
            IRTPControllerEventsV5 * This,
            /* [in] */ VARIANT_BOOL newVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GameModeAppAdded )( 
            IRTPControllerEventsV5 * This,
            /* [in] */ BSTR pID,
            /* [in] */ BSTR pAppDisplayName,
            /* [in] */ BSTR pAppFilePath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GameModeAppRemoved )( 
            IRTPControllerEventsV5 * This,
            /* [in] */ BSTR pID,
            /* [in] */ BSTR pAppDisplayName,
            /* [in] */ BSTR pAppFilePath);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GameModeAppsCleared )( 
            IRTPControllerEventsV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GameModeAppUpdated )( 
            IRTPControllerEventsV5 * This,
            /* [in] */ BSTR pID,
            /* [in] */ BSTR pAppDisplayName,
            /* [in] */ BSTR pAppFilePath);
        
        END_INTERFACE
    } IRTPControllerEventsV5Vtbl;

    interface IRTPControllerEventsV5
    {
        CONST_VTBL struct IRTPControllerEventsV5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRTPControllerEventsV5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRTPControllerEventsV5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRTPControllerEventsV5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRTPControllerEventsV5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRTPControllerEventsV5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRTPControllerEventsV5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRTPControllerEventsV5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRTPControllerEventsV5_GameModeEntered(This)	\
    ( (This)->lpVtbl -> GameModeEntered(This) ) 

#define IRTPControllerEventsV5_GameModeExited(This)	\
    ( (This)->lpVtbl -> GameModeExited(This) ) 

#define IRTPControllerEventsV5_AutoGameModeSwitchingChanged(This,newVal)	\
    ( (This)->lpVtbl -> AutoGameModeSwitchingChanged(This,newVal) ) 

#define IRTPControllerEventsV5_GameModeAppAdded(This,pID,pAppDisplayName,pAppFilePath)	\
    ( (This)->lpVtbl -> GameModeAppAdded(This,pID,pAppDisplayName,pAppFilePath) ) 

#define IRTPControllerEventsV5_GameModeAppRemoved(This,pID,pAppDisplayName,pAppFilePath)	\
    ( (This)->lpVtbl -> GameModeAppRemoved(This,pID,pAppDisplayName,pAppFilePath) ) 

#define IRTPControllerEventsV5_GameModeAppsCleared(This)	\
    ( (This)->lpVtbl -> GameModeAppsCleared(This) ) 

#define IRTPControllerEventsV5_GameModeAppUpdated(This,pID,pAppDisplayName,pAppFilePath)	\
    ( (This)->lpVtbl -> GameModeAppUpdated(This,pID,pAppDisplayName,pAppFilePath) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRTPControllerEventsV5_INTERFACE_DEFINED__ */


#ifndef ___IRTPControllerEventsV5_DISPINTERFACE_DEFINED__
#define ___IRTPControllerEventsV5_DISPINTERFACE_DEFINED__

/* dispinterface _IRTPControllerEventsV5 */
/* [uuid] */ 


EXTERN_C const IID DIID__IRTPControllerEventsV5;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("32DF4C97-FE35-41AA-B18F-583AA53723A3")
    _IRTPControllerEventsV5 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _IRTPControllerEventsV5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IRTPControllerEventsV5 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IRTPControllerEventsV5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IRTPControllerEventsV5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IRTPControllerEventsV5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IRTPControllerEventsV5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IRTPControllerEventsV5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IRTPControllerEventsV5 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IRTPControllerEventsV5Vtbl;

    interface _IRTPControllerEventsV5
    {
        CONST_VTBL struct _IRTPControllerEventsV5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IRTPControllerEventsV5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IRTPControllerEventsV5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IRTPControllerEventsV5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IRTPControllerEventsV5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IRTPControllerEventsV5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IRTPControllerEventsV5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IRTPControllerEventsV5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___IRTPControllerEventsV5_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_RTPController;

#ifdef __cplusplus

class DECLSPEC_UUID("E1AC7139-D1FF-4DE9-84A4-92E2B47F5D2A")
RTPController;
#endif
#endif /* __RTPControllerCOMLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


