

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.01.0622 */
/* at Tue Jan 19 14:14:07 2038
 */
/* Compiler settings for C:\Users\User\source\repos\MBAMExploit\Typelibs\SPController.IDL:
    Oicf, W1, Zp8, env=Win64 (32b run), target_arch=AMD64 8.01.0622 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#include "LicenseController.h"
#include "LogController.h"
#include "TelemetryController.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */


#ifndef __SPController_h__
#define __SPController_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __ISPController_FWD_DEFINED__
#define __ISPController_FWD_DEFINED__
typedef interface ISPController ISPController;

#endif 	/* __ISPController_FWD_DEFINED__ */


#ifndef __ISPControllerV2_FWD_DEFINED__
#define __ISPControllerV2_FWD_DEFINED__
typedef interface ISPControllerV2 ISPControllerV2;

#endif 	/* __ISPControllerV2_FWD_DEFINED__ */


#ifndef __ISPControllerV3_FWD_DEFINED__
#define __ISPControllerV3_FWD_DEFINED__
typedef interface ISPControllerV3 ISPControllerV3;

#endif 	/* __ISPControllerV3_FWD_DEFINED__ */


#ifndef __ISPControllerV4_FWD_DEFINED__
#define __ISPControllerV4_FWD_DEFINED__
typedef interface ISPControllerV4 ISPControllerV4;

#endif 	/* __ISPControllerV4_FWD_DEFINED__ */


#ifndef __ISPControllerV5_FWD_DEFINED__
#define __ISPControllerV5_FWD_DEFINED__
typedef interface ISPControllerV5 ISPControllerV5;

#endif 	/* __ISPControllerV5_FWD_DEFINED__ */


#ifndef __ISPControllerEvents_FWD_DEFINED__
#define __ISPControllerEvents_FWD_DEFINED__
typedef interface ISPControllerEvents ISPControllerEvents;

#endif 	/* __ISPControllerEvents_FWD_DEFINED__ */


#ifndef ___ISPControllerEvents_FWD_DEFINED__
#define ___ISPControllerEvents_FWD_DEFINED__
typedef interface _ISPControllerEvents _ISPControllerEvents;

#endif 	/* ___ISPControllerEvents_FWD_DEFINED__ */


#ifndef __ISPControllerEventsV2_FWD_DEFINED__
#define __ISPControllerEventsV2_FWD_DEFINED__
typedef interface ISPControllerEventsV2 ISPControllerEventsV2;

#endif 	/* __ISPControllerEventsV2_FWD_DEFINED__ */


#ifndef ___ISPControllerEventsV2_FWD_DEFINED__
#define ___ISPControllerEventsV2_FWD_DEFINED__
typedef interface _ISPControllerEventsV2 _ISPControllerEventsV2;

#endif 	/* ___ISPControllerEventsV2_FWD_DEFINED__ */


#ifndef __SPController_FWD_DEFINED__
#define __SPController_FWD_DEFINED__

#ifdef __cplusplus
typedef class SPController SPController;
#else
typedef struct SPController SPController;
#endif /* __cplusplus */

#endif 	/* __SPController_FWD_DEFINED__ */


#ifdef __cplusplus
extern "C"{
#endif 



#ifndef __SPControllerCOMLib_LIBRARY_DEFINED__
#define __SPControllerCOMLib_LIBRARY_DEFINED__

/* library SPControllerCOMLib */
/* [custom][custom][custom][version][uuid] */ 










typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_SPController_0000_0000_0001
    {
        SpStateNotInstalled	= 0,
        SpStateEnabled	= 1,
        SpStateDisabled	= 2,
        SpStateNotStarted	= 3
    } 	_SpState;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_SPController_0000_0000_0002
    {
        SpOptionNameDriverState	= 0,
        SpOptionNameDriverInstalled	= 1,
        SpOptionNameStartMode	= 2
    } 	_SpOptionName;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_SPController_0000_0000_0003
    {
        SProtStateEnabled	= 1,
        SProtStateDisabled	= 2,
        SProtStateNotAvailable	= 3,
        SProtStateNotSupported	= 4
    } 	_SProtState;

typedef /* [public][public][public][public] */ 
enum __MIDL___MIDL_itf_SPController_0000_0000_0004
    {
        SProtStatusInactive	= 0,
        SProtStatusInitializing	= 1,
        SProtStatusStarting	= 2,
        SProtStatusStarted	= 3,
        SProtStatusStopping	= 4,
        SProtStatusStopped	= 5,
        SProtStatusError	= 6,
        SProtStatusNeedsReboot	= 7,
        SProtStatusUninitialized	= 0xffffffff
    } 	_SProtStatus;

typedef /* [public][public][public] */ 
enum __MIDL___MIDL_itf_SPController_0000_0000_0005
    {
        SpBootStartMode	= 0,
        SpAutoStartMode	= 1
    } 	_SpStartMode;

typedef /* [public][public] */ 
enum __MIDL___MIDL_itf_SPController_0001_0001_0001
    {
        SpManualStop	= 0,
        SpSystemStop	= 1
    } 	_SpStopType;


EXTERN_C const IID LIBID_SPControllerCOMLib;

#ifndef __ISPController_INTERFACE_DEFINED__
#define __ISPController_INTERFACE_DEFINED__

/* interface ISPController */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ISPController;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DB82CDC6-F12A-4156-8DBF-EC7465B9C0B9")
    ISPController : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Start( 
            /* [in] */ BSTR pCoreFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Stop( 
            /* [in] */ long timeoutMs) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE EnableProtection( 
            /* [retval][out] */ unsigned long *Status) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DisableProtection( 
            /* [retval][out] */ unsigned long *Status) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ChangeMode( 
            /* [in] */ _SpStartMode Mode,
            /* [retval][out] */ unsigned long *Status) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetFileProtection( 
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [in] */ unsigned long Flags,
            /* [retval][out] */ unsigned long *Status) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetRegistryProtection( 
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [in] */ unsigned long Flags,
            /* [retval][out] */ unsigned long *Status) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ProtectUserKeys( 
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [retval][out] */ unsigned long *Status) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE QuarantineProcess( 
            /* [in] */ unsigned long Pid,
            /* [in] */ VARIANT_BOOL Add,
            /* [retval][out] */ unsigned long *Status) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE TerminateProc( 
            /* [in] */ unsigned long Pid,
            /* [retval][out] */ unsigned long *Status) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RestrainFile( 
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [retval][out] */ unsigned long *Status) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DorFile( 
            /* [in] */ BSTR File,
            /* [retval][out] */ unsigned long *Status) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetRefCount( 
            /* [out] */ unsigned long *RefCount,
            /* [retval][out] */ unsigned long *Status) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetProcessProtection( 
            /* [in] */ VARIANT_BOOL Add,
            /* [retval][out] */ unsigned long *Status) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PrepareUpdate( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FinishUpdate( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetMode( 
            /* [out] */ _SpStartMode *Mode,
            /* [retval][out] */ unsigned long *Status) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ProtectionState( 
            /* [retval][out] */ long *pVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Uninstall( 
            /* [in] */ VARIANT_BOOL UpdateConfig,
            /* [retval][out] */ unsigned long *Status) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISPControllerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISPController * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISPController * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISPController * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISPController * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISPController * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISPController * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISPController * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ISPController * This,
            /* [in] */ BSTR pCoreFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ISPController * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EnableProtection )( 
            ISPController * This,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DisableProtection )( 
            ISPController * This,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ChangeMode )( 
            ISPController * This,
            /* [in] */ _SpStartMode Mode,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetFileProtection )( 
            ISPController * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [in] */ unsigned long Flags,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetRegistryProtection )( 
            ISPController * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [in] */ unsigned long Flags,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ProtectUserKeys )( 
            ISPController * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QuarantineProcess )( 
            ISPController * This,
            /* [in] */ unsigned long Pid,
            /* [in] */ VARIANT_BOOL Add,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *TerminateProc )( 
            ISPController * This,
            /* [in] */ unsigned long Pid,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestrainFile )( 
            ISPController * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DorFile )( 
            ISPController * This,
            /* [in] */ BSTR File,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetRefCount )( 
            ISPController * This,
            /* [out] */ unsigned long *RefCount,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetProcessProtection )( 
            ISPController * This,
            /* [in] */ VARIANT_BOOL Add,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ISPController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ISPController * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetMode )( 
            ISPController * This,
            /* [out] */ _SpStartMode *Mode,
            /* [retval][out] */ unsigned long *Status);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectionState )( 
            ISPController * This,
            /* [retval][out] */ long *pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Uninstall )( 
            ISPController * This,
            /* [in] */ VARIANT_BOOL UpdateConfig,
            /* [retval][out] */ unsigned long *Status);
        
        END_INTERFACE
    } ISPControllerVtbl;

    interface ISPController
    {
        CONST_VTBL struct ISPControllerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISPController_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISPController_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISPController_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISPController_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISPController_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISPController_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISPController_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISPController_Start(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController)	\
    ( (This)->lpVtbl -> Start(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController) ) 

#define ISPController_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define ISPController_EnableProtection(This,Status)	\
    ( (This)->lpVtbl -> EnableProtection(This,Status) ) 

#define ISPController_DisableProtection(This,Status)	\
    ( (This)->lpVtbl -> DisableProtection(This,Status) ) 

#define ISPController_ChangeMode(This,Mode,Status)	\
    ( (This)->lpVtbl -> ChangeMode(This,Mode,Status) ) 

#define ISPController_SetFileProtection(This,Path,Add,Persist,Flags,Status)	\
    ( (This)->lpVtbl -> SetFileProtection(This,Path,Add,Persist,Flags,Status) ) 

#define ISPController_SetRegistryProtection(This,Path,Add,Persist,Flags,Status)	\
    ( (This)->lpVtbl -> SetRegistryProtection(This,Path,Add,Persist,Flags,Status) ) 

#define ISPController_ProtectUserKeys(This,Path,Add,Persist,Status)	\
    ( (This)->lpVtbl -> ProtectUserKeys(This,Path,Add,Persist,Status) ) 

#define ISPController_QuarantineProcess(This,Pid,Add,Status)	\
    ( (This)->lpVtbl -> QuarantineProcess(This,Pid,Add,Status) ) 

#define ISPController_TerminateProc(This,Pid,Status)	\
    ( (This)->lpVtbl -> TerminateProc(This,Pid,Status) ) 

#define ISPController_RestrainFile(This,Path,Add,Persist,Status)	\
    ( (This)->lpVtbl -> RestrainFile(This,Path,Add,Persist,Status) ) 

#define ISPController_DorFile(This,File,Status)	\
    ( (This)->lpVtbl -> DorFile(This,File,Status) ) 

#define ISPController_GetRefCount(This,RefCount,Status)	\
    ( (This)->lpVtbl -> GetRefCount(This,RefCount,Status) ) 

#define ISPController_SetProcessProtection(This,Add,Status)	\
    ( (This)->lpVtbl -> SetProcessProtection(This,Add,Status) ) 

#define ISPController_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define ISPController_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ISPController_GetMode(This,Mode,Status)	\
    ( (This)->lpVtbl -> GetMode(This,Mode,Status) ) 

#define ISPController_get_ProtectionState(This,pVal)	\
    ( (This)->lpVtbl -> get_ProtectionState(This,pVal) ) 

#define ISPController_Uninstall(This,UpdateConfig,Status)	\
    ( (This)->lpVtbl -> Uninstall(This,UpdateConfig,Status) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISPController_INTERFACE_DEFINED__ */


#ifndef __ISPControllerV2_INTERFACE_DEFINED__
#define __ISPControllerV2_INTERFACE_DEFINED__

/* interface ISPControllerV2 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ISPControllerV2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8B05F69B-4F9B-4FD3-A491-16153F999E00")
    ISPControllerV2 : public ISPController
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StartV2( 
            /* [in] */ BSTR pCoreFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISPControllerV2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISPControllerV2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISPControllerV2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISPControllerV2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISPControllerV2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISPControllerV2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISPControllerV2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISPControllerV2 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ISPControllerV2 * This,
            /* [in] */ BSTR pCoreFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ISPControllerV2 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EnableProtection )( 
            ISPControllerV2 * This,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DisableProtection )( 
            ISPControllerV2 * This,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ChangeMode )( 
            ISPControllerV2 * This,
            /* [in] */ _SpStartMode Mode,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetFileProtection )( 
            ISPControllerV2 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [in] */ unsigned long Flags,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetRegistryProtection )( 
            ISPControllerV2 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [in] */ unsigned long Flags,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ProtectUserKeys )( 
            ISPControllerV2 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QuarantineProcess )( 
            ISPControllerV2 * This,
            /* [in] */ unsigned long Pid,
            /* [in] */ VARIANT_BOOL Add,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *TerminateProc )( 
            ISPControllerV2 * This,
            /* [in] */ unsigned long Pid,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestrainFile )( 
            ISPControllerV2 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DorFile )( 
            ISPControllerV2 * This,
            /* [in] */ BSTR File,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetRefCount )( 
            ISPControllerV2 * This,
            /* [out] */ unsigned long *RefCount,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetProcessProtection )( 
            ISPControllerV2 * This,
            /* [in] */ VARIANT_BOOL Add,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ISPControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ISPControllerV2 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetMode )( 
            ISPControllerV2 * This,
            /* [out] */ _SpStartMode *Mode,
            /* [retval][out] */ unsigned long *Status);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectionState )( 
            ISPControllerV2 * This,
            /* [retval][out] */ long *pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Uninstall )( 
            ISPControllerV2 * This,
            /* [in] */ VARIANT_BOOL UpdateConfig,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            ISPControllerV2 * This,
            /* [in] */ BSTR pCoreFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        END_INTERFACE
    } ISPControllerV2Vtbl;

    interface ISPControllerV2
    {
        CONST_VTBL struct ISPControllerV2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISPControllerV2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISPControllerV2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISPControllerV2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISPControllerV2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISPControllerV2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISPControllerV2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISPControllerV2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISPControllerV2_Start(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController)	\
    ( (This)->lpVtbl -> Start(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController) ) 

#define ISPControllerV2_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define ISPControllerV2_EnableProtection(This,Status)	\
    ( (This)->lpVtbl -> EnableProtection(This,Status) ) 

#define ISPControllerV2_DisableProtection(This,Status)	\
    ( (This)->lpVtbl -> DisableProtection(This,Status) ) 

#define ISPControllerV2_ChangeMode(This,Mode,Status)	\
    ( (This)->lpVtbl -> ChangeMode(This,Mode,Status) ) 

#define ISPControllerV2_SetFileProtection(This,Path,Add,Persist,Flags,Status)	\
    ( (This)->lpVtbl -> SetFileProtection(This,Path,Add,Persist,Flags,Status) ) 

#define ISPControllerV2_SetRegistryProtection(This,Path,Add,Persist,Flags,Status)	\
    ( (This)->lpVtbl -> SetRegistryProtection(This,Path,Add,Persist,Flags,Status) ) 

#define ISPControllerV2_ProtectUserKeys(This,Path,Add,Persist,Status)	\
    ( (This)->lpVtbl -> ProtectUserKeys(This,Path,Add,Persist,Status) ) 

#define ISPControllerV2_QuarantineProcess(This,Pid,Add,Status)	\
    ( (This)->lpVtbl -> QuarantineProcess(This,Pid,Add,Status) ) 

#define ISPControllerV2_TerminateProc(This,Pid,Status)	\
    ( (This)->lpVtbl -> TerminateProc(This,Pid,Status) ) 

#define ISPControllerV2_RestrainFile(This,Path,Add,Persist,Status)	\
    ( (This)->lpVtbl -> RestrainFile(This,Path,Add,Persist,Status) ) 

#define ISPControllerV2_DorFile(This,File,Status)	\
    ( (This)->lpVtbl -> DorFile(This,File,Status) ) 

#define ISPControllerV2_GetRefCount(This,RefCount,Status)	\
    ( (This)->lpVtbl -> GetRefCount(This,RefCount,Status) ) 

#define ISPControllerV2_SetProcessProtection(This,Add,Status)	\
    ( (This)->lpVtbl -> SetProcessProtection(This,Add,Status) ) 

#define ISPControllerV2_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define ISPControllerV2_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ISPControllerV2_GetMode(This,Mode,Status)	\
    ( (This)->lpVtbl -> GetMode(This,Mode,Status) ) 

#define ISPControllerV2_get_ProtectionState(This,pVal)	\
    ( (This)->lpVtbl -> get_ProtectionState(This,pVal) ) 

#define ISPControllerV2_Uninstall(This,UpdateConfig,Status)	\
    ( (This)->lpVtbl -> Uninstall(This,UpdateConfig,Status) ) 


#define ISPControllerV2_StartV2(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV2(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController,pProductCode,pProductVersion,pProductBuild) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISPControllerV2_INTERFACE_DEFINED__ */


#ifndef __ISPControllerV3_INTERFACE_DEFINED__
#define __ISPControllerV3_INTERFACE_DEFINED__

/* interface ISPControllerV3 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ISPControllerV3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("77AD284A-4686-413D-AA76-BDFC1DF52A19")
    ISPControllerV3 : public ISPControllerV2
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StopV2( 
            /* [in] */ long timeoutMs,
            /* [in] */ _SpStopType stopType) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISPControllerV3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISPControllerV3 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISPControllerV3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISPControllerV3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISPControllerV3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISPControllerV3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISPControllerV3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISPControllerV3 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ISPControllerV3 * This,
            /* [in] */ BSTR pCoreFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ISPControllerV3 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EnableProtection )( 
            ISPControllerV3 * This,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DisableProtection )( 
            ISPControllerV3 * This,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ChangeMode )( 
            ISPControllerV3 * This,
            /* [in] */ _SpStartMode Mode,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetFileProtection )( 
            ISPControllerV3 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [in] */ unsigned long Flags,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetRegistryProtection )( 
            ISPControllerV3 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [in] */ unsigned long Flags,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ProtectUserKeys )( 
            ISPControllerV3 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QuarantineProcess )( 
            ISPControllerV3 * This,
            /* [in] */ unsigned long Pid,
            /* [in] */ VARIANT_BOOL Add,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *TerminateProc )( 
            ISPControllerV3 * This,
            /* [in] */ unsigned long Pid,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestrainFile )( 
            ISPControllerV3 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DorFile )( 
            ISPControllerV3 * This,
            /* [in] */ BSTR File,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetRefCount )( 
            ISPControllerV3 * This,
            /* [out] */ unsigned long *RefCount,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetProcessProtection )( 
            ISPControllerV3 * This,
            /* [in] */ VARIANT_BOOL Add,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ISPControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ISPControllerV3 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetMode )( 
            ISPControllerV3 * This,
            /* [out] */ _SpStartMode *Mode,
            /* [retval][out] */ unsigned long *Status);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectionState )( 
            ISPControllerV3 * This,
            /* [retval][out] */ long *pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Uninstall )( 
            ISPControllerV3 * This,
            /* [in] */ VARIANT_BOOL UpdateConfig,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            ISPControllerV3 * This,
            /* [in] */ BSTR pCoreFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopV2 )( 
            ISPControllerV3 * This,
            /* [in] */ long timeoutMs,
            /* [in] */ _SpStopType stopType);
        
        END_INTERFACE
    } ISPControllerV3Vtbl;

    interface ISPControllerV3
    {
        CONST_VTBL struct ISPControllerV3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISPControllerV3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISPControllerV3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISPControllerV3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISPControllerV3_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISPControllerV3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISPControllerV3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISPControllerV3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISPControllerV3_Start(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController)	\
    ( (This)->lpVtbl -> Start(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController) ) 

#define ISPControllerV3_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define ISPControllerV3_EnableProtection(This,Status)	\
    ( (This)->lpVtbl -> EnableProtection(This,Status) ) 

#define ISPControllerV3_DisableProtection(This,Status)	\
    ( (This)->lpVtbl -> DisableProtection(This,Status) ) 

#define ISPControllerV3_ChangeMode(This,Mode,Status)	\
    ( (This)->lpVtbl -> ChangeMode(This,Mode,Status) ) 

#define ISPControllerV3_SetFileProtection(This,Path,Add,Persist,Flags,Status)	\
    ( (This)->lpVtbl -> SetFileProtection(This,Path,Add,Persist,Flags,Status) ) 

#define ISPControllerV3_SetRegistryProtection(This,Path,Add,Persist,Flags,Status)	\
    ( (This)->lpVtbl -> SetRegistryProtection(This,Path,Add,Persist,Flags,Status) ) 

#define ISPControllerV3_ProtectUserKeys(This,Path,Add,Persist,Status)	\
    ( (This)->lpVtbl -> ProtectUserKeys(This,Path,Add,Persist,Status) ) 

#define ISPControllerV3_QuarantineProcess(This,Pid,Add,Status)	\
    ( (This)->lpVtbl -> QuarantineProcess(This,Pid,Add,Status) ) 

#define ISPControllerV3_TerminateProc(This,Pid,Status)	\
    ( (This)->lpVtbl -> TerminateProc(This,Pid,Status) ) 

#define ISPControllerV3_RestrainFile(This,Path,Add,Persist,Status)	\
    ( (This)->lpVtbl -> RestrainFile(This,Path,Add,Persist,Status) ) 

#define ISPControllerV3_DorFile(This,File,Status)	\
    ( (This)->lpVtbl -> DorFile(This,File,Status) ) 

#define ISPControllerV3_GetRefCount(This,RefCount,Status)	\
    ( (This)->lpVtbl -> GetRefCount(This,RefCount,Status) ) 

#define ISPControllerV3_SetProcessProtection(This,Add,Status)	\
    ( (This)->lpVtbl -> SetProcessProtection(This,Add,Status) ) 

#define ISPControllerV3_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define ISPControllerV3_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ISPControllerV3_GetMode(This,Mode,Status)	\
    ( (This)->lpVtbl -> GetMode(This,Mode,Status) ) 

#define ISPControllerV3_get_ProtectionState(This,pVal)	\
    ( (This)->lpVtbl -> get_ProtectionState(This,pVal) ) 

#define ISPControllerV3_Uninstall(This,UpdateConfig,Status)	\
    ( (This)->lpVtbl -> Uninstall(This,UpdateConfig,Status) ) 


#define ISPControllerV3_StartV2(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV2(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController,pProductCode,pProductVersion,pProductBuild) ) 


#define ISPControllerV3_StopV2(This,timeoutMs,stopType)	\
    ( (This)->lpVtbl -> StopV2(This,timeoutMs,stopType) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISPControllerV3_INTERFACE_DEFINED__ */


#ifndef __ISPControllerV4_INTERFACE_DEFINED__
#define __ISPControllerV4_INTERFACE_DEFINED__

/* interface ISPControllerV4 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ISPControllerV4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("566DC5CA-A3C4-4959-AB92-37606E12AAFF")
    ISPControllerV4 : public ISPControllerV3
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StartV3( 
            /* [in] */ BSTR pCoreFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISPControllerV4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISPControllerV4 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISPControllerV4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISPControllerV4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISPControllerV4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISPControllerV4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISPControllerV4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISPControllerV4 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ISPControllerV4 * This,
            /* [in] */ BSTR pCoreFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ISPControllerV4 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EnableProtection )( 
            ISPControllerV4 * This,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DisableProtection )( 
            ISPControllerV4 * This,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ChangeMode )( 
            ISPControllerV4 * This,
            /* [in] */ _SpStartMode Mode,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetFileProtection )( 
            ISPControllerV4 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [in] */ unsigned long Flags,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetRegistryProtection )( 
            ISPControllerV4 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [in] */ unsigned long Flags,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ProtectUserKeys )( 
            ISPControllerV4 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QuarantineProcess )( 
            ISPControllerV4 * This,
            /* [in] */ unsigned long Pid,
            /* [in] */ VARIANT_BOOL Add,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *TerminateProc )( 
            ISPControllerV4 * This,
            /* [in] */ unsigned long Pid,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestrainFile )( 
            ISPControllerV4 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DorFile )( 
            ISPControllerV4 * This,
            /* [in] */ BSTR File,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetRefCount )( 
            ISPControllerV4 * This,
            /* [out] */ unsigned long *RefCount,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetProcessProtection )( 
            ISPControllerV4 * This,
            /* [in] */ VARIANT_BOOL Add,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ISPControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ISPControllerV4 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetMode )( 
            ISPControllerV4 * This,
            /* [out] */ _SpStartMode *Mode,
            /* [retval][out] */ unsigned long *Status);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectionState )( 
            ISPControllerV4 * This,
            /* [retval][out] */ long *pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Uninstall )( 
            ISPControllerV4 * This,
            /* [in] */ VARIANT_BOOL UpdateConfig,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            ISPControllerV4 * This,
            /* [in] */ BSTR pCoreFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopV2 )( 
            ISPControllerV4 * This,
            /* [in] */ long timeoutMs,
            /* [in] */ _SpStopType stopType);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV3 )( 
            ISPControllerV4 * This,
            /* [in] */ BSTR pCoreFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        END_INTERFACE
    } ISPControllerV4Vtbl;

    interface ISPControllerV4
    {
        CONST_VTBL struct ISPControllerV4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISPControllerV4_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISPControllerV4_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISPControllerV4_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISPControllerV4_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISPControllerV4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISPControllerV4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISPControllerV4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISPControllerV4_Start(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController)	\
    ( (This)->lpVtbl -> Start(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController) ) 

#define ISPControllerV4_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define ISPControllerV4_EnableProtection(This,Status)	\
    ( (This)->lpVtbl -> EnableProtection(This,Status) ) 

#define ISPControllerV4_DisableProtection(This,Status)	\
    ( (This)->lpVtbl -> DisableProtection(This,Status) ) 

#define ISPControllerV4_ChangeMode(This,Mode,Status)	\
    ( (This)->lpVtbl -> ChangeMode(This,Mode,Status) ) 

#define ISPControllerV4_SetFileProtection(This,Path,Add,Persist,Flags,Status)	\
    ( (This)->lpVtbl -> SetFileProtection(This,Path,Add,Persist,Flags,Status) ) 

#define ISPControllerV4_SetRegistryProtection(This,Path,Add,Persist,Flags,Status)	\
    ( (This)->lpVtbl -> SetRegistryProtection(This,Path,Add,Persist,Flags,Status) ) 

#define ISPControllerV4_ProtectUserKeys(This,Path,Add,Persist,Status)	\
    ( (This)->lpVtbl -> ProtectUserKeys(This,Path,Add,Persist,Status) ) 

#define ISPControllerV4_QuarantineProcess(This,Pid,Add,Status)	\
    ( (This)->lpVtbl -> QuarantineProcess(This,Pid,Add,Status) ) 

#define ISPControllerV4_TerminateProc(This,Pid,Status)	\
    ( (This)->lpVtbl -> TerminateProc(This,Pid,Status) ) 

#define ISPControllerV4_RestrainFile(This,Path,Add,Persist,Status)	\
    ( (This)->lpVtbl -> RestrainFile(This,Path,Add,Persist,Status) ) 

#define ISPControllerV4_DorFile(This,File,Status)	\
    ( (This)->lpVtbl -> DorFile(This,File,Status) ) 

#define ISPControllerV4_GetRefCount(This,RefCount,Status)	\
    ( (This)->lpVtbl -> GetRefCount(This,RefCount,Status) ) 

#define ISPControllerV4_SetProcessProtection(This,Add,Status)	\
    ( (This)->lpVtbl -> SetProcessProtection(This,Add,Status) ) 

#define ISPControllerV4_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define ISPControllerV4_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ISPControllerV4_GetMode(This,Mode,Status)	\
    ( (This)->lpVtbl -> GetMode(This,Mode,Status) ) 

#define ISPControllerV4_get_ProtectionState(This,pVal)	\
    ( (This)->lpVtbl -> get_ProtectionState(This,pVal) ) 

#define ISPControllerV4_Uninstall(This,UpdateConfig,Status)	\
    ( (This)->lpVtbl -> Uninstall(This,UpdateConfig,Status) ) 


#define ISPControllerV4_StartV2(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV2(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController,pProductCode,pProductVersion,pProductBuild) ) 


#define ISPControllerV4_StopV2(This,timeoutMs,stopType)	\
    ( (This)->lpVtbl -> StopV2(This,timeoutMs,stopType) ) 


#define ISPControllerV4_StartV3(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController,pTelemetryController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV3(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController,pTelemetryController,pProductCode,pProductVersion,pProductBuild) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISPControllerV4_INTERFACE_DEFINED__ */


#ifndef __ISPControllerV5_INTERFACE_DEFINED__
#define __ISPControllerV5_INTERFACE_DEFINED__

/* interface ISPControllerV5 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ISPControllerV5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("61DF8ACF-EC61-4D69-A543-20EA450E1A84")
    ISPControllerV5 : public ISPControllerV4
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetDriverState( 
            /* [retval][out] */ _SProtState *pState) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetDriverStatus( 
            /* [retval][out] */ _SProtStatus *pStatus) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISPControllerV5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISPControllerV5 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISPControllerV5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISPControllerV5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISPControllerV5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISPControllerV5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISPControllerV5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISPControllerV5 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Start )( 
            ISPControllerV5 * This,
            /* [in] */ BSTR pCoreFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Stop )( 
            ISPControllerV5 * This,
            /* [in] */ long timeoutMs);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *EnableProtection )( 
            ISPControllerV5 * This,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DisableProtection )( 
            ISPControllerV5 * This,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ChangeMode )( 
            ISPControllerV5 * This,
            /* [in] */ _SpStartMode Mode,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetFileProtection )( 
            ISPControllerV5 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [in] */ unsigned long Flags,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetRegistryProtection )( 
            ISPControllerV5 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [in] */ unsigned long Flags,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ProtectUserKeys )( 
            ISPControllerV5 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *QuarantineProcess )( 
            ISPControllerV5 * This,
            /* [in] */ unsigned long Pid,
            /* [in] */ VARIANT_BOOL Add,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *TerminateProc )( 
            ISPControllerV5 * This,
            /* [in] */ unsigned long Pid,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RestrainFile )( 
            ISPControllerV5 * This,
            /* [in] */ BSTR Path,
            /* [in] */ VARIANT_BOOL Add,
            /* [in] */ VARIANT_BOOL Persist,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DorFile )( 
            ISPControllerV5 * This,
            /* [in] */ BSTR File,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetRefCount )( 
            ISPControllerV5 * This,
            /* [out] */ unsigned long *RefCount,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetProcessProtection )( 
            ISPControllerV5 * This,
            /* [in] */ VARIANT_BOOL Add,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PrepareUpdate )( 
            ISPControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FinishUpdate )( 
            ISPControllerV5 * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetMode )( 
            ISPControllerV5 * This,
            /* [out] */ _SpStartMode *Mode,
            /* [retval][out] */ unsigned long *Status);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ProtectionState )( 
            ISPControllerV5 * This,
            /* [retval][out] */ long *pVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Uninstall )( 
            ISPControllerV5 * This,
            /* [in] */ VARIANT_BOOL UpdateConfig,
            /* [retval][out] */ unsigned long *Status);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV2 )( 
            ISPControllerV5 * This,
            /* [in] */ BSTR pCoreFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopV2 )( 
            ISPControllerV5 * This,
            /* [in] */ long timeoutMs,
            /* [in] */ _SpStopType stopType);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartV3 )( 
            ISPControllerV5 * This,
            /* [in] */ BSTR pCoreFolderPath,
            /* [in] */ BSTR pDataPath,
            /* [in] */ /* external definition not present */ ILogController *pLogController,
            /* [in] */ /* external definition not present */ ILicenseController *pLicenseController,
            /* [in] */ /* external definition not present */ ITelemetryController *pTelemetryController,
            /* [in] */ BSTR pProductCode,
            /* [in] */ BSTR pProductVersion,
            /* [in] */ BSTR pProductBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetDriverState )( 
            ISPControllerV5 * This,
            /* [retval][out] */ _SProtState *pState);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetDriverStatus )( 
            ISPControllerV5 * This,
            /* [retval][out] */ _SProtStatus *pStatus);
        
        END_INTERFACE
    } ISPControllerV5Vtbl;

    interface ISPControllerV5
    {
        CONST_VTBL struct ISPControllerV5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISPControllerV5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISPControllerV5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISPControllerV5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISPControllerV5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISPControllerV5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISPControllerV5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISPControllerV5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISPControllerV5_Start(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController)	\
    ( (This)->lpVtbl -> Start(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController) ) 

#define ISPControllerV5_Stop(This,timeoutMs)	\
    ( (This)->lpVtbl -> Stop(This,timeoutMs) ) 

#define ISPControllerV5_EnableProtection(This,Status)	\
    ( (This)->lpVtbl -> EnableProtection(This,Status) ) 

#define ISPControllerV5_DisableProtection(This,Status)	\
    ( (This)->lpVtbl -> DisableProtection(This,Status) ) 

#define ISPControllerV5_ChangeMode(This,Mode,Status)	\
    ( (This)->lpVtbl -> ChangeMode(This,Mode,Status) ) 

#define ISPControllerV5_SetFileProtection(This,Path,Add,Persist,Flags,Status)	\
    ( (This)->lpVtbl -> SetFileProtection(This,Path,Add,Persist,Flags,Status) ) 

#define ISPControllerV5_SetRegistryProtection(This,Path,Add,Persist,Flags,Status)	\
    ( (This)->lpVtbl -> SetRegistryProtection(This,Path,Add,Persist,Flags,Status) ) 

#define ISPControllerV5_ProtectUserKeys(This,Path,Add,Persist,Status)	\
    ( (This)->lpVtbl -> ProtectUserKeys(This,Path,Add,Persist,Status) ) 

#define ISPControllerV5_QuarantineProcess(This,Pid,Add,Status)	\
    ( (This)->lpVtbl -> QuarantineProcess(This,Pid,Add,Status) ) 

#define ISPControllerV5_TerminateProc(This,Pid,Status)	\
    ( (This)->lpVtbl -> TerminateProc(This,Pid,Status) ) 

#define ISPControllerV5_RestrainFile(This,Path,Add,Persist,Status)	\
    ( (This)->lpVtbl -> RestrainFile(This,Path,Add,Persist,Status) ) 

#define ISPControllerV5_DorFile(This,File,Status)	\
    ( (This)->lpVtbl -> DorFile(This,File,Status) ) 

#define ISPControllerV5_GetRefCount(This,RefCount,Status)	\
    ( (This)->lpVtbl -> GetRefCount(This,RefCount,Status) ) 

#define ISPControllerV5_SetProcessProtection(This,Add,Status)	\
    ( (This)->lpVtbl -> SetProcessProtection(This,Add,Status) ) 

#define ISPControllerV5_PrepareUpdate(This)	\
    ( (This)->lpVtbl -> PrepareUpdate(This) ) 

#define ISPControllerV5_FinishUpdate(This)	\
    ( (This)->lpVtbl -> FinishUpdate(This) ) 

#define ISPControllerV5_GetMode(This,Mode,Status)	\
    ( (This)->lpVtbl -> GetMode(This,Mode,Status) ) 

#define ISPControllerV5_get_ProtectionState(This,pVal)	\
    ( (This)->lpVtbl -> get_ProtectionState(This,pVal) ) 

#define ISPControllerV5_Uninstall(This,UpdateConfig,Status)	\
    ( (This)->lpVtbl -> Uninstall(This,UpdateConfig,Status) ) 


#define ISPControllerV5_StartV2(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV2(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController,pProductCode,pProductVersion,pProductBuild) ) 


#define ISPControllerV5_StopV2(This,timeoutMs,stopType)	\
    ( (This)->lpVtbl -> StopV2(This,timeoutMs,stopType) ) 


#define ISPControllerV5_StartV3(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController,pTelemetryController,pProductCode,pProductVersion,pProductBuild)	\
    ( (This)->lpVtbl -> StartV3(This,pCoreFolderPath,pDataPath,pLogController,pLicenseController,pTelemetryController,pProductCode,pProductVersion,pProductBuild) ) 


#define ISPControllerV5_GetDriverState(This,pState)	\
    ( (This)->lpVtbl -> GetDriverState(This,pState) ) 

#define ISPControllerV5_GetDriverStatus(This,pStatus)	\
    ( (This)->lpVtbl -> GetDriverStatus(This,pStatus) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISPControllerV5_INTERFACE_DEFINED__ */


#ifndef __ISPControllerEvents_INTERFACE_DEFINED__
#define __ISPControllerEvents_INTERFACE_DEFINED__

/* interface ISPControllerEvents */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ISPControllerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B9442AA1-AEB8-4FB4-B998-BFBC37BA8A99")
    ISPControllerEvents : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StateChangedCallback( 
            /* [in] */ _SpState spState) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ConfigChangedCallback( 
            /* [in] */ _SpOptionName name,
            /* [in] */ VARIANT value) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISPControllerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISPControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISPControllerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISPControllerEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISPControllerEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISPControllerEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISPControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISPControllerEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StateChangedCallback )( 
            ISPControllerEvents * This,
            /* [in] */ _SpState spState);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ConfigChangedCallback )( 
            ISPControllerEvents * This,
            /* [in] */ _SpOptionName name,
            /* [in] */ VARIANT value);
        
        END_INTERFACE
    } ISPControllerEventsVtbl;

    interface ISPControllerEvents
    {
        CONST_VTBL struct ISPControllerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISPControllerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISPControllerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISPControllerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISPControllerEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISPControllerEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISPControllerEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISPControllerEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISPControllerEvents_StateChangedCallback(This,spState)	\
    ( (This)->lpVtbl -> StateChangedCallback(This,spState) ) 

#define ISPControllerEvents_ConfigChangedCallback(This,name,value)	\
    ( (This)->lpVtbl -> ConfigChangedCallback(This,name,value) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISPControllerEvents_INTERFACE_DEFINED__ */


#ifndef ___ISPControllerEvents_DISPINTERFACE_DEFINED__
#define ___ISPControllerEvents_DISPINTERFACE_DEFINED__

/* dispinterface _ISPControllerEvents */
/* [uuid] */ 


EXTERN_C const IID DIID__ISPControllerEvents;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("473BC184-760C-4255-A118-E8064C4EC595")
    _ISPControllerEvents : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _ISPControllerEventsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ISPControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ISPControllerEvents * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ISPControllerEvents * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ISPControllerEvents * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ISPControllerEvents * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ISPControllerEvents * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ISPControllerEvents * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ISPControllerEventsVtbl;

    interface _ISPControllerEvents
    {
        CONST_VTBL struct _ISPControllerEventsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ISPControllerEvents_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ISPControllerEvents_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ISPControllerEvents_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ISPControllerEvents_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ISPControllerEvents_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ISPControllerEvents_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ISPControllerEvents_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___ISPControllerEvents_DISPINTERFACE_DEFINED__ */


#ifndef __ISPControllerEventsV2_INTERFACE_DEFINED__
#define __ISPControllerEventsV2_INTERFACE_DEFINED__

/* interface ISPControllerEventsV2 */
/* [object][oleautomation][nonextensible][dual][uuid] */ 


EXTERN_C const IID IID_ISPControllerEventsV2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("616E9BE3-358B-4C06-8AAB-0ACF8D089931")
    ISPControllerEventsV2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StateChangedCallback2( 
            /* [in] */ _SProtState spState) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StatusChangedCallback( 
            /* [in] */ _SProtStatus spStatus) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISPControllerEventsV2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISPControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISPControllerEventsV2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISPControllerEventsV2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISPControllerEventsV2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISPControllerEventsV2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISPControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISPControllerEventsV2 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StateChangedCallback2 )( 
            ISPControllerEventsV2 * This,
            /* [in] */ _SProtState spState);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StatusChangedCallback )( 
            ISPControllerEventsV2 * This,
            /* [in] */ _SProtStatus spStatus);
        
        END_INTERFACE
    } ISPControllerEventsV2Vtbl;

    interface ISPControllerEventsV2
    {
        CONST_VTBL struct ISPControllerEventsV2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISPControllerEventsV2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISPControllerEventsV2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISPControllerEventsV2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISPControllerEventsV2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISPControllerEventsV2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISPControllerEventsV2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISPControllerEventsV2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISPControllerEventsV2_StateChangedCallback2(This,spState)	\
    ( (This)->lpVtbl -> StateChangedCallback2(This,spState) ) 

#define ISPControllerEventsV2_StatusChangedCallback(This,spStatus)	\
    ( (This)->lpVtbl -> StatusChangedCallback(This,spStatus) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISPControllerEventsV2_INTERFACE_DEFINED__ */


#ifndef ___ISPControllerEventsV2_DISPINTERFACE_DEFINED__
#define ___ISPControllerEventsV2_DISPINTERFACE_DEFINED__

/* dispinterface _ISPControllerEventsV2 */
/* [uuid] */ 


EXTERN_C const IID DIID__ISPControllerEventsV2;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("7196E77C-8EA5-4824-92C9-BAE8671149FA")
    _ISPControllerEventsV2 : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct _ISPControllerEventsV2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ISPControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ISPControllerEventsV2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ISPControllerEventsV2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ISPControllerEventsV2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ISPControllerEventsV2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ISPControllerEventsV2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ISPControllerEventsV2 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ISPControllerEventsV2Vtbl;

    interface _ISPControllerEventsV2
    {
        CONST_VTBL struct _ISPControllerEventsV2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ISPControllerEventsV2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ISPControllerEventsV2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ISPControllerEventsV2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ISPControllerEventsV2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ISPControllerEventsV2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ISPControllerEventsV2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ISPControllerEventsV2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* ___ISPControllerEventsV2_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_SPController;

#ifdef __cplusplus

class DECLSPEC_UUID("36A65E46-6CC1-4CA2-B51E-F4DD8C993DDC")
SPController;
#endif
#endif /* __SPControllerCOMLib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


